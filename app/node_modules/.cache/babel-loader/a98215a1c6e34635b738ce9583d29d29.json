{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@esko/cloud-ui-components\";\nimport { ListItem, ListItemIcon, ListItemText, Popover } from \"@material-ui/core\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { resolveIcon } from \"../../utils/icons\";\nvar actionClasses = makeStyles(function (theme) {\n  return {\n    flexContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      boxSizing: \"border-box\",\n      flexWrap: \"wrap\",\n      \"& > *\": {\n        margin: theme.spacing(0.5)\n      }\n    },\n    rightAlign: {\n      justifyContent: \"flex-end\"\n    },\n    iconSpace: {\n      minWidth: 35\n    }\n  };\n});\nexport var actionConditionsPropValues = {\n  MULTIPLE: \"multiple\",\n  SINGLE: \"single\",\n  NONE: \"none\"\n};\nvar actionSelectionConditions = {\n  MULTIPLE: function MULTIPLE(n) {\n    return n > 0;\n  },\n  SINGLE: function SINGLE(n) {\n    return n === 1;\n  },\n  NONE: function NONE(n) {\n    return n === 0;\n  }\n};\n\nvar getActionComponents = function getActionComponents(props) {\n  var _props$actions = props.actions,\n      actions = _props$actions === void 0 ? [] : _props$actions,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? [] : _props$selected,\n      clearSelected = props.clearSelected,\n      selectedRowData = props.selectedRowData,\n      asDropdown = props.asDropdown,\n      classes = props.classes;\n  return actions.map(function (action, actIdx) {\n    var icon = action.icon,\n        label = action.label,\n        condition = action.condition,\n        _onClick = action.onClick,\n        title = action.title,\n        color = action.color;\n    var selectedLen = selected.length;\n    var evalCondition = typeof condition === \"string\" && actionSelectionConditions[condition.toUpperCase()] && actionSelectionConditions[condition.toUpperCase()](selectedLen) || typeof condition === \"function\" && condition(selected) || typeof condition === \"undefined\" && true;\n    return evalCondition ? !asDropdown ? /*#__PURE__*/React.createElement(Button, {\n      color: color,\n      title: title,\n      key: actIdx,\n      startIcon: icon,\n      onClick: function onClick() {\n        return _onClick({\n          selected: selected,\n          clearSelected: clearSelected,\n          selectedRowData: selectedRowData\n        });\n      }\n    }, label) : /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      title: title,\n      key: actIdx,\n      onClick: function onClick() {\n        return _onClick({\n          selected: selected,\n          clearSelected: clearSelected,\n          selectedRowData: selectedRowData\n        });\n      }\n    }, icon && /*#__PURE__*/React.createElement(ListItemIcon, {\n      className: classes.iconSpace\n    }, resolveIcon(icon)), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: label\n    })) : \"\";\n  }).filter(function (item) {\n    return !!item;\n  });\n};\n\nexport var Actions = function Actions(props) {\n  var alignRight = props.alignRight,\n      asDropdown = props.asDropdown,\n      _props$actionsDropdow = props.actionsDropdownText,\n      actionsDropdownText = _props$actionsDropdow === void 0 ? \"Actions\" : _props$actionsDropdow;\n  var classes = actionClasses();\n  var actionComponents = getActionComponents(Object.assign({\n    classes: classes\n  }, props));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.flexContainer, _defineProperty({}, classes.rightAlign, alignRight))\n  }, !!actionComponents.length && /*#__PURE__*/React.createElement(React.Fragment, null, asDropdown ? /*#__PURE__*/React.createElement(PopupState, {\n    variant: \"popover\",\n    popupId: \"add-groups-popover\"\n  }, function (popupState) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, Object.assign({\n      color: \"primary\",\n      title: \"actions\",\n      key: \"actions_dropdown\"\n    }, bindTrigger(popupState), {\n      pullDown: true\n    }), actionsDropdownText), /*#__PURE__*/React.createElement(Popover, Object.assign({}, bindPopover(popupState), {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      disableRestoreFocus: true\n    }), actionComponents));\n  }) : actionComponents));\n};\nActions.propTypes = {\n  actions: PropTypes.array,\n  selected: PropTypes.array,\n  alignRight: PropTypes.bool,\n  clearSelected: PropTypes.func,\n  selectedRowData: PropTypes.object,\n  asDropdown: PropTypes.bool,\n  actionsDropdownText: PropTypes.string\n};","map":{"version":3,"sources":["../../../../src/components/DataView/actions.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@esko/cloud-ui-components\";\nimport { ListItem, ListItemIcon, ListItemText, Popover } from \"@material-ui/core\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { resolveIcon } from \"../../utils/icons\";\nconst actionClasses = makeStyles(theme => ({\n    flexContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        boxSizing: \"border-box\",\n        flexWrap: \"wrap\",\n        \"& > *\": {\n            margin: theme.spacing(0.5)\n        }\n    },\n    rightAlign: {\n        justifyContent: \"flex-end\"\n    },\n    iconSpace: {\n        minWidth: 35\n    }\n}));\nexport const actionConditionsPropValues = {\n    MULTIPLE: \"multiple\",\n    SINGLE: \"single\",\n    NONE: \"none\"\n};\nconst actionSelectionConditions = {\n    MULTIPLE: n => n > 0,\n    SINGLE: n => n === 1,\n    NONE: n => n === 0\n};\nconst getActionComponents = (props) => {\n    const { actions = [], selected = [], clearSelected, selectedRowData, asDropdown, classes } = props;\n    return actions\n        .map((action, actIdx) => {\n        const { icon, label, condition, onClick, title, color } = action;\n        const selectedLen = selected.length;\n        const evalCondition = (typeof condition === \"string\" &&\n            actionSelectionConditions[condition.toUpperCase()] &&\n            actionSelectionConditions[condition.toUpperCase()](selectedLen)) ||\n            (typeof condition === \"function\" && condition(selected)) ||\n            (typeof condition === \"undefined\" && true);\n        return evalCondition ? (!asDropdown ? (React.createElement(Button, { color: color, title: title, key: actIdx, startIcon: icon, onClick: () => onClick({ selected, clearSelected, selectedRowData }) }, label)) : (React.createElement(ListItem, { button: true, title: title, key: actIdx, onClick: () => onClick({ selected, clearSelected, selectedRowData }) },\n            icon && React.createElement(ListItemIcon, { className: classes.iconSpace }, resolveIcon(icon)),\n            React.createElement(ListItemText, { primary: label })))) : (\"\");\n    })\n        .filter(item => !!item);\n};\nexport const Actions = props => {\n    const { alignRight, asDropdown, actionsDropdownText = \"Actions\" } = props;\n    const classes = actionClasses();\n    const actionComponents = getActionComponents(Object.assign({ classes }, props));\n    return React.createElement(\"div\", { className: clsx(classes.flexContainer, { [classes.rightAlign]: alignRight }) }, !!actionComponents.length && React.createElement(React.Fragment, null, asDropdown ?\n        React.createElement(PopupState, { variant: \"popover\", popupId: \"add-groups-popover\" }, popupState => (React.createElement(React.Fragment, null,\n            React.createElement(Button, Object.assign({ color: \"primary\", title: \"actions\", key: \"actions_dropdown\" }, bindTrigger(popupState), { pullDown: true }), actionsDropdownText),\n            React.createElement(Popover, Object.assign({}, bindPopover(popupState), { anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"right\"\n                }, transformOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"right\"\n                }, disableRestoreFocus: true }), actionComponents))))\n        :\n            actionComponents));\n};\nActions.propTypes = {\n    actions: PropTypes.array,\n    selected: PropTypes.array,\n    alignRight: PropTypes.bool,\n    clearSelected: PropTypes.func,\n    selectedRowData: PropTypes.object,\n    asDropdown: PropTypes.bool,\n    actionsDropdownText: PropTypes.string\n};\n//# sourceMappingURL=actions.js.map"]},"metadata":{},"sourceType":"module"}