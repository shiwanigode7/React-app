{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Person from '@material-ui/icons/Person';\nimport { ListItemText, Avatar, ListItemAvatar, Badge } from \"@material-ui/core\";\nimport ConditionalWrapper from \"../../utils/ConditionalWrapper\";\nimport { resolveIcon } from \"../../utils/icons\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    userContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    smallSeparation: {\n      minWidth: theme.spacing(5)\n    },\n    largeSeparation: {\n      minWidth: theme.spacing(12)\n    },\n    small: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      fontSize: 14\n    },\n    regular: {\n      fontSize: 16\n    },\n    large: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n      fontSize: 24\n    },\n    nameText: {\n      wordBreak: \"break-word\",\n      whiteSpace: \"break-spaces\",\n      lineHeight: \"1rem\",\n      //minimal to support 2 line names\n      maxHeight: 50,\n      overflow: \"hidden\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    action: {\n      cursor: \"pointer\"\n    },\n    badgeIconClass: {\n      backgroundColor: theme.palette.info.main,\n      color: theme.palette.info.contrastText,\n      padding: 2,\n      cursor: \"pointer\"\n    },\n    userColor: function userColor(props) {\n      return {\n        color: theme.palette.getContrastText(theme.palette.getUserColor ? theme.palette.getUserColor(props.colorKey) : theme.palette.grey[400] || \"#bdbdbd\"),\n        backgroundColor: theme.palette.getUserColor ? theme.palette.getUserColor(props.colorKey) : theme.palette.grey[400] || \"#bdbdbd\"\n      };\n    },\n    listItemNoTopBottomPad: {\n      paddingBottom: 0,\n      paddingTop: 0\n    },\n    listItemAvatarOnly: {\n      justifyContent: \"center\"\n    },\n    avatarOnly: {\n      minWidth: \"unset\"\n    },\n    listItemVertical: {\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    verticalAvatar: {\n      minWidth: \"unset\"\n    },\n    centerUserName: {\n      textAlign: \"center\"\n    }\n  };\n});\n\nvar calculateDisplayName = function calculateDisplayName(usrInfo, flast) {\n  var firstName = usrInfo.firstName,\n      lastName = usrInfo.lastName,\n      displayName = usrInfo.displayName; //has first and last\n\n  var solvedName = firstName && lastName ? flast ? firstName + \" \" + lastName : lastName + \", \" + firstName : \"\"; //has full display name\n\n  solvedName = !solvedName && displayName ? displayName : solvedName; //has any of the first and last\n\n  solvedName = !solvedName && (firstName && !lastName || !firstName && lastName) ? firstName || lastName : solvedName;\n  return solvedName || undefined;\n};\n\nvar actionBadge = function actionBadge(_ref) {\n  var iconOnClick = _ref.iconOnClick,\n      badgeIconClass = _ref.badgeIconClass,\n      icon = _ref.icon,\n      iconTitle = _ref.iconTitle;\n  return function (children) {\n    return /*#__PURE__*/React.createElement(Badge, {\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      onClick: iconOnClick,\n      classes: {\n        badge: badgeIconClass\n      },\n      badgeContent: resolveIcon(icon),\n      title: title\n    }, children);\n  };\n};\n\nexport var Variants = {\n  AVATAR_ONLY: \"avatarOnly\",\n  VERTICAL: \"vertical\",\n  HORIZONTAL: \"horizontal\"\n};\n\nvar getVariant = function getVariant(variantProp) {\n  return Object.keys(Variants).map(function (key) {\n    return Variants[key];\n  }).includes(variantProp) ? variantProp : Variants.HORIZONTAL;\n};\n\nexport default function UserBadge(props) {\n  var _clsx, _clsx2, _clsx3;\n\n  var _props$firstThanLastN = props.firstThanLastName,\n      firstThanLastName = _props$firstThanLastN === void 0 ? true : _props$firstThanLastN,\n      size = props.size,\n      _props$userInfo = props.userInfo,\n      userInfo = _props$userInfo === void 0 ? {} : _props$userInfo,\n      variant = props.variant,\n      onClick = props.onClick,\n      icon = props.icon,\n      iconTitle = props.iconTitle,\n      iconOnClick = props.iconOnClick,\n      title = props.title,\n      className = props.className;\n  var calculatedDisplayName = calculateDisplayName(userInfo, firstThanLastName);\n  var currVariant = getVariant(variant);\n  var avatarOnly = currVariant === Variants.AVATAR_ONLY;\n  var vertical = currVariant === Variants.VERTICAL;\n  var colorKey = !!userInfo.firstName && !!userInfo.lastName ? firstThanLastName ? userInfo.firstName[0] + userInfo.lastName[0] : userInfo.lastName[0] + userInfo.firstName[0] : calculatedDisplayName && calculatedDisplayName[0] || \"user\";\n  var classes = useStyles({\n    colorKey: colorKey\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.userContainer, (_clsx = {}, _defineProperty(_clsx, classes.listItemNoTopBottomPad, !vertical), _defineProperty(_clsx, classes.listItemAvatarOnly, avatarOnly), _defineProperty(_clsx, classes.listItemVertical, vertical), _clsx), className)\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    className: clsx((_clsx2 = {}, _defineProperty(_clsx2, classes.avatarOnly, avatarOnly || vertical), _defineProperty(_clsx2, classes.smallSeparation, size === \"small\"), _defineProperty(_clsx2, classes.largeSeparation, size === \"large\"), _clsx2))\n  }, /*#__PURE__*/React.createElement(ConditionalWrapper, {\n    wrapper: actionBadge(Object.assign({\n      iconOnClick: iconOnClick,\n      icon: icon,\n      iconTitle: iconTitle\n    }, classes)),\n    condition: iconOnClick && icon\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: userInfo.avatar,\n    className: clsx(classes.userColor, (_clsx3 = {}, _defineProperty(_clsx3, classes.small, size === \"small\"), _defineProperty(_clsx3, classes.large, size === \"large\"), _defineProperty(_clsx3, classes.regular, [\"large\", \"small\"].indexOf(size) === -1), _defineProperty(_clsx3, classes.action, !!onClick), _defineProperty(_clsx3, classes.avatarOnly, avatarOnly), _clsx3)),\n    onClick: onClick,\n    title: title || calculatedDisplayName,\n    size: size\n  }, !!userInfo.firstName && !!userInfo.lastName ? firstThanLastName ? userInfo.firstName[0] + userInfo.lastName[0] : userInfo.lastName[0] + userInfo.firstName[0] : !!calculatedDisplayName && calculatedDisplayName[0] || /*#__PURE__*/React.createElement(Person, {\n    fontSize: \"inherit\"\n  })))), !avatarOnly && /*#__PURE__*/React.createElement(ListItemText, {\n    className: clsx(classes.nameText, \"MuiTypography-body1\", _defineProperty({}, classes.centerUserName, vertical)),\n    primary: calculatedDisplayName,\n    secondary: userInfo.description,\n    primaryTypographyProps: {\n      variant: size === \"large\" ? \"h6\" : \"span\"\n    }\n  }));\n}\nUserBadge.propTypes = {\n  firstThanLastName: Proptypes.bool,\n  size: Proptypes.oneOf([\"small\", \"large\"]),\n  userInfo: Proptypes.shape({\n    avatar: Proptypes.string,\n    firstName: Proptypes.string,\n    lastName: Proptypes.string,\n    displayName: Proptypes.string,\n    description: Proptypes.string\n  }),\n  variant: Proptypes.oneOf(Object.values(Variants)),\n  onClick: Proptypes.func,\n  title: Proptypes.string,\n  className: Proptypes.string\n};","map":{"version":3,"sources":["../../../../src/components/UserBadge/index.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Person from '@material-ui/icons/Person';\nimport { ListItemText, Avatar, ListItemAvatar, Badge, } from \"@material-ui/core\";\nimport ConditionalWrapper from \"../../utils/ConditionalWrapper\";\nimport { resolveIcon } from \"../../utils/icons\";\nconst useStyles = makeStyles((theme) => ({\n    userContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n    },\n    smallSeparation: {\n        minWidth: theme.spacing(5)\n    },\n    largeSeparation: {\n        minWidth: theme.spacing(12)\n    },\n    small: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n        fontSize: 14\n    },\n    regular: {\n        fontSize: 16\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n        fontSize: 24\n    },\n    nameText: {\n        wordBreak: \"break-word\",\n        whiteSpace: \"break-spaces\",\n        lineHeight: \"1rem\",\n        //minimal to support 2 line names\n        maxHeight: 50,\n        overflow: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n    },\n    action: {\n        cursor: \"pointer\",\n    },\n    badgeIconClass: {\n        backgroundColor: theme.palette.info.main,\n        color: theme.palette.info.contrastText,\n        padding: 2,\n        cursor: \"pointer\",\n    },\n    userColor: (props) => ({\n        color: theme.palette.getContrastText(theme.palette.getUserColor ? theme.palette.getUserColor(props.colorKey) : theme.palette.grey[400] || \"#bdbdbd\"),\n        backgroundColor: theme.palette.getUserColor ? theme.palette.getUserColor(props.colorKey) : theme.palette.grey[400] || \"#bdbdbd\",\n    }),\n    listItemNoTopBottomPad: {\n        paddingBottom: 0,\n        paddingTop: 0\n    },\n    listItemAvatarOnly: {\n        justifyContent: \"center\",\n    },\n    avatarOnly: {\n        minWidth: \"unset\",\n    },\n    listItemVertical: {\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n    },\n    verticalAvatar: {\n        minWidth: \"unset\",\n    },\n    centerUserName: {\n        textAlign: \"center\"\n    }\n}));\nconst calculateDisplayName = (usrInfo, flast) => {\n    const { firstName, lastName, displayName } = usrInfo;\n    //has first and last\n    let solvedName = firstName && lastName ? (flast ? firstName + \" \" + lastName : lastName + \", \" + firstName) : \"\";\n    //has full display name\n    solvedName = !solvedName && displayName ? displayName : solvedName;\n    //has any of the first and last\n    solvedName =\n        !solvedName && ((firstName && !lastName) || (!firstName && lastName))\n            ? firstName || lastName\n            : solvedName;\n    return solvedName || undefined;\n};\nconst actionBadge = ({ iconOnClick, badgeIconClass, icon, iconTitle }) => (children) => {\n    return (React.createElement(Badge, { overlap: \"circle\", anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"right\",\n        }, onClick: iconOnClick, classes: { badge: badgeIconClass }, badgeContent: resolveIcon(icon), title: title }, children));\n};\nexport const Variants = {\n    AVATAR_ONLY: \"avatarOnly\",\n    VERTICAL: \"vertical\",\n    HORIZONTAL: \"horizontal\",\n};\nconst getVariant = (variantProp) => {\n    return Object.keys(Variants)\n        .map((key) => Variants[key])\n        .includes(variantProp)\n        ? variantProp\n        : Variants.HORIZONTAL;\n};\nexport default function UserBadge(props) {\n    const { firstThanLastName = true, size, userInfo = {}, variant, onClick, icon, iconTitle, iconOnClick, title, className } = props;\n    const calculatedDisplayName = calculateDisplayName(userInfo, firstThanLastName);\n    const currVariant = getVariant(variant);\n    const avatarOnly = currVariant === Variants.AVATAR_ONLY;\n    const vertical = currVariant === Variants.VERTICAL;\n    const colorKey = !!userInfo.firstName && !!userInfo.lastName\n        ? (firstThanLastName ? userInfo.firstName[0] + userInfo.lastName[0] : userInfo.lastName[0] + userInfo.firstName[0])\n        : (calculatedDisplayName && calculatedDisplayName[0]) || \"user\";\n    const classes = useStyles({ colorKey });\n    return (React.createElement(\"div\", { className: clsx(classes.userContainer, {\n            [classes.listItemNoTopBottomPad]: !vertical,\n            [classes.listItemAvatarOnly]: avatarOnly,\n            [classes.listItemVertical]: vertical,\n        }, className) },\n        React.createElement(ListItemAvatar, { className: clsx({\n                [classes.avatarOnly]: avatarOnly || vertical,\n                [classes.smallSeparation]: size === \"small\",\n                [classes.largeSeparation]: size === \"large\",\n            }) },\n            React.createElement(ConditionalWrapper, { wrapper: actionBadge(Object.assign({ iconOnClick, icon, iconTitle }, classes)), condition: iconOnClick && icon },\n                React.createElement(Avatar, { src: userInfo.avatar, className: clsx(classes.userColor, {\n                        [classes.small]: size === \"small\",\n                        [classes.large]: size === \"large\",\n                        [classes.regular]: [\"large\", \"small\"].indexOf(size) === -1,\n                        [classes.action]: !!onClick,\n                        [classes.avatarOnly]: avatarOnly,\n                    }), onClick: onClick, title: title || calculatedDisplayName, size: size }, (!!userInfo.firstName && !!userInfo.lastName\n                    ? (firstThanLastName ? userInfo.firstName[0] + userInfo.lastName[0] : userInfo.lastName[0] + userInfo.firstName[0])\n                    : (!!calculatedDisplayName && calculatedDisplayName[0]) || React.createElement(Person, { fontSize: \"inherit\" }))))),\n        !avatarOnly && (React.createElement(ListItemText, { className: clsx(classes.nameText, \"MuiTypography-body1\", { [classes.centerUserName]: vertical }), primary: calculatedDisplayName, secondary: userInfo.description, primaryTypographyProps: {\n                variant: size === \"large\" ? \"h6\" : \"span\"\n            } }))));\n}\nUserBadge.propTypes = {\n    firstThanLastName: Proptypes.bool,\n    size: Proptypes.oneOf([\"small\", \"large\"]),\n    userInfo: Proptypes.shape({\n        avatar: Proptypes.string,\n        firstName: Proptypes.string,\n        lastName: Proptypes.string,\n        displayName: Proptypes.string,\n        description: Proptypes.string\n    }),\n    variant: Proptypes.oneOf(Object.values(Variants)),\n    onClick: Proptypes.func,\n    title: Proptypes.string,\n    className: Proptypes.string\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}