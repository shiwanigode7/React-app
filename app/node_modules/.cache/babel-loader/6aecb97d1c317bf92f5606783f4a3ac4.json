{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport _ from \"underscore\";\nvar methods = {\n  GET: \"GET\",\n  POST: \"POST\",\n  PUT: \"PUT\",\n  DELETE: \"DELETE\"\n};\nvar headerNames = {\n  contentType: \"Content-Type\"\n};\n\nvar goFetch = function goFetch(_ref) {\n  var _ref$method = _ref.method,\n      method = _ref$method === void 0 ? \"GET\" : _ref$method,\n      url = _ref.url,\n      _ref$query = _ref.query,\n      query = _ref$query === void 0 ? {} : _ref$query,\n      body = _ref.body,\n      headers = _ref.headers,\n      _ref$blob = _ref.blob,\n      blob = _ref$blob === void 0 ? false : _ref$blob;\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var queryStr, newHeaders, response, contentType;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            queryStr = _.map(query, function (val, key) {\n              var encode = function encode(key, val) {\n                return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(val));\n              };\n\n              if (_typeof(val) === \"object\") {\n                // array (or object)\n                return _.map(val, function (x) {\n                  return encode(key, x);\n                }).join(\"&\");\n              } else {\n                return encode(key, val);\n              }\n            }).join(\"&\");\n            newHeaders = {};\n            Object.keys(headers).forEach(function (key) {\n              newHeaders[headerNames[key] ? headerNames[key] : key] = headers[key];\n            });\n            body = body && !blob ? JSON.stringify(body) : body;\n            _context.next = 6;\n            return fetch(\"\".concat(url).concat(queryStr ? \"?\".concat(queryStr) : \"\"), {\n              method: method,\n              headers: newHeaders,\n              body: body\n            });\n\n          case 6:\n            response = _context.sent;\n            contentType = response.headers.get(\"content-type\") || \"\";\n            console.log(\"RESPONSE\", response, response.headers.get(\"content-type\"));\n\n            if (!(response.status >= 400)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(response));\n\n          case 11:\n            if (!(contentType === \"application/json\")) {\n              _context.next = 15;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.json());\n\n          case 15:\n            if (!(contentType.indexOf(\"text\") > -1)) {\n              _context.next = 19;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.text());\n\n          case 19:\n            return _context.abrupt(\"return\", response);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};\n\nexport default {\n  get: function get(_ref2) {\n    var url = _ref2.url,\n        query = _ref2.query,\n        body = _ref2.body,\n        headers = _ref2.headers;\n    return goFetch({\n      method: methods.GET,\n      url: url,\n      query: query,\n      body: body,\n      headers: headers\n    });\n  },\n  post: function post(_ref3) {\n    var url = _ref3.url,\n        query = _ref3.query,\n        body = _ref3.body,\n        headers = _ref3.headers;\n    return goFetch({\n      method: methods.POST,\n      url: url,\n      query: query,\n      body: body,\n      headers: headers\n    });\n  },\n  put: function put(_ref4) {\n    var url = _ref4.url,\n        query = _ref4.query,\n        body = _ref4.body,\n        headers = _ref4.headers,\n        _ref4$blob = _ref4.blob,\n        blob = _ref4$blob === void 0 ? false : _ref4$blob;\n    var z = 0;\n    return goFetch({\n      method: methods.PUT,\n      url: url,\n      query: query,\n      body: body,\n      headers: headers,\n      blob: blob\n    });\n  },\n  \"delete\": function _delete(_ref5) {\n    var url = _ref5.url,\n        query = _ref5.query,\n        body = _ref5.body,\n        headers = _ref5.headers;\n    return goFetch({\n      method: methods.DELETE,\n      url: url,\n      query: query,\n      body: body,\n      headers: headers\n    });\n  }\n};","map":{"version":3,"sources":["../../../../src/data/requests/fetch.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport _ from \"underscore\";\nconst methods = {\n    GET: \"GET\",\n    POST: \"POST\",\n    PUT: \"PUT\",\n    DELETE: \"DELETE\",\n};\nconst headerNames = {\n    contentType: \"Content-Type\"\n};\nconst goFetch = ({ method = \"GET\", url, query = {}, body, headers, blob = false }) => __awaiter(void 0, void 0, void 0, function* () {\n    const queryStr = _.map(query, (val, key) => {\n        const encode = (key, val) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`;\n        if (typeof val === \"object\") {\n            // array (or object)\n            return _.map(val, x => encode(key, x)).join(\"&\");\n        }\n        else {\n            return encode(key, val);\n        }\n    }).join(\"&\");\n    const newHeaders = {};\n    Object.keys(headers).forEach(key => {\n        newHeaders[headerNames[key] ? headerNames[key] : key] = headers[key];\n    });\n    body = body && !blob ? JSON.stringify(body) : body;\n    const response = yield fetch(`${url}${queryStr ? `?${queryStr}` : \"\"}`, { method, headers: newHeaders, body });\n    const contentType = response.headers.get(\"content-type\") || \"\";\n    console.log(\"RESPONSE\", response, response.headers.get(\"content-type\"));\n    if (response.status >= 400) {\n        return Promise.reject(response);\n    }\n    if (contentType === \"application/json\") {\n        return response.json();\n    }\n    else if (contentType.indexOf(\"text\") > -1) {\n        return response.text();\n    }\n    else {\n        return response;\n    }\n});\nexport default {\n    get: ({ url, query, body, headers }) => goFetch({ method: methods.GET, url, query, body, headers }),\n    post: ({ url, query, body, headers }) => goFetch({ method: methods.POST, url, query, body, headers }),\n    put: ({ url, query, body, headers, blob = false }) => {\n        const z = 0;\n        return goFetch({ method: methods.PUT, url, query, body, headers, blob });\n    },\n    delete: ({ url, query, body, headers }) => goFetch({ method: methods.DELETE, url, query, body, headers }),\n};\n//# sourceMappingURL=fetch.js.map"]},"metadata":{},"sourceType":"module"}