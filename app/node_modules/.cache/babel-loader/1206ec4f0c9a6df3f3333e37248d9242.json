{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport { Checkbox } from \"../Checkbox\";\nimport { AutoSizer, Column, Table, InfiniteLoader, defaultTableRowRenderer } from \"react-virtualized\"; //cells and row classes\n\nimport { DefaultCellRenderer, DefaultHeaderRenderer, DefaultRowRenderer } from \"./renderers\"; //unexposed dataview components\n\nimport { SelectAllToggler, SelectCounter, Counter } from \"./selectTools\";\nimport SearchInput from \"../SearchInput\";\nimport { Actions } from \"./actions\";\nimport i18next from \"../../i18n/ecui-i18n\";\nimport { useTranslation, I18nextProvider } from \"react-i18next\";\nvar styles = makeStyles(function (theme) {\n  return {\n    flexContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      boxSizing: \"border-box\"\n    },\n    takeLeft: {\n      flex: 1\n    },\n    toolBar: {\n      padding: theme.spacing(1)\n    },\n    toolBarContainer: {\n      marginBottom: theme.spacing(1.5)\n    },\n    flexWrap: {\n      flexWrap: \"wrap\"\n    },\n    table: {\n      // temporary right-to-left patch, waiting for\n      // https://github.com/bvaughn/react-virtualized/issues/454\n      \"& .ReactVirtualized__Table__headerRow\": {\n        flip: false,\n        paddingRight: theme.direction === \"rtl\" ? \"0 !important\" : undefined\n      }\n    }\n  };\n});\nvar selectTypes = {\n  MULTIPLE: \"multiple\",\n  SINGLE: \"single\"\n};\nvar checkBoxColWidth = 35;\n\nvar selectCheckbox = function selectCheckbox(_a) {\n  var selectableKey = _a.selectableKey,\n      selectedRows = _a.selectedRows,\n      handleSelect = _a.handleSelect,\n      cellProps = __rest(_a, [\"selectableKey\", \"selectedRows\", \"handleSelect\"]);\n\n  var rowData = cellProps.rowData,\n      rowIndex = cellProps.rowIndex;\n  var compareValue = selectableKey ? rowData[selectableKey] : \"\";\n  var checked = false;\n\n  if (selectedRows.indexOf(compareValue) > -1) {\n    checked = true;\n  }\n\n  if (compareValue !== \"\") {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: checked,\n      onClick: function onClick(event) {\n        return handleSelect({\n          rowData: rowData,\n          index: rowIndex,\n          event: event\n        });\n      }\n    });\n  }\n}; //in case select all returns to be in the header\n\n\nvar headerSelectCheckBox = function headerSelectCheckBox(_ref) {\n  var selectedRows = _ref.selectedRows,\n      list = _ref.list,\n      selectKey = _ref.selectKey,\n      handleSelectAll = _ref.handleSelectAll,\n      t = _ref.t;\n  var allSelected = !!selectedRows.length && !list.some(function (item) {\n    return !selectedRows.includes(item[selectKey]);\n  });\n  return /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: selectedRows.length && !allSelected,\n    checked: allSelected,\n    onClick: handleSelectAll,\n    color: \"primary\",\n    title: t(\"selected\", {\n      count: selectedRows.length\n    }) + \": \" + selectedRows.length\n  });\n};\n\nvar getSelectCheckbox = function getSelectCheckbox(_ref2) {\n  var selectableKey = _ref2.selectableKey,\n      total = _ref2.total,\n      selectedRows = _ref2.selectedRows,\n      handleSelect = _ref2.handleSelect,\n      handleSelectAll = _ref2.handleSelectAll,\n      selectallHeader = _ref2.selectallHeader,\n      list = _ref2.list,\n      t = _ref2.t;\n  return /*#__PURE__*/React.createElement(Column, {\n    label: \"\",\n    width: checkBoxColWidth,\n    dataKey: selectableKey,\n    cellRenderer: function cellRenderer(cellProps) {\n      return selectCheckbox(Object.assign({\n        selectableKey: selectableKey,\n        selectedRows: selectedRows,\n        handleSelect: handleSelect\n      }, cellProps));\n    },\n    headerRenderer: selectallHeader ? function () {\n      return headerSelectCheckBox({\n        selectedRows: selectedRows,\n        list: list,\n        selectKey: selectableKey,\n        handleSelectAll: handleSelectAll,\n        t: t\n      });\n    } : DefaultHeaderRenderer,\n    disableSort: true\n  });\n};\n\nvar DataView = function DataView(_a) {\n  var _b;\n\n  var actions = _a.actions,\n      actionsAsDropDown = _a.actionsAsDropDown,\n      selectallHeader = _a.selectallHeader,\n      columns = _a.columns,\n      _a$headerHeight = _a.headerHeight,\n      headerHeight = _a$headerHeight === void 0 ? 48 : _a$headerHeight,\n      _a$heightOfsset = _a.heightOfsset,\n      heightOfsset = _a$heightOfsset === void 0 ? 0 : _a$heightOfsset,\n      _a$list = _a.list,\n      list = _a$list === void 0 ? [] : _a$list,\n      loadMoreRows = _a.loadMoreRows,\n      onRowClick = _a.onRowClick,\n      onSearchChange = _a.onSearchChange,\n      onSelectionChange = _a.onSelectionChange,\n      resultsMessage = _a.resultsMessage,\n      _a$rowHeight = _a.rowHeight,\n      rowHeight = _a$rowHeight === void 0 ? 48 : _a$rowHeight,\n      _a$rowRenderer = _a.rowRenderer,\n      rowRenderer = _a$rowRenderer === void 0 ? DefaultRowRenderer : _a$rowRenderer,\n      _a$searchTriggerMilis = _a.searchTriggerMilisecs,\n      searchTriggerMilisecs = _a$searchTriggerMilis === void 0 ? 500 : _a$searchTriggerMilis,\n      _a$defaultSelectedKey = _a.defaultSelectedKeys,\n      defaultSelectedKeys = _a$defaultSelectedKey === void 0 ? [] : _a$defaultSelectedKey,\n      selectable = _a.selectable,\n      selectableKey = _a.selectableKey,\n      selectedComponent = _a.selectedComponent,\n      selectedRowClass = _a.selectedRowClass,\n      sortBy = _a.sortBy,\n      sortDirection = _a.sortDirection,\n      sortMethod = _a.sortMethod,\n      total = _a.total,\n      tableProps = __rest(_a, [\"actions\", \"actionsAsDropDown\", \"selectallHeader\", \"columns\", \"headerHeight\", \"heightOfsset\", \"list\", \"loadMoreRows\", \"onRowClick\", \"onSearchChange\", \"onSelectionChange\", \"resultsMessage\", \"rowHeight\", \"rowRenderer\", \"searchTriggerMilisecs\", \"defaultSelectedKeys\", \"selectable\", \"selectableKey\", \"selectedComponent\", \"selectedRowClass\", \"sortBy\", \"sortDirection\", \"sortMethod\", \"total\"]);\n\n  var classes = styles();\n  var isSelectableMultiple = selectable === selectTypes.MULTIPLE && !!selectableKey;\n  var isSelectableSingle = selectable === selectTypes.SINGLE && !!selectableKey;\n  var defaultSelectedData = {};\n  list.filter(function (item) {\n    return defaultSelectedKeys.includes(item[selectableKey]);\n  }).forEach(function (row) {\n    defaultSelectedData[row[selectableKey]] = row;\n  }); //limit this resolver to React Virtualizer Table Props\n\n  var _React$useState = React.useState({\n    selectedKeys: _toConsumableArray(defaultSelectedKeys),\n    selectedData: Object.assign({}, defaultSelectedData)\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedRows = _React$useState2[0],\n      setSelectedRows = _React$useState2[1];\n\n  var calculatedRowCount = list.length;\n  var searchTimeToken = React.useRef(\"\");\n\n  var handleOnSearchChange = function handleOnSearchChange(e) {\n    var value = e.target.value;\n    clearTimeout(searchTimeToken.current);\n    searchTimeToken.current = setTimeout(function () {\n      onSearchChange(value);\n    }, searchTriggerMilisecs);\n  };\n\n  var handleSelect = function handleSelect(props) {\n    var event = props.event,\n        index = props.index,\n        value = props.value;\n    event.stopPropagation();\n    event.persist();\n    var selectedValue = value || list[index][selectableKey];\n    var selectedRowData = Object.assign({}, list[index]);\n    setSelectedRows(function (currentSelected) {\n      var newSelectedKeys = [].concat(currentSelected.selectedKeys);\n      var newSelectedData = Object.assign({}, currentSelected.selectedData);\n      var existPosition = currentSelected.selectedKeys.indexOf(selectedValue);\n\n      if (existPosition > -1) {\n        if (isSelectableSingle) {\n          newSelectedKeys = _toConsumableArray(defaultSelectedKeys);\n          newSelectedData = Object.assign({}, defaultSelectedData);\n        } else {\n          if (!defaultSelectedKeys.includes(selectedValue)) {\n            newSelectedKeys.splice(existPosition, 1); //is selected value is set by default not remove it\n\n            delete newSelectedData[selectedValue];\n          }\n        }\n      } else {\n        if (isSelectableSingle) {\n          newSelectedKeys = [defaultSelectedKeys[0] || selectedValue];\n        } else {\n          newSelectedKeys = newSelectedKeys.concat([selectedValue]);\n        }\n\n        newSelectedData[selectedValue] = selectedRowData;\n      }\n\n      if (typeof onSelectionChange === \"function\") {\n        onSelectionChange({\n          newSelectedKeys: newSelectedKeys,\n          newSelectedData: newSelectedData\n        });\n      }\n\n      return {\n        selectedKeys: newSelectedKeys,\n        selectedData: newSelectedData\n      };\n    });\n  };\n\n  var handleSelectAll = function handleSelectAll() {\n    var newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(defaultSelectedKeys), _toConsumableArray(selectedRows.selectedKeys))));\n    var newSelectedData = Object.assign(Object.assign({}, defaultSelectedData), selectedRows.selectedData);\n    var allSelected = !list.some(function (item) {\n      return !newSelectedKeys.includes(item[selectableKey]);\n    });\n\n    if (!allSelected && selectedRows.selectedKeys.length !== list.length) {\n      var visibleSelected = list.map(function (listItem) {\n        return listItem[selectableKey];\n      }).filter(function (listItem) {\n        return listItem;\n      });\n      newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(newSelectedKeys), _toConsumableArray(visibleSelected))));\n      list.forEach(function (item) {\n        newSelectedData[item[selectableKey]] = Object.assign({}, item);\n      });\n    } else if (allSelected) {\n      list.forEach(function (item) {\n        var key = item[selectableKey];\n        newSelectedKeys.splice(newSelectedKeys.indexOf(key), 1);\n        delete newSelectedData[key];\n      });\n      newSelectedKeys = [].concat(_toConsumableArray(defaultSelectedKeys), _toConsumableArray(newSelectedKeys));\n      newSelectedData = Object.assign(Object.assign({}, defaultSelectedData), newSelectedData);\n    }\n\n    if (typeof onSelectionChange === \"function\") {\n      onSelectionChange({\n        newSelectedKeys: newSelectedKeys,\n        newSelectedData: newSelectedData\n      });\n    }\n\n    setSelectedRows({\n      selectedKeys: newSelectedKeys,\n      selectedData: newSelectedData\n    });\n  };\n\n  var handleClearAll = function handleClearAll(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    setSelectedRows({\n      selectedKeys: _toConsumableArray(defaultSelectedKeys),\n      selectedData: Object.assign({}, defaultSelectedData)\n    });\n  };\n\n  var renderRows = React.useCallback(function (rowProps) {\n    var rowSelectableValue = list[rowProps.index][selectableKey];\n    var isSelected = rowSelectableValue && selectedRows.selectedKeys.indexOf(rowSelectableValue) > -1;\n    return rowRenderer(Object.assign(Object.assign({}, rowProps), {\n      selectedKeys: selectedRows.selectedKeys,\n      selectedRowClass: selectedRowClass,\n      isSelected: isSelected\n    }), defaultTableRowRenderer);\n  }, [selectedRows.selectedKeys, list]); //decides between general or column provided sort methods\n\n  var calculatedSortMethod = function calculatedSortMethod(args) {\n    var sortBy = args.sortBy;\n    var sortByColumn = columns.filter(function (col) {\n      return col.dataKey === sortBy && col.sortMethod;\n    });\n    sortByColumn.length ? sortByColumn[0].sortMethod(args) : sortMethod(args);\n  };\n\n  var _useTranslation = useTranslation(\"components\"),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/React.createElement(I18nextProvider, {\n    i18n: i18next\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, (typeof actions !== \"undefined\" || typeof onSearchChange !== \"undefined\") && /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.toolBarContainer)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.flexContainer, classes.flexWrap, classes.toolBar)\n  }, onSearchChange && /*#__PURE__*/React.createElement(SearchInput, {\n    placeHolder: t(\"search\"),\n    onChange: handleOnSearchChange\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.takeLeft)\n  }), !selectallHeader && isSelectableMultiple && /*#__PURE__*/React.createElement(SelectCounter, {\n    selectedComponent: selectedComponent,\n    selectedData: selectedRows.selectedData,\n    selected: selectedRows.selectedKeys,\n    selectKey: selectableKey,\n    handleClearAll: handleClearAll,\n    handleSelect: handleSelect,\n    selectedText: t(\"selected\", {\n      count: (_b = selectedRows === null || selectedRows === void 0 ? void 0 : selectedRows.selectedKeys) === null || _b === void 0 ? void 0 : _b.length\n    }),\n    clearText: t(\"clear\")\n  }), /*#__PURE__*/React.createElement(Actions, {\n    actions: actions,\n    asDropdown: actionsAsDropDown,\n    actionsDropdownText: t(\"action_plural\"),\n    alignRight: true,\n    selected: selectedRows.selectedKeys,\n    selectedRowData: selectedRows.selectedData,\n    clearSelected: handleClearAll\n  })), /*#__PURE__*/React.createElement(Divider, null)), !selectallHeader && isSelectableMultiple && list.length > 0 && /*#__PURE__*/React.createElement(SelectAllToggler, {\n    list: list,\n    selectKey: selectableKey,\n    template: resultsMessage,\n    total: total,\n    selected: selectedRows.selectedKeys,\n    toggleSelectAll: handleSelectAll,\n    selectText: t(\"selectAll\")\n  }) || !selectallHeader && /*#__PURE__*/React.createElement(Counter, {\n    template: resultsMessage,\n    loaded: calculatedRowCount,\n    total: total\n  }), /*#__PURE__*/React.createElement(InfiniteLoader, {\n    isRowLoaded: function isRowLoaded(_ref3) {\n      var index = _ref3.index;\n      return !!list[index];\n    },\n    loadMoreRows: loadMoreRows,\n    rowCount: total,\n    threshold: 10\n  }, function (_ref4) {\n    var onRowsRendered = _ref4.onRowsRendered,\n        registerChild = _ref4.registerChild;\n    return /*#__PURE__*/React.createElement(AutoSizer, null, function (_ref5) {\n      var height = _ref5.height,\n          width = _ref5.width;\n      return /*#__PURE__*/React.createElement(Table, Object.assign({\n        ref: registerChild,\n        onRowsRendered: onRowsRendered,\n        height: height - heightOfsset,\n        width: width,\n        rowHeight: rowHeight,\n        gridStyle: {\n          direction: \"inherit\"\n        },\n        headerHeight: headerHeight,\n        className: classes.table,\n        rowRenderer: function rowRenderer(rowProps) {\n          return renderRows(rowProps);\n        },\n        rowClassName: clsx(classes.flexContainer),\n        rowCount: calculatedRowCount,\n        rowGetter: function rowGetter(_ref6) {\n          var index = _ref6.index;\n          return list[index];\n        },\n        onRowClick: onRowClick ? onRowClick : isSelectableMultiple || isSelectableSingle ? handleSelect : undefined,\n        sort: calculatedSortMethod,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      }, tableProps), isSelectableMultiple && getSelectCheckbox({\n        selectableKey: selectableKey,\n        total: calculatedRowCount,\n        selectedRows: selectedRows.selectedKeys,\n        handleSelect: handleSelect,\n        handleSelectAll: handleSelectAll,\n        selectallHeader: selectallHeader,\n        list: list,\n        t: t\n      }), columns.map(function (_a, index) {\n        var dataKey = _a.dataKey,\n            widthTake = _a.widthTake,\n            colWidth = _a.width,\n            headerClass = _a.headerClass,\n            headerAlign = _a.headerAlign,\n            _a$cellRenderer = _a.cellRenderer,\n            _cellRenderer = _a$cellRenderer === void 0 ? DefaultCellRenderer : _a$cellRenderer,\n            _a$headerRenderer = _a.headerRenderer,\n            _headerRenderer = _a$headerRenderer === void 0 ? DefaultHeaderRenderer : _a$headerRenderer,\n            other = __rest(_a, [\"dataKey\", \"widthTake\", \"width\", \"headerClass\", \"headerAlign\", \"cellRenderer\", \"headerRenderer\"]);\n\n        return /*#__PURE__*/React.createElement(Column, Object.assign({\n          key: dataKey,\n          headerRenderer: function headerRenderer(headerProps) {\n            return _headerRenderer(Object.assign(Object.assign({}, headerProps), {\n              headerClass: headerClass,\n              headerAlign: headerAlign,\n              columnIndex: index,\n              hasSort: !!calculatedSortMethod\n            }));\n          },\n          className: classes.flexContainer,\n          cellRenderer: function cellRenderer(cellProps) {\n            return _cellRenderer(Object.assign(Object.assign({}, cellProps), {\n              columns: columns\n            }));\n          },\n          dataKey: dataKey,\n          width: widthTake ? widthTake * (width - (isSelectableMultiple ? checkBoxColWidth : 0)) : colWidth\n        }, other));\n      }));\n    });\n  })));\n};\n\nDataView.propTypes = {\n  //more desc\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    icon: PropTypes.element,\n    label: PropTypes.string,\n    condition: PropTypes.oneOfType([PropTypes.func, PropTypes.oneOf([\"none\", \"single\", \"multiple\"])]),\n    onClick: PropTypes.func,\n    title: PropTypes.string\n  })),\n  actionsAsDropDown: PropTypes.bool,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    widthTake: PropTypes.number,\n    label: PropTypes.string,\n    dataKey: PropTypes.string,\n    headerAlign: PropTypes.oneOf([\"right\", \"center\", \"left\"]),\n    sortMethod: PropTypes.func,\n    cellRenderer: PropTypes.elementType // ({cellData,columnData,columnIndex,columns,dataKey,isScrolling,parent,rowData,rowIndex}) => element\n\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  heightOfsset: PropTypes.number,\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadMoreRows: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onSearchChange: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n  resultsMessage: PropTypes.func,\n  rowHeight: PropTypes.number,\n  rowRenderer: PropTypes.func,\n\n  /*   rowObject to be manipulated and returned on the component that renders the row\n      ( rowObject, defaultTableRowRenderer) => defaultTableRowRenderer(row);\n      rowObejct: {className, columns, index, isScrolling, key, onRowClick, onRowDoubleClick, onRowRightClick, onRowMouseOver, onRowMouseOut, rowData, style, selectedKeys, selectedRowClass, isSelected}\n  */\n  searchTriggerMilisecs: PropTypes.number,\n  selectallHeader: PropTypes.bool,\n  selectable: PropTypes.oneOf([\"single\", \"multiple\"]),\n  selectableKey: PropTypes.string,\n  selectedComponent: PropTypes.elementType,\n  selectedRowClass: PropTypes.string,\n  sortBy: PropTypes.string,\n  sortDirection: PropTypes.oneOf([\"asc\", \"desc\"]),\n  sortMethod: PropTypes.func,\n  tableProps: PropTypes.any,\n  total: PropTypes.number // the total known rows, used to determine if infinite scroll keeps pulling data\n\n};\nexport default DataView;","map":{"version":3,"sources":["../../../../src/components/DataView/DataView.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,IAAP,MAAiB,MAAjB;AACA,SAAS,UAAT,QAA2B,0BAA3B;AACA,SAAS,OAAT,QAAwB,mBAAxB;AACA,SAAS,QAAT,QAAyB,aAAzB;AACA,SAAS,SAAT,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,cAAnC,EAAmD,uBAAnD,QAAkF,mBAAlF,C,CACA;;AACA,SAAS,mBAAT,EAA8B,qBAA9B,EAAqD,kBAArD,QAA+E,aAA/E,C,CACA;;AACA,SAAS,gBAAT,EAA2B,aAA3B,EAA0C,OAA1C,QAAyD,eAAzD;AACA,OAAO,WAAP,MAAwB,gBAAxB;AACA,SAAS,OAAT,QAAwB,WAAxB;AAEA,OAAO,OAAP,MAAoB,sBAApB;AACA,SAAS,cAAT,EAAyB,eAAzB,QAAgD,eAAhD;AAEA,IAAM,MAAM,GAAG,UAAU,CAAC,UAAA,KAAK;AAAA,SAAK;AACnC,IAAA,aAAa,EAAE;AACd,MAAA,OAAO,EAAE,MADK;AAEd,MAAA,UAAU,EAAE,QAFE;AAGd,MAAA,SAAS,EAAE;AAHG,KADoB;AAMnC,IAAA,QAAQ,EAAE;AACT,MAAA,IAAI,EAAE;AADG,KANyB;AASnC,IAAA,OAAO,EAAE;AACR,MAAA,OAAO,EAAE,KAAK,CAAC,OAAN,CAAc,CAAd;AADD,KAT0B;AAYnC,IAAA,gBAAgB,EAAE;AACjB,MAAA,YAAY,EAAE,KAAK,CAAC,OAAN,CAAc,GAAd;AADG,KAZiB;AAenC,IAAA,QAAQ,EAAE;AACT,MAAA,QAAQ,EAAE;AADD,KAfyB;AAkBnC,IAAA,KAAK,EAAE;AACN;AACA;AACA,+CAAyC;AACxC,QAAA,IAAI,EAAE,KADkC;AAExC,QAAA,YAAY,EAAE,KAAK,CAAC,SAAN,KAAoB,KAApB,GAA4B,cAA5B,GAA6C;AAFnB;AAHnC;AAlB4B,GAAL;AAAA,CAAN,CAAzB;AA4BA,IAAM,WAAW,GAAG;AACnB,EAAA,QAAQ,EAAE,UADS;AAEnB,EAAA,MAAM,EAAE;AAFW,CAApB;AAKA,IAAM,gBAAgB,GAAG,EAAzB;;AAEA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,EAAD,EAAgE;AAA/D,MAAE,aAAF,GAA2C,EAA3C,CAAE,aAAF;AAAA,MAAiB,YAAjB,GAA2C,EAA3C,CAAiB,YAAjB;AAAA,MAA+B,YAA/B,GAA2C,EAA3C,CAA+B,YAA/B;AAAA,MAAgD,SAAhD,GAAyD,MAAA,CAAA,EAAA,EAAzD,CAAA,eAAA,EAAA,cAAA,EAAA,cAAA,CAAyD,CAAzD;;AACvB,MAAQ,OAAR,GAA8B,SAA9B,CAAQ,OAAR;AAAA,MAAiB,QAAjB,GAA8B,SAA9B,CAAiB,QAAjB;AACA,MAAM,YAAY,GAAG,aAAa,GAAG,OAAO,CAAC,aAAD,CAAV,GAA4B,EAA9D;AACA,MAAI,OAAO,GAAG,KAAd;;AACA,MAAI,YAAY,CAAC,OAAb,CAAqB,YAArB,IAAqC,CAAC,CAA1C,EAA6C;AAC5C,IAAA,OAAO,GAAG,IAAV;AACA;;AACD,MAAI,YAAY,KAAK,EAArB,EAAyB;AACxB,wBAAO,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,MAAA,KAAK,EAAC,SAAP;AAAiB,MAAA,OAAO,EAAE,OAA1B;AAAmC,MAAA,OAAO,EAAE,iBAAA,KAAK;AAAA,eAAI,YAAY,CAAC;AAAE,UAAA,OAAO,EAAP,OAAF;AAAW,UAAA,KAAK,EAAE,QAAlB;AAA4B,UAAA,KAAK,EAAL;AAA5B,SAAD,CAAhB;AAAA;AAAjD,KAAT,CAAP;AACA;AACD,CAVD,C,CAYA;;;AACA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,OAA0D;AAAA,MAAvD,YAAuD,QAAvD,YAAuD;AAAA,MAAzC,IAAyC,QAAzC,IAAyC;AAAA,MAAnC,SAAmC,QAAnC,SAAmC;AAAA,MAAxB,eAAwB,QAAxB,eAAwB;AAAA,MAAP,CAAO,QAAP,CAAO;AACtF,MAAM,WAAW,GAAG,CAAC,CAAC,YAAY,CAAC,MAAf,IAAyB,CAAC,IAAI,CAAC,IAAL,CAAU,UAAA,IAAI;AAAA,WAAI,CAAC,YAAY,CAAC,QAAb,CAAsB,IAAI,CAAC,SAAD,CAA1B,CAAL;AAAA,GAAd,CAA9C;AACA,sBACC,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACR,IAAA,aAAa,EAAE,YAAY,CAAC,MAAb,IAAuB,CAAC,WAD/B;AAER,IAAA,OAAO,EAAE,WAFD;AAGR,IAAA,OAAO,EAAE,eAHD;AAIR,IAAA,KAAK,EAAE,SAJC;AAKR,IAAA,KAAK,EAAE,CAAC,CAAC,UAAD,EAAa;AAAC,MAAA,KAAK,EAAC,YAAY,CAAC;AAApB,KAAb,CAAD,GAA6C,IAA7C,GAAoD,YAAY,CAAC;AALhE,GAAT,CADD;AASA,CAXD;;AAaA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,QAAoG;AAAA,MAAjG,aAAiG,SAAjG,aAAiG;AAAA,MAAlF,KAAkF,SAAlF,KAAkF;AAAA,MAA3E,YAA2E,SAA3E,YAA2E;AAAA,MAA7D,YAA6D,SAA7D,YAA6D;AAAA,MAA/C,eAA+C,SAA/C,eAA+C;AAAA,MAA9B,eAA8B,SAA9B,eAA8B;AAAA,MAAb,IAAa,SAAb,IAAa;AAAA,MAAP,CAAO,SAAP,CAAO;AAC7H,sBACC,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AACN,IAAA,KAAK,EAAE,EADD;AAEN,IAAA,KAAK,EAAE,gBAFD;AAGN,IAAA,OAAO,EAAE,aAHH;AAIN,IAAA,YAAY,EAAE,sBAAA,SAAS;AAAA,aAAI,cAAc,CAAA,MAAA,CAAA,MAAA,CAAA;AAAG,QAAA,aAAa,EAAb,aAAH;AAAkB,QAAA,YAAY,EAAZ,YAAlB;AAAgC,QAAA,YAAY,EAAZ;AAAhC,OAAA,EAAiD,SAAjD,CAAA,CAAlB;AAAA,KAJjB;AAKN,IAAA,cAAc,EACb,eAAe,GACZ;AAAA,aAAM,oBAAoB,CAAC;AAAE,QAAA,YAAY,EAAZ,YAAF;AAAgB,QAAA,IAAI,EAAJ,IAAhB;AAAsB,QAAA,SAAS,EAAE,aAAjC;AAAgD,QAAA,eAAe,EAAf,eAAhD;AAAiE,QAAA,CAAC,EAAD;AAAjE,OAAD,CAA1B;AAAA,KADY,GAEZ,qBARE;AAUN,IAAA,WAAW,EAAE;AAVP,GAAP,CADD;AAcA,CAfD;;AAiBA,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,EAAD,EA0BZ;;;AA1Ba,MACjB,OADiB,GAwBZ,EAxBY,CACjB,OADiB;AAAA,MAEjB,iBAFiB,GAwBZ,EAxBY,CAEjB,iBAFiB;AAAA,MAGjB,eAHiB,GAwBZ,EAxBY,CAGjB,eAHiB;AAAA,MAIjB,OAJiB,GAwBZ,EAxBY,CAIjB,OAJiB;AAAA,wBAwBZ,EAxBY,CAKjB,YALiB;AAAA,MAKjB,YALiB,gCAKF,EALE;AAAA,wBAwBZ,EAxBY,CAMjB,YANiB;AAAA,MAMjB,YANiB,gCAMF,CANE;AAAA,gBAwBZ,EAxBY,CAOjB,IAPiB;AAAA,MAOjB,IAPiB,wBAOV,EAPU;AAAA,MAQjB,YARiB,GAwBZ,EAxBY,CAQjB,YARiB;AAAA,MASjB,UATiB,GAwBZ,EAxBY,CASjB,UATiB;AAAA,MAUjB,cAViB,GAwBZ,EAxBY,CAUjB,cAViB;AAAA,MAWjB,iBAXiB,GAwBZ,EAxBY,CAWjB,iBAXiB;AAAA,MAYjB,cAZiB,GAwBZ,EAxBY,CAYjB,cAZiB;AAAA,qBAwBZ,EAxBY,CAajB,SAbiB;AAAA,MAajB,SAbiB,6BAaL,EAbK;AAAA,uBAwBZ,EAxBY,CAcjB,WAdiB;AAAA,MAcjB,WAdiB,+BAcH,kBAdG;AAAA,8BAwBZ,EAxBY,CAejB,qBAfiB;AAAA,MAejB,qBAfiB,sCAeO,GAfP;AAAA,8BAwBZ,EAxBY,CAgBjB,mBAhBiB;AAAA,MAgBjB,mBAhBiB,sCAgBK,EAhBL;AAAA,MAiBjB,UAjBiB,GAwBZ,EAxBY,CAiBjB,UAjBiB;AAAA,MAkBjB,aAlBiB,GAwBZ,EAxBY,CAkBjB,aAlBiB;AAAA,MAmBjB,iBAnBiB,GAwBZ,EAxBY,CAmBjB,iBAnBiB;AAAA,MAoBjB,gBApBiB,GAwBZ,EAxBY,CAoBjB,gBApBiB;AAAA,MAqBjB,MArBiB,GAwBZ,EAxBY,CAqBjB,MArBiB;AAAA,MAsBjB,aAtBiB,GAwBZ,EAxBY,CAsBjB,aAtBiB;AAAA,MAuBjB,UAvBiB,GAwBZ,EAxBY,CAuBjB,UAvBiB;AAAA,MAwBjB,KAxBiB,GAwBZ,EAxBY,CAwBjB,KAxBiB;AAAA,MAyBd,UAzBc,GAyBJ,MAAA,CAAA,EAAA,EAzBI,CAAA,SAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,cAAA,EAAA,cAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,mBAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,aAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,YAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,YAAA,EAAA,OAAA,CAyBJ,CAzBI;;AA2BjB,MAAM,OAAO,GAAG,MAAM,EAAtB;AACA,MAAM,oBAAoB,GAAG,UAAU,KAAK,WAAW,CAAC,QAA3B,IAAuC,CAAC,CAAC,aAAtE;AACA,MAAM,kBAAkB,GAAG,UAAU,KAAK,WAAW,CAAC,MAA3B,IAAqC,CAAC,CAAC,aAAlE;AACA,MAAM,mBAAmB,GAAG,EAA5B;AAEA,EAAA,IAAI,CACF,MADF,CACS,UAAA,IAAI;AAAA,WAAI,mBAAmB,CAAC,QAApB,CAA6B,IAAI,CAAC,aAAD,CAAjC,CAAJ;AAAA,GADb,EAEE,OAFF,CAEU,UAAA,GAAG,EAAG;AACd,IAAA,mBAAmB,CAAC,GAAG,CAAC,aAAD,CAAJ,CAAnB,GAA0C,GAA1C;AACA,GAJF,EANI,CAYJ;;AACA,wBAAwC,KAAK,CAAC,QAAN,CAAe;AACtD,IAAA,YAAY,qBAAM,mBAAN,CAD0C;AAEtD,IAAA,YAAY,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,mBAAP;AAF0C,GAAf,CAAxC;AAAA;AAAA,MAAO,YAAP;AAAA,MAAqB,eAArB;;AAIA,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAhC;AAEA,MAAM,eAAe,GAAG,KAAK,CAAC,MAAN,CAAa,EAAb,CAAxB;;AAEA,MAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAA,CAAC,EAAG;AAChC,QAAM,KAAK,GAAG,CAAC,CAAC,MAAF,CAAS,KAAvB;AACA,IAAA,YAAY,CAAC,eAAe,CAAC,OAAjB,CAAZ;AACA,IAAA,eAAe,CAAC,OAAhB,GAA0B,UAAU,CAAC,YAAK;AACzC,MAAA,cAAc,CAAC,KAAD,CAAd;AACA,KAFmC,EAEjC,qBAFiC,CAApC;AAGA,GAND;;AAQA,MAAM,YAAY,GAAG,SAAf,YAAe,CAAA,KAAK,EAAG;AAC5B,QAAQ,KAAR,GAAgC,KAAhC,CAAQ,KAAR;AAAA,QAAe,KAAf,GAAgC,KAAhC,CAAe,KAAf;AAAA,QAAsB,KAAtB,GAAgC,KAAhC,CAAsB,KAAtB;AACA,IAAA,KAAK,CAAC,eAAN;AACA,IAAA,KAAK,CAAC,OAAN;AACA,QAAM,aAAa,GAAG,KAAK,IAAI,IAAI,CAAC,KAAD,CAAJ,CAAY,aAAZ,CAA/B;AACA,QAAM,eAAe,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,IAAI,CAAC,KAAD,CAAZ,CAArB;AACA,IAAA,eAAe,CAAC,UAAA,eAAe,EAAG;AACjC,UAAI,eAAe,GAAG,GAAG,MAAH,CAAU,eAAe,CAAC,YAA1B,CAAtB;AACA,UAAI,eAAe,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,eAAe,CAAC,YAAxB,CAAnB;AACA,UAAM,aAAa,GAAG,eAAe,CAAC,YAAhB,CAA6B,OAA7B,CAAqC,aAArC,CAAtB;;AACA,UAAI,aAAa,GAAG,CAAC,CAArB,EAAwB;AACvB,YAAI,kBAAJ,EAAwB;AACvB,UAAA,eAAe,sBAAO,mBAAP,CAAf;AACA,UAAA,eAAe,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,mBAAR,CAAf;AACA,SAHD,MAGO;AACN,cAAI,CAAC,mBAAmB,CAAC,QAApB,CAA6B,aAA7B,CAAL,EAAkD;AACjD,YAAA,eAAe,CAAC,MAAhB,CAAuB,aAAvB,EAAsC,CAAtC,EADiD,CAEjD;;AACA,mBAAO,eAAe,CAAC,aAAD,CAAtB;AACA;AACD;AACD,OAXD,MAWO;AACN,YAAI,kBAAJ,EAAwB;AACvB,UAAA,eAAe,GAAG,CAAC,mBAAmB,CAAC,CAAD,CAAnB,IAA0B,aAA3B,CAAlB;AACA,SAFD,MAEO;AACN,UAAA,eAAe,GAAG,eAAe,CAAC,MAAhB,CAAuB,CAAC,aAAD,CAAvB,CAAlB;AACA;;AACD,QAAA,eAAe,CAAC,aAAD,CAAf,GAAiC,eAAjC;AACA;;AACD,UAAI,OAAO,iBAAP,KAA6B,UAAjC,EAA6C;AAC5C,QAAA,iBAAiB,CAAC;AAAE,UAAA,eAAe,EAAf,eAAF;AAAmB,UAAA,eAAe,EAAf;AAAnB,SAAD,CAAjB;AACA;;AACD,aAAO;AACN,QAAA,YAAY,EAAE,eADR;AAEN,QAAA,YAAY,EAAE;AAFR,OAAP;AAIA,KA9Bc,CAAf;AA+BA,GArCD;;AAuCA,MAAM,eAAe,GAAG,SAAlB,eAAkB,GAAK;AAC5B,QAAI,eAAe,GAAG,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,8BAAY,mBAAZ,sBAAoC,YAAY,CAAC,YAAjD,GAAX,CAAtB;AACA,QAAI,eAAe,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,mBAAR,CAAA,EAAgC,YAAY,CAAC,YAA7C,CAAnB;AACA,QAAM,WAAW,GAAG,CAAC,IAAI,CAAC,IAAL,CAAU,UAAA,IAAI;AAAA,aAAI,CAAC,eAAe,CAAC,QAAhB,CAAyB,IAAI,CAAC,aAAD,CAA7B,CAAL;AAAA,KAAd,CAArB;;AAEA,QAAI,CAAC,WAAD,IAAgB,YAAY,CAAC,YAAb,CAA0B,MAA1B,KAAqC,IAAI,CAAC,MAA9D,EAAsE;AACrE,UAAM,eAAe,GAAG,IAAI,CAAC,GAAL,CAAS,UAAA,QAAQ;AAAA,eAAI,QAAQ,CAAC,aAAD,CAAZ;AAAA,OAAjB,EAA8C,MAA9C,CAAqD,UAAA,QAAQ;AAAA,eAAI,QAAJ;AAAA,OAA7D,CAAxB;AACA,MAAA,eAAe,GAAG,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,8BAAY,eAAZ,sBAAgC,eAAhC,GAAX,CAAlB;AACA,MAAA,IAAI,CAAC,OAAL,CAAa,UAAA,IAAI,EAAG;AACnB,QAAA,eAAe,CAAC,IAAI,CAAC,aAAD,CAAL,CAAf,GAAoC,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,IAAR,CAApC;AACA,OAFD;AAGA,KAND,MAMO,IAAI,WAAJ,EAAiB;AACvB,MAAA,IAAI,CAAC,OAAL,CAAa,UAAA,IAAI,EAAG;AACnB,YAAM,GAAG,GAAG,IAAI,CAAC,aAAD,CAAhB;AACA,QAAA,eAAe,CAAC,MAAhB,CAAuB,eAAe,CAAC,OAAhB,CAAwB,GAAxB,CAAvB,EAAqD,CAArD;AACA,eAAO,eAAe,CAAC,GAAD,CAAtB;AACA,OAJD;AAKA,MAAA,eAAe,gCAAO,mBAAP,sBAA+B,eAA/B,EAAf;AACA,MAAA,eAAe,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,mBAAR,CAAA,EAAgC,eAAhC,CAAf;AACA;;AAED,QAAI,OAAO,iBAAP,KAA6B,UAAjC,EAA6C;AAC5C,MAAA,iBAAiB,CAAC;AAAE,QAAA,eAAe,EAAf,eAAF;AAAmB,QAAA,eAAe,EAAf;AAAnB,OAAD,CAAjB;AACA;;AAED,IAAA,eAAe,CAAC;AACf,MAAA,YAAY,EAAE,eADC;AAEf,MAAA,YAAY,EAAE;AAFC,KAAD,CAAf;AAIA,GA7BD;;AA+BA,MAAM,cAAc,GAAG,SAAjB,cAAiB,CAAA,CAAC,EAAG;AAC1B,QAAI,CAAJ,EAAO;AACN,MAAA,CAAC,CAAC,cAAF;AACA;;AACD,IAAA,eAAe,CAAC;AACf,MAAA,YAAY,qBAAM,mBAAN,CADG;AAEf,MAAA,YAAY,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,mBAAP;AAFG,KAAD,CAAf;AAIA,GARD;;AAUA,MAAM,UAAU,GAAG,KAAK,CAAC,WAAN,CAClB,UAAA,QAAQ,EAAG;AACV,QAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAV,CAAJ,CAAqB,aAArB,CAA3B;AACA,QAAM,UAAU,GAAG,kBAAkB,IAAI,YAAY,CAAC,YAAb,CAA0B,OAA1B,CAAkC,kBAAlC,IAAwD,CAAC,CAAlG;AAEA,WAAO,WAAW,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,QAAN,CAAA,EAAc;AAAE,MAAA,YAAY,EAAE,YAAY,CAAC,YAA7B;AAA2C,MAAA,gBAAgB,EAAhB,gBAA3C;AAA6D,MAAA,UAAU,EAAV;AAA7D,KAAd,CAAA,EAAyF,uBAAzF,CAAlB;AACA,GANiB,EAOlB,CAAC,YAAY,CAAC,YAAd,EAA4B,IAA5B,CAPkB,CAAnB,CA7GI,CAuHJ;;AACA,MAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAA,IAAI,EAAG;AACnC,QAAQ,MAAR,GAAmB,IAAnB,CAAQ,MAAR;AACA,QAAM,YAAY,GAAG,OAAO,CAAC,MAAR,CAAe,UAAA,GAAG;AAAA,aAAI,GAAG,CAAC,OAAJ,KAAgB,MAAhB,IAA0B,GAAG,CAAC,UAAlC;AAAA,KAAlB,CAArB;AACA,IAAA,YAAY,CAAC,MAAb,GAAsB,YAAY,CAAC,CAAD,CAAZ,CAAgB,UAAhB,CAA2B,IAA3B,CAAtB,GAAyD,UAAU,CAAC,IAAD,CAAnE;AACA,GAJD;;AAMG,wBAAY,cAAc,CAAC,YAAD,CAA1B;AAAA,MAAO,CAAP,mBAAO,CAAP;;AAEH,sBACO,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,IAAA,IAAI,EAAE;AAAP,GAAhB,eACN,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,CAAC,OAAO,OAAP,KAAmB,WAAnB,IAAkC,OAAO,cAAP,KAA0B,WAA7D,kBACA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAT;AAApB,GAAA,eACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,aAAT,EAAwB,OAAO,CAAC,QAAhC,EAA0C,OAAO,CAAC,OAAlD;AAApB,GAAA,EACE,cAAc,iBAAI,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AAAC,IAAA,WAAW,EAAE,CAAC,CAAC,QAAD,CAAf;AAA2B,IAAA,QAAQ,EAAE;AAArC,GAAZ,CADpB,eAEC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,QAAT;AAApB,GAAA,CAFD,EAGE,CAAC,eAAD,IAAoB,oBAApB,iBACA,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AACb,IAAA,iBAAiB,EAAE,iBADN;AAEb,IAAA,YAAY,EAAE,YAAY,CAAC,YAFd;AAGb,IAAA,QAAQ,EAAE,YAAY,CAAC,YAHV;AAIb,IAAA,SAAS,EAAE,aAJE;AAKb,IAAA,cAAc,EAAE,cALH;AAMb,IAAA,YAAY,EAAE,YAND;AAOW,IAAA,YAAY,EAAE,CAAC,CAAC,UAAD,EAAa;AAAC,MAAA,KAAK,EAAE,CAAA,EAAA,GAAA,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAA,YAAY,CAAE,YAAd,MAA0B,IAA1B,IAA0B,EAAA,KAAA,KAAA,CAA1B,GAA0B,KAAA,CAA1B,GAA0B,EAAA,CAAE;AAApC,KAAb,CAP1B;AAQW,IAAA,SAAS,EAAE,CAAC,CAAC,OAAD;AARvB,GAAd,CAJF,eAeC,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AACP,IAAA,OAAO,EAAE,OADF;AAEP,IAAA,UAAU,EAAE,iBAFL;AAGc,IAAA,mBAAmB,EAAE,CAAC,CAAC,eAAD,CAHpC;AAIP,IAAA,UAAU,EAAA,IAJH;AAKP,IAAA,QAAQ,EAAE,YAAY,CAAC,YALhB;AAMP,IAAA,eAAe,EAAE,YAAY,CAAC,YANvB;AAOP,IAAA,aAAa,EAAE;AAPR,GAAR,CAfD,CADD,eA0BC,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,IAAR,CA1BD,CAFF,EAgCG,CAAC,eAAD,IAAoB,oBAApB,IAA4C,IAAI,CAAC,MAAL,GAAc,CAA1D,iBACD,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AAChB,IAAA,IAAI,EAAE,IADU;AAEhB,IAAA,SAAS,EAAE,aAFK;AAGhB,IAAA,QAAQ,EAAE,cAHM;AAIhB,IAAA,KAAK,EAAE,KAJS;AAKhB,IAAA,QAAQ,EAAE,YAAY,CAAC,YALP;AAMhB,IAAA,eAAe,EAAE,eAND;AAOD,IAAA,UAAU,EAAE,CAAC,CAAC,WAAD;AAPZ,GAAjB,CADA,IAWC,CAAC,eAAD,iBAAoB,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,IAAA,QAAQ,EAAE,cAAX;AAA2B,IAAA,MAAM,EAAE,kBAAnC;AAAuD,IAAA,KAAK,EAAE;AAA9D,GAAR,CA3CvB,eA4CC,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAC,IAAA,WAAW,EAAE;AAAA,UAAG,KAAH,SAAG,KAAH;AAAA,aAAe,CAAC,CAAC,IAAI,CAAC,KAAD,CAArB;AAAA,KAAd;AAA4C,IAAA,YAAY,EAAE,YAA1D;AAAwE,IAAA,QAAQ,EAAE,KAAlF;AAAyF,IAAA,SAAS,EAAE;AAApG,GAAf,EACE;AAAA,QAAG,cAAH,SAAG,cAAH;AAAA,QAAmB,aAAnB,SAAmB,aAAnB;AAAA,wBACA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,EACE,iBAAsB;AAAA,UAAnB,MAAmB,SAAnB,MAAmB;AAAA,UAAX,KAAW,SAAX,KAAW;AACtB,0BACC,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,MAAA,CAAA,MAAA,CAAA;AACL,QAAA,GAAG,EAAE,aADA;AAEL,QAAA,cAAc,EAAE,cAFX;AAGL,QAAA,MAAM,EAAE,MAAM,GAAG,YAHZ;AAIL,QAAA,KAAK,EAAE,KAJF;AAKL,QAAA,SAAS,EAAE,SALN;AAML,QAAA,SAAS,EAAE;AACV,UAAA,SAAS,EAAE;AADD,SANN;AASL,QAAA,YAAY,EAAE,YATT;AAUL,QAAA,SAAS,EAAE,OAAO,CAAC,KAVd;AAWL,QAAA,WAAW,EAAE,qBAAA,QAAQ;AAAA,iBAAI,UAAU,CAAC,QAAD,CAAd;AAAA,SAXhB;AAYL,QAAA,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,aAAT,CAZb;AAaL,QAAA,QAAQ,EAAE,kBAbL;AAcL,QAAA,SAAS,EAAE;AAAA,cAAG,KAAH,SAAG,KAAH;AAAA,iBAAe,IAAI,CAAC,KAAD,CAAnB;AAAA,SAdN;AAeL,QAAA,UAAU,EAAE,UAAU,GAAG,UAAH,GAAgB,oBAAoB,IAAI,kBAAxB,GAA6C,YAA7C,GAA4D,SAf7F;AAgBL,QAAA,IAAI,EAAE,oBAhBD;AAiBL,QAAA,MAAM,EAAE,MAjBH;AAkBL,QAAA,aAAa,EAAE;AAlBV,OAAA,EAmBD,UAnBC,CAAN,EAqBE,oBAAoB,IACpB,iBAAiB,CAAC;AACjB,QAAA,aAAa,EAAb,aADiB;AAEjB,QAAA,KAAK,EAAE,kBAFU;AAGjB,QAAA,YAAY,EAAE,YAAY,CAAC,YAHV;AAIjB,QAAA,YAAY,EAAZ,YAJiB;AAKjB,QAAA,eAAe,EAAf,eALiB;AAMjB,QAAA,eAAe,EAAf,eANiB;AAOjB,QAAA,IAAI,EAAJ,IAPiB;AAQgB,QAAA,CAAC,EAAD;AARhB,OAAD,CAtBnB,EAiCE,OAAO,CAAC,GAAR,CACA,UACC,EADD,EAWC,KAXD,EAYI;AAXH,YACC,OADD,GAOuC,EAPvC,CACC,OADD;AAAA,YAEC,SAFD,GAOuC,EAPvC,CAEC,SAFD;AAAA,YAGQ,QAHR,GAOuC,EAPvC,CAGC,KAHD;AAAA,YAIC,WAJD,GAOuC,EAPvC,CAIC,WAJD;AAAA,YAKC,WALD,GAOuC,EAPvC,CAKC,WALD;AAAA,8BAOuC,EAPvC,CAMC,YAND;AAAA,YAMC,aAND,gCAMgB,mBANhB;AAAA,gCAOuC,EAPvC,CAOC,cAPD;AAAA,YAOC,eAPD,kCAOkB,qBAPlB;AAAA,YAQI,KARJ,GAQS,MAAA,CAAA,EAAA,EART,CAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,aAAA,EAAA,aAAA,EAAA,cAAA,EAAA,gBAAA,CAQS,CART;;AAYA,4BACC,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACN,UAAA,GAAG,EAAE,OADC;AAEN,UAAA,cAAc,EAAE,wBAAA,WAAW;AAAA,mBAC1B,eAAc,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,WADU,CAAA,EACC;AACd,cAAA,WAAW,EAAX,WADc;AAEd,cAAA,WAAW,EAAX,WAFc;AAGd,cAAA,WAAW,EAAE,KAHC;AAId,cAAA,OAAO,EAAE,CAAC,CAAC;AAJG,aADD,CAAA,CADY;AAAA,WAFrB;AAWN,UAAA,SAAS,EAAE,OAAO,CAAC,aAXb;AAYN,UAAA,YAAY,EAAE,sBAAA,SAAS;AAAA,mBAAI,aAAY,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,SAAN,CAAA,EAAe;AAAE,cAAA,OAAO,EAAP;AAAF,aAAf,CAAA,CAAhB;AAAA,WAZjB;AAaN,UAAA,OAAO,EAAE,OAbH;AAcN,UAAA,KAAK,EAAE,SAAS,GAAG,SAAS,IAAI,KAAK,IAAI,oBAAoB,GAAG,gBAAH,GAAsB,CAA9C,CAAT,CAAZ,GAAyE;AAdnF,SAAA,EAeF,KAfE,CAAP,CADD;AAmBA,OAjCD,CAjCF,CADD;AAuEA,KAzEF,CADA;AAAA,GADF,CA5CD,CADM,CADP;AAgIA,CA1RD;;AA4RA,QAAQ,CAAC,SAAT,GAAqB;AACpB;AACA,EAAA,OAAO,EAAE,SAAS,CAAC,OAAV,CACR,SAAS,CAAC,KAAV,CAAgB;AACf,IAAA,IAAI,EAAE,SAAS,CAAC,OADD;AAEf,IAAA,KAAK,EAAE,SAAS,CAAC,MAFF;AAGf,IAAA,SAAS,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,IAAX,EAAiB,SAAS,CAAC,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,CAAhB,CAAjB,CAApB,CAHI;AAIf,IAAA,OAAO,EAAE,SAAS,CAAC,IAJJ;AAKf,IAAA,KAAK,EAAE,SAAS,CAAC;AALF,GAAhB,CADQ,CAFW;AAWpB,EAAA,iBAAiB,EAAE,SAAS,CAAC,IAXT;AAYpB,EAAA,OAAO,EAAE,SAAS,CAAC,OAAV,CACR,SAAS,CAAC,KAAV,CAAgB;AACf,IAAA,SAAS,EAAE,SAAS,CAAC,MADN;AAEf,IAAA,KAAK,EAAE,SAAS,CAAC,MAFF;AAGf,IAAA,OAAO,EAAE,SAAS,CAAC,MAHJ;AAIf,IAAA,WAAW,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAAhB,CAJE;AAKf,IAAA,UAAU,EAAE,SAAS,CAAC,IALP;AAMf,IAAA,YAAY,EAAE,SAAS,CAAC,WANT,CAMqB;;AANrB,GAAhB,CADQ,EASP,UArBkB;AAsBpB,EAAA,YAAY,EAAE,SAAS,CAAC,MAtBJ;AAuBpB,EAAA,YAAY,EAAE,SAAS,CAAC,MAvBJ;AAwBpB,EAAA,IAAI,EAAE,SAAS,CAAC,OAAV,CAAkB,SAAS,CAAC,MAA5B,EAAoC,UAxBtB;AAyBpB,EAAA,YAAY,EAAE,SAAS,CAAC,IAzBJ;AA0BpB,EAAA,UAAU,EAAE,SAAS,CAAC,IA1BF;AA2BpB,EAAA,cAAc,EAAE,SAAS,CAAC,IA3BN;AA4BpB,EAAA,iBAAiB,EAAE,SAAS,CAAC,IA5BT;AA6BpB,EAAA,cAAc,EAAE,SAAS,CAAC,IA7BN;AA8BpB,EAAA,SAAS,EAAE,SAAS,CAAC,MA9BD;AA+BpB,EAAA,WAAW,EAAE,SAAS,CAAC,IA/BH;;AAgCpB;;;AAGK;AACL,EAAA,qBAAqB,EAAE,SAAS,CAAC,MApCb;AAqCpB,EAAA,eAAe,EAAE,SAAS,CAAC,IArCP;AAsCpB,EAAA,UAAU,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,CAAhB,CAtCQ;AAuCpB,EAAA,aAAa,EAAE,SAAS,CAAC,MAvCL;AAwCpB,EAAA,iBAAiB,EAAE,SAAS,CAAC,WAxCT;AAyCpB,EAAA,gBAAgB,EAAE,SAAS,CAAC,MAzCR;AA0CpB,EAAA,MAAM,EAAE,SAAS,CAAC,MA1CE;AA2CpB,EAAA,aAAa,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB,CA3CK;AA4CpB,EAAA,UAAU,EAAE,SAAS,CAAC,IA5CF;AA6CpB,EAAA,UAAU,EAAE,SAAS,CAAC,GA7CF;AA8CpB,EAAA,KAAK,EAAE,SAAS,CAAC,MA9CG,CA8CI;;AA9CJ,CAArB;AAiDA,eAAe,QAAf","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport { Checkbox } from \"../Checkbox\";\nimport { AutoSizer, Column, Table, InfiniteLoader, defaultTableRowRenderer } from \"react-virtualized\";\n//cells and row classes\nimport { DefaultCellRenderer, DefaultHeaderRenderer, DefaultRowRenderer } from \"./renderers\";\n//unexposed dataview components\nimport { SelectAllToggler, SelectCounter, Counter } from \"./selectTools\";\nimport SearchInput from \"../SearchInput\";\nimport { Actions } from \"./actions\";\nimport i18next from \"../../i18n/ecui-i18n\";\nimport { useTranslation, I18nextProvider } from \"react-i18next\";\nconst styles = makeStyles(theme => ({\n    flexContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\"\n    },\n    takeLeft: {\n        flex: 1\n    },\n    toolBar: {\n        padding: theme.spacing(1)\n    },\n    toolBarContainer: {\n        marginBottom: theme.spacing(1.5)\n    },\n    flexWrap: {\n        flexWrap: \"wrap\"\n    },\n    table: {\n        // temporary right-to-left patch, waiting for\n        // https://github.com/bvaughn/react-virtualized/issues/454\n        \"& .ReactVirtualized__Table__headerRow\": {\n            flip: false,\n            paddingRight: theme.direction === \"rtl\" ? \"0 !important\" : undefined\n        }\n    }\n}));\nconst selectTypes = {\n    MULTIPLE: \"multiple\",\n    SINGLE: \"single\"\n};\nconst checkBoxColWidth = 35;\nconst selectCheckbox = (_a) => {\n    var { selectableKey, selectedRows, handleSelect } = _a, cellProps = __rest(_a, [\"selectableKey\", \"selectedRows\", \"handleSelect\"]);\n    const { rowData, rowIndex } = cellProps;\n    const compareValue = selectableKey ? rowData[selectableKey] : \"\";\n    let checked = false;\n    if (selectedRows.indexOf(compareValue) > -1) {\n        checked = true;\n    }\n    if (compareValue !== \"\") {\n        return React.createElement(Checkbox, { color: \"primary\", checked: checked, onClick: event => handleSelect({ rowData, index: rowIndex, event }) });\n    }\n};\n//in case select all returns to be in the header\nconst headerSelectCheckBox = ({ selectedRows, list, selectKey, handleSelectAll, t }) => {\n    const allSelected = !!selectedRows.length && !list.some(item => !selectedRows.includes(item[selectKey]));\n    return (React.createElement(Checkbox, { indeterminate: selectedRows.length && !allSelected, checked: allSelected, onClick: handleSelectAll, color: \"primary\", title: t(\"selected\", { count: selectedRows.length }) + \": \" + selectedRows.length }));\n};\nconst getSelectCheckbox = ({ selectableKey, total, selectedRows, handleSelect, handleSelectAll, selectallHeader, list, t }) => {\n    return (React.createElement(Column, { label: \"\", width: checkBoxColWidth, dataKey: selectableKey, cellRenderer: cellProps => selectCheckbox(Object.assign({ selectableKey, selectedRows, handleSelect }, cellProps)), headerRenderer: selectallHeader\n            ? () => headerSelectCheckBox({ selectedRows, list, selectKey: selectableKey, handleSelectAll, t })\n            : DefaultHeaderRenderer, disableSort: true }));\n};\nconst DataView = (_a) => {\n    var _b;\n    var { actions, actionsAsDropDown, selectallHeader, columns, headerHeight = 48, heightOfsset = 0, list = [], loadMoreRows, onRowClick, onSearchChange, onSelectionChange, resultsMessage, rowHeight = 48, rowRenderer = DefaultRowRenderer, searchTriggerMilisecs = 500, defaultSelectedKeys = [], selectable, selectableKey, selectedComponent, selectedRowClass, sortBy, sortDirection, sortMethod, total } = _a, tableProps = __rest(_a, [\"actions\", \"actionsAsDropDown\", \"selectallHeader\", \"columns\", \"headerHeight\", \"heightOfsset\", \"list\", \"loadMoreRows\", \"onRowClick\", \"onSearchChange\", \"onSelectionChange\", \"resultsMessage\", \"rowHeight\", \"rowRenderer\", \"searchTriggerMilisecs\", \"defaultSelectedKeys\", \"selectable\", \"selectableKey\", \"selectedComponent\", \"selectedRowClass\", \"sortBy\", \"sortDirection\", \"sortMethod\", \"total\"]);\n    const classes = styles();\n    const isSelectableMultiple = selectable === selectTypes.MULTIPLE && !!selectableKey;\n    const isSelectableSingle = selectable === selectTypes.SINGLE && !!selectableKey;\n    const defaultSelectedData = {};\n    list\n        .filter(item => defaultSelectedKeys.includes(item[selectableKey]))\n        .forEach(row => {\n        defaultSelectedData[row[selectableKey]] = row;\n    });\n    //limit this resolver to React Virtualizer Table Props\n    const [selectedRows, setSelectedRows] = React.useState({\n        selectedKeys: [...defaultSelectedKeys],\n        selectedData: Object.assign({}, defaultSelectedData)\n    });\n    const calculatedRowCount = list.length;\n    const searchTimeToken = React.useRef(\"\");\n    const handleOnSearchChange = e => {\n        const value = e.target.value;\n        clearTimeout(searchTimeToken.current);\n        searchTimeToken.current = setTimeout(() => {\n            onSearchChange(value);\n        }, searchTriggerMilisecs);\n    };\n    const handleSelect = props => {\n        const { event, index, value } = props;\n        event.stopPropagation();\n        event.persist();\n        const selectedValue = value || list[index][selectableKey];\n        const selectedRowData = Object.assign({}, list[index]);\n        setSelectedRows(currentSelected => {\n            let newSelectedKeys = [].concat(currentSelected.selectedKeys);\n            let newSelectedData = Object.assign({}, currentSelected.selectedData);\n            const existPosition = currentSelected.selectedKeys.indexOf(selectedValue);\n            if (existPosition > -1) {\n                if (isSelectableSingle) {\n                    newSelectedKeys = [...defaultSelectedKeys];\n                    newSelectedData = Object.assign({}, defaultSelectedData);\n                }\n                else {\n                    if (!defaultSelectedKeys.includes(selectedValue)) {\n                        newSelectedKeys.splice(existPosition, 1);\n                        //is selected value is set by default not remove it\n                        delete newSelectedData[selectedValue];\n                    }\n                }\n            }\n            else {\n                if (isSelectableSingle) {\n                    newSelectedKeys = [defaultSelectedKeys[0] || selectedValue];\n                }\n                else {\n                    newSelectedKeys = newSelectedKeys.concat([selectedValue]);\n                }\n                newSelectedData[selectedValue] = selectedRowData;\n            }\n            if (typeof onSelectionChange === \"function\") {\n                onSelectionChange({ newSelectedKeys, newSelectedData });\n            }\n            return {\n                selectedKeys: newSelectedKeys,\n                selectedData: newSelectedData\n            };\n        });\n    };\n    const handleSelectAll = () => {\n        let newSelectedKeys = Array.from(new Set([...defaultSelectedKeys, ...selectedRows.selectedKeys]));\n        let newSelectedData = Object.assign(Object.assign({}, defaultSelectedData), selectedRows.selectedData);\n        const allSelected = !list.some(item => !newSelectedKeys.includes(item[selectableKey]));\n        if (!allSelected && selectedRows.selectedKeys.length !== list.length) {\n            const visibleSelected = list.map(listItem => listItem[selectableKey]).filter(listItem => listItem);\n            newSelectedKeys = Array.from(new Set([...newSelectedKeys, ...visibleSelected]));\n            list.forEach(item => {\n                newSelectedData[item[selectableKey]] = Object.assign({}, item);\n            });\n        }\n        else if (allSelected) {\n            list.forEach(item => {\n                const key = item[selectableKey];\n                newSelectedKeys.splice(newSelectedKeys.indexOf(key), 1);\n                delete newSelectedData[key];\n            });\n            newSelectedKeys = [...defaultSelectedKeys, ...newSelectedKeys];\n            newSelectedData = Object.assign(Object.assign({}, defaultSelectedData), newSelectedData);\n        }\n        if (typeof onSelectionChange === \"function\") {\n            onSelectionChange({ newSelectedKeys, newSelectedData });\n        }\n        setSelectedRows({\n            selectedKeys: newSelectedKeys,\n            selectedData: newSelectedData\n        });\n    };\n    const handleClearAll = e => {\n        if (e) {\n            e.preventDefault();\n        }\n        setSelectedRows({\n            selectedKeys: [...defaultSelectedKeys],\n            selectedData: Object.assign({}, defaultSelectedData)\n        });\n    };\n    const renderRows = React.useCallback(rowProps => {\n        const rowSelectableValue = list[rowProps.index][selectableKey];\n        const isSelected = rowSelectableValue && selectedRows.selectedKeys.indexOf(rowSelectableValue) > -1;\n        return rowRenderer(Object.assign(Object.assign({}, rowProps), { selectedKeys: selectedRows.selectedKeys, selectedRowClass, isSelected }), defaultTableRowRenderer);\n    }, [selectedRows.selectedKeys, list]);\n    //decides between general or column provided sort methods\n    const calculatedSortMethod = args => {\n        const { sortBy } = args;\n        const sortByColumn = columns.filter(col => col.dataKey === sortBy && col.sortMethod);\n        sortByColumn.length ? sortByColumn[0].sortMethod(args) : sortMethod(args);\n    };\n    const { t } = useTranslation(\"components\");\n    return (React.createElement(I18nextProvider, { i18n: i18next },\n        React.createElement(React.Fragment, null,\n            (typeof actions !== \"undefined\" || typeof onSearchChange !== \"undefined\") && (React.createElement(\"div\", { className: clsx(classes.toolBarContainer) },\n                React.createElement(\"div\", { className: clsx(classes.flexContainer, classes.flexWrap, classes.toolBar) },\n                    onSearchChange && React.createElement(SearchInput, { placeHolder: t(\"search\"), onChange: handleOnSearchChange }),\n                    React.createElement(\"div\", { className: clsx(classes.takeLeft) }),\n                    !selectallHeader && isSelectableMultiple && (React.createElement(SelectCounter, { selectedComponent: selectedComponent, selectedData: selectedRows.selectedData, selected: selectedRows.selectedKeys, selectKey: selectableKey, handleClearAll: handleClearAll, handleSelect: handleSelect, selectedText: t(\"selected\", { count: (_b = selectedRows === null || selectedRows === void 0 ? void 0 : selectedRows.selectedKeys) === null || _b === void 0 ? void 0 : _b.length }), clearText: t(\"clear\") })),\n                    React.createElement(Actions, { actions: actions, asDropdown: actionsAsDropDown, actionsDropdownText: t(\"action_plural\"), alignRight: true, selected: selectedRows.selectedKeys, selectedRowData: selectedRows.selectedData, clearSelected: handleClearAll })),\n                React.createElement(Divider, null))),\n            (!selectallHeader && isSelectableMultiple && list.length > 0 && (React.createElement(SelectAllToggler, { list: list, selectKey: selectableKey, template: resultsMessage, total: total, selected: selectedRows.selectedKeys, toggleSelectAll: handleSelectAll, selectText: t(\"selectAll\") }))) ||\n                (!selectallHeader && React.createElement(Counter, { template: resultsMessage, loaded: calculatedRowCount, total: total })),\n            React.createElement(InfiniteLoader, { isRowLoaded: ({ index }) => !!list[index], loadMoreRows: loadMoreRows, rowCount: total, threshold: 10 }, ({ onRowsRendered, registerChild }) => (React.createElement(AutoSizer, null, ({ height, width }) => {\n                return (React.createElement(Table, Object.assign({ ref: registerChild, onRowsRendered: onRowsRendered, height: height - heightOfsset, width: width, rowHeight: rowHeight, gridStyle: {\n                        direction: \"inherit\"\n                    }, headerHeight: headerHeight, className: classes.table, rowRenderer: rowProps => renderRows(rowProps), rowClassName: clsx(classes.flexContainer), rowCount: calculatedRowCount, rowGetter: ({ index }) => list[index], onRowClick: onRowClick ? onRowClick : isSelectableMultiple || isSelectableSingle ? handleSelect : undefined, sort: calculatedSortMethod, sortBy: sortBy, sortDirection: sortDirection }, tableProps),\n                    isSelectableMultiple &&\n                        getSelectCheckbox({\n                            selectableKey,\n                            total: calculatedRowCount,\n                            selectedRows: selectedRows.selectedKeys,\n                            handleSelect,\n                            handleSelectAll,\n                            selectallHeader,\n                            list,\n                            t\n                        }),\n                    columns.map((_a, index) => {\n                        var { dataKey, widthTake, width: colWidth, headerClass, headerAlign, cellRenderer = DefaultCellRenderer, headerRenderer = DefaultHeaderRenderer } = _a, other = __rest(_a, [\"dataKey\", \"widthTake\", \"width\", \"headerClass\", \"headerAlign\", \"cellRenderer\", \"headerRenderer\"]);\n                        return (React.createElement(Column, Object.assign({ key: dataKey, headerRenderer: headerProps => headerRenderer(Object.assign(Object.assign({}, headerProps), { headerClass,\n                                headerAlign, columnIndex: index, hasSort: !!calculatedSortMethod })), className: classes.flexContainer, cellRenderer: cellProps => cellRenderer(Object.assign(Object.assign({}, cellProps), { columns })), dataKey: dataKey, width: widthTake ? widthTake * (width - (isSelectableMultiple ? checkBoxColWidth : 0)) : colWidth }, other)));\n                    })));\n            }))))));\n};\nDataView.propTypes = {\n    //more desc\n    actions: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.element,\n        label: PropTypes.string,\n        condition: PropTypes.oneOfType([PropTypes.func, PropTypes.oneOf([\"none\", \"single\", \"multiple\"])]),\n        onClick: PropTypes.func,\n        title: PropTypes.string\n    })),\n    actionsAsDropDown: PropTypes.bool,\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        widthTake: PropTypes.number,\n        label: PropTypes.string,\n        dataKey: PropTypes.string,\n        headerAlign: PropTypes.oneOf([\"right\", \"center\", \"left\"]),\n        sortMethod: PropTypes.func,\n        cellRenderer: PropTypes.elementType // ({cellData,columnData,columnIndex,columns,dataKey,isScrolling,parent,rowData,rowIndex}) => element\n    })).isRequired,\n    headerHeight: PropTypes.number,\n    heightOfsset: PropTypes.number,\n    list: PropTypes.arrayOf(PropTypes.object).isRequired,\n    loadMoreRows: PropTypes.func,\n    onRowClick: PropTypes.func,\n    onSearchChange: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    resultsMessage: PropTypes.func,\n    rowHeight: PropTypes.number,\n    rowRenderer: PropTypes.func,\n    /*   rowObject to be manipulated and returned on the component that renders the row\n        ( rowObject, defaultTableRowRenderer) => defaultTableRowRenderer(row);\n        rowObejct: {className, columns, index, isScrolling, key, onRowClick, onRowDoubleClick, onRowRightClick, onRowMouseOver, onRowMouseOut, rowData, style, selectedKeys, selectedRowClass, isSelected}\n    */\n    searchTriggerMilisecs: PropTypes.number,\n    selectallHeader: PropTypes.bool,\n    selectable: PropTypes.oneOf([\"single\", \"multiple\"]),\n    selectableKey: PropTypes.string,\n    selectedComponent: PropTypes.elementType,\n    selectedRowClass: PropTypes.string,\n    sortBy: PropTypes.string,\n    sortDirection: PropTypes.oneOf([\"asc\", \"desc\"]),\n    sortMethod: PropTypes.func,\n    tableProps: PropTypes.any,\n    total: PropTypes.number // the total known rows, used to determine if infinite scroll keeps pulling data\n};\nexport default DataView;\n//# sourceMappingURL=DataView.js.map"]},"metadata":{},"sourceType":"module"}