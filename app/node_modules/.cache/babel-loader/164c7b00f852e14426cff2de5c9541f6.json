{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { Box, Button, Typography, IconButton, FormControlLabel, Switch, InputLabel } from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/EditRounded';\nimport SaveVal from '@material-ui/icons/CheckCircle';\nimport CancelVal from '@material-ui/icons/Cancel';\nimport { Input, Select } from '@esko/cloud-ui-components';\nvar useStyles = makeStyles(function (Theme) {\n  return {\n    editButtonIcon: {\n      minWidth: 40\n    },\n    form: {\n      flex: 1,\n      justifyContent: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      paddingTop: Theme.spacing(2)\n    },\n    formItemCheckbox: {\n      paddingBottom: Theme.spacing(1)\n    },\n    inputContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      width: \"100%\"\n    },\n    readOnlyFieldWithIcon: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      \"&>*:first-child\": {\n        marginRight: 20\n      }\n    },\n    editFieldIcon: {\n      opacity: 0,\n      marginLeft: 5,\n      position: \"absolute\",\n      top: 0,\n      right: Theme.spacing(1)\n    },\n    editableField: {\n      cursor: \"pointer\",\n      \"&:hover\": {\n        \"& $editFieldIcon\": {\n          opacity: 1\n        }\n      }\n    },\n    fieldReadStateValue: {\n      paddingTop: Theme.spacing(3),\n      width: \"100%\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      fontSize: \"0.875rem\"\n    },\n    fieldLabel: {\n      paddingBottom: Theme.spacing(1),\n      fontWeight: \"bold\"\n    },\n    fullInput: {\n      flex: 1,\n      maxWidth: \"100%\"\n    },\n    formItem: {\n      paddingBottom: Theme.spacing(3)\n    },\n    checkboxInput: {\n      paddingLeft: Theme.spacing(1.5)\n    },\n    changeBtns: {\n      marginBottom: -Theme.spacing(1.5),\n      textAlign: \"right\"\n    }\n  };\n});\nexport default function PreferencesForm(props) {\n  var config = props.config,\n      onSubmit = props.onSubmit,\n      onChange = props.onChange,\n      submitText = props.submitText,\n      _props$readOnly = props.readOnly,\n      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n      submitIcon = props.submitIcon;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  useEffect(function () {\n    setFormData(function () {\n      var data = {};\n\n      for (var key in config) {\n        data[key] = {\n          value: config[key].value || ''\n        };\n      }\n\n      return data;\n    });\n  }, [config]);\n\n  var _useState3 = useState({\n    name: \"\",\n    value: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editing = _useState4[0],\n      setEditing = _useState4[1];\n\n  var initEditField = function initEditField(name) {\n    var value = formData[name] ? formData[name].value || \"\" : \"\";\n    setEditing({\n      name: name,\n      value: value\n    });\n  };\n\n  var handleKeyPress = function handleKeyPress(name, value, e) {\n    if (e.keyCode == 13) {\n      e.stopPropagation();\n      e.preventDefault();\n      updateFormAndSave(name, value);\n    }\n  };\n\n  var handleChangeEditing = function handleChangeEditing(e) {\n    if (!e || !e.target || !e.target.name) return;\n    e.stopPropagation();\n    e.preventDefault();\n    var name = e.target.name;\n    var value = e.target.value || '';\n    setEditing(function (currEditing) {\n      if (name === currEditing.name) {\n        return {\n          name: name,\n          value: value\n        };\n      } else {\n        return currEditing;\n      }\n    });\n  };\n\n  var classes = useStyles();\n\n  var getCheckBoxValue = function getCheckBoxValue(name, value) {\n    var _a, _b, _c, _d;\n\n    var checkBoxField = config[name].type === \"checkbox\" ? config[name] : \"\";\n\n    if (checkBoxField) {\n      return value ? (_b = (_a = checkBoxField === null || checkBoxField === void 0 ? void 0 : checkBoxField.options) === null || _a === void 0 ? void 0 : _a.on) === null || _b === void 0 ? void 0 : _b.value : (_d = (_c = checkBoxField === null || checkBoxField === void 0 ? void 0 : checkBoxField.options) === null || _c === void 0 ? void 0 : _c.off) === null || _d === void 0 ? void 0 : _d.value;\n    } else {\n      return value;\n    }\n  };\n\n  var handleOnChangeExecution = function handleOnChangeExecution(formDataObj) {\n    if (typeof onChange === \"function\") {\n      onChange(formDataObj);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!event || !event.target || !event.target.name) return;\n    event.stopPropagation();\n    var name = event.target.name;\n    var value = typeof event.target.checked != \"undefined\" ? getCheckBoxValue(name, event.target.checked) : event.target.value || '';\n    var triggerChange = config[name].value != value;\n    setFormData(function (currFormData) {\n      var newFormData = Object.assign(Object.assign({}, currFormData), _defineProperty({}, name, Object.assign(Object.assign({}, currFormData[name]), {\n        value: value\n      })));\n\n      if (triggerChange) {\n        handleOnChangeExecution(_defineProperty({}, name, value));\n      }\n\n      initEditField(\"\", \"\");\n      return newFormData;\n    });\n  };\n\n  var updateFormAndSave = function updateFormAndSave(name, value) {\n    var triggerChange = config[name].value != value;\n    setFormData(function (currFormData) {\n      var newFormData = Object.assign(Object.assign({}, currFormData), _defineProperty({}, name, Object.assign(Object.assign({}, currFormData[name]), {\n        value: value\n      })));\n\n      if (triggerChange) {\n        handleOnChangeExecution(_defineProperty({}, name, value));\n      }\n\n      initEditField(\"\", \"\");\n      return newFormData;\n    });\n  };\n\n  var renderSelectField = function renderSelectField(selectConfig) {\n    if (!selectConfig.label || !(selectConfig.options && selectConfig.options.length)) {\n      return false;\n    }\n\n    return /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formItem,\n      key: selectConfig.name + \"_key\"\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: false,\n      htmlFor: selectConfig.name\n    }, selectConfig.label), /*#__PURE__*/React.createElement(Select, {\n      labelId: selectConfig.name + \"_label\",\n      id: selectConfig.name + \"_id\",\n      name: selectConfig.name,\n      onChange: handleChangeEditing,\n      autoFocus: true,\n      value: editing.value,\n      className: clsx(classes.fullInput)\n    }, selectConfig.options.map(function (opt, i) {\n      if (!opt.value && !opt.display || typeof opt.show != 'undefined' && !opt.show) {\n        return false;\n      }\n\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: i,\n        value: opt.value || opt.display\n      }, opt.display || opt.value);\n    })), /*#__PURE__*/React.createElement(Box, {\n      className: clsx(classes.changeBtns)\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: function onClick() {\n        initEditField(\"\", \"\");\n      }\n    }, /*#__PURE__*/React.createElement(CancelVal, null)), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: function onClick() {\n        updateFormAndSave(selectConfig.name, editing.value);\n      }\n    }, /*#__PURE__*/React.createElement(SaveVal, null))));\n  };\n\n  var renderCheckbox = function renderCheckbox(fieldConf) {\n    var _a, _b, _c, _d, _e, _f;\n\n    if (!fieldConf.label || !fieldConf.options || !fieldConf.options.on || !fieldConf.options.off) {\n      return false;\n    }\n\n    var isOn = formData[fieldConf.name].value === ((_b = (_a = fieldConf === null || fieldConf === void 0 ? void 0 : fieldConf.options) === null || _a === void 0 ? void 0 : _a.on) === null || _b === void 0 ? void 0 : _b.value);\n    var realReadOnly = typeof fieldConf.editable === \"undefined\" ? readOnly : !fieldConf.editable;\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: clsx(classes.checkboxInput),\n      control: /*#__PURE__*/React.createElement(Switch, {\n        disabled: realReadOnly,\n        checked: isOn,\n        onChange: handleChange,\n        name: fieldConf.name,\n        color: \"primary\"\n      }),\n      label: isOn ? (_d = (_c = fieldConf === null || fieldConf === void 0 ? void 0 : fieldConf.options) === null || _c === void 0 ? void 0 : _c.on) === null || _d === void 0 ? void 0 : _d.text : (_f = (_e = fieldConf === null || fieldConf === void 0 ? void 0 : fieldConf.options) === null || _e === void 0 ? void 0 : _e.off) === null || _f === void 0 ? void 0 : _f.text,\n      key: \"switch_field_\" + fieldConf.label\n    });\n  };\n\n  var renderTextField = function renderTextField(fieldConf) {\n    return /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formItem,\n      key: fieldConf.name + \"_key\"\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: fieldConf.name\n    }, fieldConf.label), /*#__PURE__*/React.createElement(Input, {\n      id: fieldConf.name + \"_id\",\n      name: fieldConf.name,\n      value: editing.value,\n      autoFocus: true,\n      type: \"text\",\n      onChange: handleChangeEditing,\n      onKeyDown: function onKeyDown(e) {\n        return handleKeyPress(fieldConf.name, editing.value, e);\n      },\n      inputProps: {\n        name: fieldConf.name\n      },\n      className: clsx(classes.fullInput)\n    }), /*#__PURE__*/React.createElement(Box, {\n      className: clsx(classes.changeBtns)\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: function onClick() {\n        initEditField(\"\", \"\");\n      }\n    }, /*#__PURE__*/React.createElement(CancelVal, null)), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: function onClick() {\n        updateFormAndSave(fieldConf.name, editing.value);\n      }\n    }, /*#__PURE__*/React.createElement(SaveVal, null))));\n  };\n\n  var executeOnSubmit = function executeOnSubmit() {\n    if (typeof onSubmit === \"function\") {\n      onSubmit(formData);\n    }\n  };\n\n  var renderEditableField = function renderEditableField(fieldConf) {\n    var type = fieldConf.type;\n\n    switch (type) {\n      case 'select':\n        return renderSelectField(fieldConf);\n\n      case 'text':\n        return renderTextField(fieldConf);\n\n      case 'checkbox':\n        return renderCheckbox(fieldConf);\n\n      default:\n        return false;\n    }\n  };\n\n  var getDisplayValue = useCallback(function (conf, stateVal) {\n    var _a;\n\n    var dispValue = \"--\";\n\n    switch (conf.type) {\n      case \"text\":\n        {\n          dispValue = stateVal || \"--\";\n        }\n        break;\n\n      case \"select\":\n        {\n          var storedValue = stateVal || \"\";\n          var valuePair = conf.options.filter(function (opt) {\n            return opt.value === storedValue;\n          });\n          dispValue = Array.isArray(valuePair) && ((_a = valuePair[0]) === null || _a === void 0 ? void 0 : _a.display) || \"--\";\n        }\n    }\n\n    return dispValue;\n  }, [formData]);\n\n  var renderField = function renderField(fieldConf) {\n    var displayValue = getDisplayValue(fieldConf, formData[fieldConf.name].value);\n    var noClick = [\"checkbox\"].indexOf(fieldConf.type) > -1;\n    var realReadOnly = typeof fieldConf.editable === \"undefined\" ? readOnly : !fieldConf.editable;\n\n    if (editing.name === fieldConf.name) {\n      return renderEditableField(fieldConf);\n    } else {\n      var _clsx;\n\n      return /*#__PURE__*/React.createElement(FormControl, {\n        onClick: realReadOnly || noClick ? function () {} : function () {\n          var _a;\n\n          initEditField(fieldConf.name, (_a = formData[fieldConf.name]) === null || _a === void 0 ? void 0 : _a.value);\n        },\n        className: clsx(classes.formItem, (_clsx = {}, _defineProperty(_clsx, classes.formItemCheckbox, noClick), _defineProperty(_clsx, classes.editableField, !realReadOnly && !noClick), _clsx)),\n        key: \"read_field_\" + fieldConf.name\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        shrink: false,\n        htmlFor: fieldConf.name\n      }, fieldConf.label), noClick ? /*#__PURE__*/React.createElement(\"div\", {\n        className: clsx(classes.fieldReadStateValue)\n      }, renderEditableField(fieldConf)) : /*#__PURE__*/React.createElement(Typography, {\n        title: displayValue,\n        variant: \"subtitle1\",\n        className: clsx(classes.fieldReadStateValue)\n      }, displayValue), /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        className: clsx(classes.editFieldIcon)\n      }, /*#__PURE__*/React.createElement(EditIcon, {\n        fontSize: \"small\"\n      })));\n    }\n  };\n\n  var renderForm = function renderForm(formConfig) {\n    var fields = Object.keys(formConfig);\n    var renderedFields = fields.map(function (fld, i) {\n      var fieldConf = formConfig[fld];\n      fieldConf.label = fieldConf.label || fld;\n      fieldConf.name = fld;\n      fieldConf.value = fieldConf.value || \"\";\n      return renderField(fieldConf);\n    });\n    var button = typeof onSubmit == \"function\" ? /*#__PURE__*/React.createElement(FormControl, {\n      key: \"save\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      startIcon: submitIcon || \"\",\n      onClick: executeOnSubmit\n    }, submitText || \"Submit\")) : \"\";\n    return [].concat(_toConsumableArray(renderedFields), [button]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form\n  }, formData ? renderForm(config) : \"\");\n}","map":{"version":3,"sources":["../../../../src/components/UserProfile/PreferencesForm.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { Box, Button, Typography, IconButton, FormControlLabel, Switch, InputLabel } from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/EditRounded';\nimport SaveVal from '@material-ui/icons/CheckCircle';\nimport CancelVal from '@material-ui/icons/Cancel';\nimport { Input, Select } from '@esko/cloud-ui-components';\nconst useStyles = makeStyles(Theme => ({\n    editButtonIcon: {\n        minWidth: 40\n    },\n    form: {\n        flex: 1,\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingTop: Theme.spacing(2)\n    },\n    formItemCheckbox: {\n        paddingBottom: Theme.spacing(1),\n    },\n    inputContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        width: \"100%\"\n    },\n    readOnlyFieldWithIcon: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        \"&>*:first-child\": {\n            marginRight: 20\n        }\n    },\n    editFieldIcon: {\n        opacity: 0,\n        marginLeft: 5,\n        position: \"absolute\",\n        top: 0,\n        right: Theme.spacing(1)\n    },\n    editableField: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            \"& $editFieldIcon\": {\n                opacity: 1\n            }\n        }\n    },\n    fieldReadStateValue: {\n        paddingTop: Theme.spacing(3),\n        width: \"100%\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        fontSize: \"0.875rem\",\n    },\n    fieldLabel: {\n        paddingBottom: Theme.spacing(1),\n        fontWeight: \"bold\"\n    },\n    fullInput: {\n        flex: 1,\n        maxWidth: \"100%\"\n    },\n    formItem: {\n        paddingBottom: Theme.spacing(3),\n    },\n    checkboxInput: {\n        paddingLeft: Theme.spacing(1.5)\n    },\n    changeBtns: {\n        marginBottom: -(Theme.spacing(1.5)),\n        textAlign: \"right\"\n    }\n}));\nexport default function PreferencesForm(props) {\n    const { config, onSubmit, onChange, submitText, readOnly = false, submitIcon } = props;\n    const [formData, setFormData] = useState();\n    useEffect(() => {\n        setFormData(() => {\n            const data = {};\n            for (let key in config) {\n                data[key] = {\n                    value: config[key].value || '',\n                };\n            }\n            return data;\n        });\n    }, [config]);\n    const [editing, setEditing] = useState({\n        name: \"\",\n        value: \"\",\n    });\n    const initEditField = (name) => {\n        const value = formData[name] ? formData[name].value || \"\" : \"\";\n        setEditing({ name, value });\n    };\n    const handleKeyPress = (name, value, e) => {\n        if (e.keyCode == 13) {\n            e.stopPropagation();\n            e.preventDefault();\n            updateFormAndSave(name, value);\n        }\n    };\n    const handleChangeEditing = e => {\n        if (!e || !e.target || !e.target.name)\n            return;\n        e.stopPropagation();\n        e.preventDefault();\n        const name = e.target.name;\n        const value = e.target.value || '';\n        setEditing(currEditing => {\n            if (name === currEditing.name) {\n                return ({\n                    name,\n                    value\n                });\n            }\n            else {\n                return currEditing;\n            }\n        });\n    };\n    const classes = useStyles();\n    const getCheckBoxValue = (name, value) => {\n        var _a, _b, _c, _d;\n        const checkBoxField = config[name].type === \"checkbox\" ? config[name] : \"\";\n        if (checkBoxField) {\n            return value ? (_b = (_a = checkBoxField === null || checkBoxField === void 0 ? void 0 : checkBoxField.options) === null || _a === void 0 ? void 0 : _a.on) === null || _b === void 0 ? void 0 : _b.value : (_d = (_c = checkBoxField === null || checkBoxField === void 0 ? void 0 : checkBoxField.options) === null || _c === void 0 ? void 0 : _c.off) === null || _d === void 0 ? void 0 : _d.value;\n        }\n        else {\n            return value;\n        }\n    };\n    const handleOnChangeExecution = (formDataObj) => {\n        if (typeof onChange === \"function\") {\n            onChange(formDataObj);\n        }\n    };\n    const handleChange = (event) => {\n        if (!event || !event.target || !event.target.name)\n            return;\n        event.stopPropagation();\n        const name = event.target.name;\n        const value = typeof event.target.checked != \"undefined\" ? getCheckBoxValue(name, event.target.checked) : (event.target.value || '');\n        const triggerChange = config[name].value != value;\n        setFormData(currFormData => {\n            const newFormData = Object.assign(Object.assign({}, currFormData), { [name]: Object.assign(Object.assign({}, currFormData[name]), { value: value }) });\n            if (triggerChange) {\n                handleOnChangeExecution({\n                    [name]: value\n                });\n            }\n            initEditField(\"\", \"\");\n            return newFormData;\n        });\n    };\n    const updateFormAndSave = (name, value) => {\n        const triggerChange = config[name].value != value;\n        setFormData(currFormData => {\n            const newFormData = Object.assign(Object.assign({}, currFormData), { [name]: Object.assign(Object.assign({}, currFormData[name]), { value: value }) });\n            if (triggerChange) {\n                handleOnChangeExecution({\n                    [name]: value\n                });\n            }\n            initEditField(\"\", \"\");\n            return newFormData;\n        });\n    };\n    const renderSelectField = selectConfig => {\n        if (!selectConfig.label || !(selectConfig.options && selectConfig.options.length)) {\n            return false;\n        }\n        return (React.createElement(FormControl, { className: classes.formItem, key: selectConfig.name + \"_key\" },\n            React.createElement(InputLabel, { shrink: false, htmlFor: selectConfig.name }, selectConfig.label),\n            React.createElement(Select, { labelId: selectConfig.name + \"_label\", id: selectConfig.name + \"_id\", name: selectConfig.name, onChange: handleChangeEditing, autoFocus: true, value: editing.value, className: clsx(classes.fullInput) }, selectConfig.options.map((opt, i) => {\n                if (!opt.value && !opt.display || (typeof opt.show != 'undefined' && !opt.show)) {\n                    return false;\n                }\n                return (React.createElement(MenuItem, { key: i, value: opt.value || opt.display }, opt.display || opt.value));\n            })),\n            React.createElement(Box, { className: clsx(classes.changeBtns) },\n                React.createElement(IconButton, { size: \"small\", onClick: () => { initEditField(\"\", \"\"); } },\n                    React.createElement(CancelVal, null)),\n                React.createElement(IconButton, { size: \"small\", onClick: () => { updateFormAndSave(selectConfig.name, editing.value); } },\n                    React.createElement(SaveVal, null)))));\n    };\n    const renderCheckbox = fieldConf => {\n        var _a, _b, _c, _d, _e, _f;\n        if (!fieldConf.label || !(fieldConf.options) || !fieldConf.options.on || !fieldConf.options.off) {\n            return false;\n        }\n        const isOn = formData[fieldConf.name].value === ((_b = (_a = fieldConf === null || fieldConf === void 0 ? void 0 : fieldConf.options) === null || _a === void 0 ? void 0 : _a.on) === null || _b === void 0 ? void 0 : _b.value);\n        const realReadOnly = typeof fieldConf.editable === \"undefined\" ? readOnly : !fieldConf.editable;\n        return (React.createElement(FormControlLabel, { className: clsx(classes.checkboxInput), control: React.createElement(Switch, { disabled: realReadOnly, checked: isOn, onChange: handleChange, name: fieldConf.name, color: \"primary\" }), label: isOn ? (_d = (_c = fieldConf === null || fieldConf === void 0 ? void 0 : fieldConf.options) === null || _c === void 0 ? void 0 : _c.on) === null || _d === void 0 ? void 0 : _d.text : (_f = (_e = fieldConf === null || fieldConf === void 0 ? void 0 : fieldConf.options) === null || _e === void 0 ? void 0 : _e.off) === null || _f === void 0 ? void 0 : _f.text, key: \"switch_field_\" + fieldConf.label }));\n    };\n    const renderTextField = fieldConf => {\n        return (React.createElement(FormControl, { className: classes.formItem, key: fieldConf.name + \"_key\" },\n            React.createElement(InputLabel, { htmlFor: fieldConf.name }, fieldConf.label),\n            React.createElement(Input, { id: fieldConf.name + \"_id\", name: fieldConf.name, value: editing.value, autoFocus: true, type: \"text\", onChange: handleChangeEditing, onKeyDown: e => handleKeyPress(fieldConf.name, editing.value, e), inputProps: {\n                    name: fieldConf.name\n                }, className: clsx(classes.fullInput) }),\n            React.createElement(Box, { className: clsx(classes.changeBtns) },\n                React.createElement(IconButton, { size: \"small\", onClick: () => { initEditField(\"\", \"\"); } },\n                    React.createElement(CancelVal, null)),\n                React.createElement(IconButton, { size: \"small\", onClick: () => { updateFormAndSave(fieldConf.name, editing.value); } },\n                    React.createElement(SaveVal, null)))));\n    };\n    const executeOnSubmit = () => {\n        if (typeof onSubmit === \"function\") {\n            onSubmit(formData);\n        }\n    };\n    const renderEditableField = fieldConf => {\n        const type = fieldConf.type;\n        switch (type) {\n            case 'select': return renderSelectField(fieldConf);\n            case 'text': return renderTextField(fieldConf);\n            case 'checkbox': return renderCheckbox(fieldConf);\n            default: return false;\n        }\n    };\n    const getDisplayValue = useCallback((conf, stateVal) => {\n        var _a;\n        let dispValue = \"--\";\n        switch (conf.type) {\n            case \"text\":\n                {\n                    dispValue = stateVal || \"--\";\n                }\n                break;\n            case \"select\": {\n                const storedValue = stateVal || \"\";\n                const valuePair = conf.options.filter(opt => opt.value === storedValue);\n                dispValue = Array.isArray(valuePair) && ((_a = valuePair[0]) === null || _a === void 0 ? void 0 : _a.display) || \"--\";\n            }\n        }\n        return dispValue;\n    }, [formData]);\n    const renderField = fieldConf => {\n        let displayValue = getDisplayValue(fieldConf, formData[fieldConf.name].value);\n        const noClick = [\"checkbox\"].indexOf(fieldConf.type) > -1;\n        const realReadOnly = typeof fieldConf.editable === \"undefined\" ? readOnly : !fieldConf.editable;\n        if (editing.name === fieldConf.name) {\n            return renderEditableField(fieldConf);\n        }\n        else {\n            return (React.createElement(FormControl, { onClick: realReadOnly || noClick ? () => { } : () => { var _a; initEditField(fieldConf.name, (_a = formData[fieldConf.name]) === null || _a === void 0 ? void 0 : _a.value); }, className: clsx(classes.formItem, {\n                    [classes.formItemCheckbox]: noClick,\n                    [classes.editableField]: !realReadOnly && !noClick\n                }), key: \"read_field_\" + fieldConf.name },\n                React.createElement(InputLabel, { shrink: false, htmlFor: fieldConf.name }, fieldConf.label),\n                noClick ?\n                    React.createElement(\"div\", { className: clsx(classes.fieldReadStateValue) }, renderEditableField(fieldConf))\n                    :\n                        React.createElement(Typography, { title: displayValue, variant: \"subtitle1\", className: clsx(classes.fieldReadStateValue) }, displayValue),\n                React.createElement(IconButton, { size: \"small\", className: clsx(classes.editFieldIcon) },\n                    React.createElement(EditIcon, { fontSize: \"small\" }))));\n        }\n    };\n    const renderForm = formConfig => {\n        const fields = Object.keys(formConfig);\n        const renderedFields = fields.map((fld, i) => {\n            const fieldConf = formConfig[fld];\n            fieldConf.label = fieldConf.label || fld;\n            fieldConf.name = fld;\n            fieldConf.value = fieldConf.value || \"\";\n            return renderField(fieldConf);\n        });\n        const button = typeof onSubmit == \"function\" ?\n            React.createElement(FormControl, { key: \"save\" },\n                React.createElement(Button, { size: \"small\", startIcon: submitIcon || \"\", onClick: executeOnSubmit }, submitText || \"Submit\"))\n            : \"\";\n        return [...renderedFields, button];\n    };\n    return (React.createElement(\"form\", { className: classes.form }, formData ? renderForm(config) : \"\"));\n}\n//# sourceMappingURL=PreferencesForm.js.map"]},"metadata":{},"sourceType":"module"}