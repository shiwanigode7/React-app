{"ast":null,"code":"import Service from \"./Service\";\nimport SearchService from \"./SearchService\";\nimport RepoService from \"./RepoService\";\nvar services = {};\n/**\r\n * @returns {Service} returns a Service object for a service\r\n */\n\nvar service = function service(_service) {\n  if (!services[_service]) {\n    services[_service] = new Service(_service);\n  }\n\n  return services[_service];\n};\n\nvar proxy = \"proxy\";\nvar repo = \"repo\";\nvar search = \"search\";\nvar PROXY = new Service(proxy);\nvar REPO = new RepoService();\nvar SEARCH = new SearchService();\nservices[proxy] = PROXY;\nservices[repo] = REPO;\nservices[search] = SEARCH;\nexport { service, PROXY, REPO, SEARCH };","map":{"version":3,"sources":["D:/MPL_GitHUb/dbs-innovation/dbs-innovation/src/main/static/node_modules/@esko/cloud-service-utils/index.js"],"names":["Service","SearchService","RepoService","services","service","proxy","repo","search","PROXY","REPO","SEARCH"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,QAAQ,GAAG,EAAjB;AAEA;AACA;AACA;;AACA,IAAMC,OAAO,GAAG,iBAAAA,QAAO,EAAI;AACvB,MAAG,CAACD,QAAQ,CAACC,QAAD,CAAZ,EAAuB;AACnBD,IAAAA,QAAQ,CAACC,QAAD,CAAR,GAAoB,IAAIJ,OAAJ,CAAYI,QAAZ,CAApB;AACH;;AACD,SAAOD,QAAQ,CAACC,QAAD,CAAf;AACH,CALD;;AAOA,IAAMC,KAAK,GAAG,OAAd;AACA,IAAMC,IAAI,GAAG,MAAb;AACA,IAAMC,MAAM,GAAG,QAAf;AAEA,IAAMC,KAAK,GAAG,IAAIR,OAAJ,CAAYK,KAAZ,CAAd;AACA,IAAMI,IAAI,GAAG,IAAIP,WAAJ,EAAb;AACA,IAAMQ,MAAM,GAAG,IAAIT,aAAJ,EAAf;AAEAE,QAAQ,CAACE,KAAD,CAAR,GAAkBG,KAAlB;AACAL,QAAQ,CAACG,IAAD,CAAR,GAAiBG,IAAjB;AACAN,QAAQ,CAACI,MAAD,CAAR,GAAmBG,MAAnB;AAEA,SAASN,OAAT,EAAmBI,KAAnB,EAA0BC,IAA1B,EAAgCC,MAAhC","sourcesContent":["import Service from \"./Service\";\r\nimport SearchService from \"./SearchService\";\r\nimport RepoService from \"./RepoService\";\r\n\r\nconst services = {};\r\n\r\n/**\r\n * @returns {Service} returns a Service object for a service\r\n */\r\nconst service = service => {\r\n    if(!services[service]) {\r\n        services[service] = new Service(service);\r\n    } \r\n    return services[service];\r\n}\r\n\r\nconst proxy = \"proxy\";\r\nconst repo = \"repo\";\r\nconst search = \"search\";\r\n\r\nconst PROXY = new Service(proxy);\r\nconst REPO = new RepoService();\r\nconst SEARCH = new SearchService();\r\n\r\nservices[proxy] = PROXY;\r\nservices[repo] = REPO;\r\nservices[search] = SEARCH;\r\n\r\nexport { service,  PROXY, REPO, SEARCH}"]},"metadata":{},"sourceType":"module"}