{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport { Button as MuiButton } from \"@material-ui/core\";\nimport Proptypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    onlyIcon: {\n      width: 32\n    },\n    largeOnlyIcon: {\n      width: 48\n    },\n    pullDownHolder: {\n      position: \"relative\",\n      width: 0,\n      height: 0,\n      alignSelf: \"flex-end\",\n      justifySelf: \"flex-end\"\n    },\n    withPullDonw: {\n      position: \"relative\"\n    },\n    pullDownArrow: {\n      transform: \"rotate(-45deg)\",\n      position: \"absolute\",\n      bottom: -6,\n      right: -6,\n      pointerEvents: \"none\",\n      fontSize: 24\n    },\n    borderAdjustMed: {\n      \"& $pullDownArrow\": {\n        bottom: -7,\n        right: -7\n      }\n    }\n  };\n});\nvar sizes = {\n  MEDIUM: \"medium\",\n  LARGE: \"large\"\n};\n\nvar getSize = function getSize(size) {\n  if (typeof size == \"string\" && sizes[size.toUpperCase()]) {\n    return size;\n  } else {\n    return sizes.MEDIUM;\n  }\n};\n\nvar colors = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\"\n};\n\nvar getColor = function getColor(color) {\n  if (typeof color == \"string\" && colors[color.toUpperCase()]) {\n    return color;\n  } else {\n    return colors.SECONDARY;\n  }\n};\n\nexport var Button = function Button(_a) {\n  var _clsx;\n\n  var _a$color = _a.color,\n      color = _a$color === void 0 ? colors.SECONDARY : _a$color,\n      children = _a.children,\n      className = _a.className,\n      _a$size = _a.size,\n      size = _a$size === void 0 ? sizes.MEDIUM : _a$size,\n      startIcon = _a.startIcon,\n      endIcon = _a.endIcon,\n      pullDown = _a.pullDown,\n      otherProps = __rest(_a, [\"color\", \"children\", \"className\", \"size\", \"startIcon\", \"endIcon\", \"pullDown\"]);\n\n  var classes = useStyles();\n  var hasBorder = color === colors.SECONDARY;\n  var isLarge = size === sizes.LARGE;\n  var onlyIcon = typeof children == \"undefined\" && !(startIcon && endIcon) && (startIcon || endIcon);\n  return /*#__PURE__*/React.createElement(MuiButton, Object.assign({\n    startIcon: !onlyIcon ? startIcon : \"\",\n    endIcon: !onlyIcon ? endIcon : \"\",\n    className: clsx(className, (_clsx = {}, _defineProperty(_clsx, classes.onlyIcon, onlyIcon), _defineProperty(_clsx, classes.largeOnlyIcon, onlyIcon && isLarge), _defineProperty(_clsx, classes.withPullDonw, pullDown), _defineProperty(_clsx, classes.borderAdjustMed, hasBorder), _clsx)),\n    variant: otherProps.variant || \"contained\",\n    color: getColor(color),\n    disableRipple: true,\n    disableElevation: true,\n    size: getSize(size)\n  }, otherProps), onlyIcon || children, pullDown && /*#__PURE__*/React.createElement(ArrowDropDownRoundedIcon, {\n    className: clsx(classes.pullDownArrow)\n  }));\n};\nButton.propTypes = {\n  color: Proptypes.oneOf(Object.values(colors)),\n  children: Proptypes.node,\n  className: Proptypes.string,\n  size: Proptypes.oneOf(Object.values(sizes)),\n  pullDown: Proptypes.bool,\n  startIcon: Proptypes.node,\n  endIcon: Proptypes.node\n};","map":{"version":3,"sources":["../../../../src/components/Button/index.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport { Button as MuiButton } from \"@material-ui/core\";\nimport Proptypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\nconst useStyles = makeStyles(theme => ({\n    onlyIcon: {\n        width: 32\n    },\n    largeOnlyIcon: {\n        width: 48\n    },\n    pullDownHolder: {\n        position: \"relative\",\n        width: 0,\n        height: 0,\n        alignSelf: \"flex-end\",\n        justifySelf: \"flex-end\"\n    },\n    withPullDonw: {\n        position: \"relative\"\n    },\n    pullDownArrow: {\n        transform: \"rotate(-45deg)\",\n        position: \"absolute\",\n        bottom: -6,\n        right: -6,\n        pointerEvents: \"none\",\n        fontSize: 24\n    },\n    borderAdjustMed: {\n        \"& $pullDownArrow\": {\n            bottom: -7,\n            right: -7\n        }\n    }\n}));\nconst sizes = { MEDIUM: \"medium\", LARGE: \"large\" };\nconst getSize = size => {\n    if (typeof size == \"string\" && sizes[size.toUpperCase()]) {\n        return size;\n    }\n    else {\n        return sizes.MEDIUM;\n    }\n};\nconst colors = {\n    PRIMARY: \"primary\",\n    SECONDARY: \"secondary\"\n};\nconst getColor = color => {\n    if (typeof color == \"string\" && colors[color.toUpperCase()]) {\n        return color;\n    }\n    else {\n        return colors.SECONDARY;\n    }\n};\nexport const Button = (_a) => {\n    var { color = colors.SECONDARY, children, className, size = sizes.MEDIUM, startIcon, endIcon, pullDown } = _a, otherProps = __rest(_a, [\"color\", \"children\", \"className\", \"size\", \"startIcon\", \"endIcon\", \"pullDown\"]);\n    const classes = useStyles();\n    const hasBorder = color === colors.SECONDARY;\n    const isLarge = size === sizes.LARGE;\n    const onlyIcon = typeof children == \"undefined\" && !(startIcon && endIcon) && (startIcon || endIcon);\n    return (React.createElement(MuiButton, Object.assign({ startIcon: !onlyIcon ? startIcon : \"\", endIcon: !onlyIcon ? endIcon : \"\", className: clsx(className, {\n            [classes.onlyIcon]: onlyIcon,\n            [classes.largeOnlyIcon]: onlyIcon && isLarge,\n            [classes.withPullDonw]: pullDown,\n            [classes.borderAdjustMed]: hasBorder\n        }), variant: otherProps.variant || \"contained\", color: getColor(color), disableRipple: true, disableElevation: true, size: getSize(size) }, otherProps),\n        onlyIcon || children,\n        pullDown && React.createElement(ArrowDropDownRoundedIcon, { className: clsx(classes.pullDownArrow) })));\n};\nButton.propTypes = {\n    color: Proptypes.oneOf(Object.values(colors)),\n    children: Proptypes.node,\n    className: Proptypes.string,\n    size: Proptypes.oneOf(Object.values(sizes)),\n    pullDown: Proptypes.bool,\n    startIcon: Proptypes.node,\n    endIcon: Proptypes.node\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}