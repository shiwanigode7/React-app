{"ast":null,"code":"import Service from \"@esko/cloud-service-utils/Service\";\nexport var proxyService = new Service(\"proxy\");\nexport var signout = function signout(_ref) {\n  var onError = _ref.onError,\n      logoutFromName = _ref.logoutFromName,\n      loginRedirect = _ref.loginRedirect;\n  var currentApp = window.location.host.split(\".\").splice(0, 1).join(\"\");\n  var ssoUrl = window.location.origin.replace(currentApp, \"sso\");\n  var redirectURL = loginRedirect ? loginRedirect : window.location.href;\n  proxyService.get([\"session\", \"my\", \"logout\"]).then(function (response) {\n    //query params need to be encoded as they are decoded on SSO logout to ensure not data loss on passing\n    var softLogoutURL = ssoUrl + \"/api/v1/logout?fromURI=\".concat(encodeURI(redirectURL), \"&name=\").concat(encodeURI(logoutFromName || currentApp));\n    window.location.href = softLogoutURL;\n  }, function (err) {\n    typeof onError === \"function\" ? onError(err) : console.log(err);\n  });\n};","map":{"version":3,"sources":["../../../../src/data/requests/proxy.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,mCAApB;AAEA,OAAO,IAAM,YAAY,GAAG,IAAI,OAAJ,CAAY,OAAZ,CAArB;AAEP,OAAO,IAAM,OAAO,GAAG,SAAV,OAAU,OAA+C;AAAA,MAA5C,OAA4C,QAA5C,OAA4C;AAAA,MAAnC,cAAmC,QAAnC,cAAmC;AAAA,MAAnB,aAAmB,QAAnB,aAAmB;AACrE,MAAM,UAAU,GAAG,MAAM,CAAC,QAAP,CAAgB,IAAhB,CACjB,KADiB,CACX,GADW,EAEjB,MAFiB,CAEV,CAFU,EAEP,CAFO,EAGjB,IAHiB,CAGZ,EAHY,CAAnB;AAIA,MAAM,MAAM,GAAG,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAuB,OAAvB,CAA+B,UAA/B,EAA2C,KAA3C,CAAf;AACA,MAAM,WAAW,GAAG,aAAa,GAAG,aAAH,GAAmB,MAAM,CAAC,QAAP,CAAgB,IAApE;AAEA,EAAA,YAAY,CAAC,GAAb,CAAiB,CAAC,SAAD,EAAY,IAAZ,EAAkB,QAAlB,CAAjB,EAA8C,IAA9C,CACC,UAAA,QAAQ,EAAG;AACV;AACA,QAAM,aAAa,GAAG,MAAM,oCAA6B,SAAS,CAAC,WAAD,CAAtC,mBAA4D,SAAS,CAAC,cAAc,IAAI,UAAnB,CAArE,CAA5B;AACA,IAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAAuB,aAAvB;AACA,GALF,EAMC,UAAA,GAAG,EAAG;AACL,WAAO,OAAP,KAAmB,UAAnB,GAAgC,OAAO,CAAC,GAAD,CAAvC,GAA+C,OAAO,CAAC,GAAR,CAAY,GAAZ,CAA/C;AACA,GARF;AAUA,CAlBM","sourceRoot":"","sourcesContent":["import Service from \"@esko/cloud-service-utils/Service\";\nexport const proxyService = new Service(\"proxy\");\nexport const signout = ({ onError, logoutFromName, loginRedirect }) => {\n    const currentApp = window.location.host\n        .split(\".\")\n        .splice(0, 1)\n        .join(\"\");\n    const ssoUrl = window.location.origin.replace(currentApp, \"sso\");\n    const redirectURL = loginRedirect ? loginRedirect : window.location.href;\n    proxyService.get([\"session\", \"my\", \"logout\"]).then(response => {\n        //query params need to be encoded as they are decoded on SSO logout to ensure not data loss on passing\n        const softLogoutURL = ssoUrl + `/api/v1/logout?fromURI=${encodeURI(redirectURL)}&name=${encodeURI(logoutFromName || currentApp)}`;\n        window.location.href = softLogoutURL;\n    }, err => {\n        typeof onError === \"function\" ? onError(err) : console.log(err);\n    });\n};\n//# sourceMappingURL=proxy.js.map"]},"metadata":{},"sourceType":"module"}