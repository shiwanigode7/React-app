{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Desc from \"@material-ui/icons/ArrowDownwardRounded\";\nimport Asc from \"@material-ui/icons/ArrowUpwardRounded\";\nimport Group from '@material-ui/icons/Group';\nimport { UserBadge } from \"@esko/cloud-ui-components\"; //Headers\n\nvar headerStyles = function headerStyles(theme) {\n  return {\n    flexContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      boxSizing: \"border-box\",\n      \"& .label\": {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n      }\n    },\n    headerCell: {\n      flex: 1,\n      border: \"none\"\n    },\n    activeHeader: {\n      cursor: \"pointer\"\n    },\n    sortArrow: {\n      paddingLeft: theme.spacing(1),\n      position: \"relative\",\n      lineHeight: 1\n    },\n    alignRight: {\n      justifyContent: \"flex-end\"\n    },\n    alignLeft: {\n      justifyContent: \"center\"\n    }\n  };\n};\n\nvar headerRendererClasses = makeStyles(headerStyles);\n\nvar SortArrow = function SortArrow(props) {\n  var sortBy = props.sortBy,\n      sortDirection = props.sortDirection,\n      dataKey = props.dataKey,\n      disableSort = props.disableSort,\n      classes = props.classes;\n\n  if (!disableSort && sortBy === dataKey) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.sortArrow\n    }, sortDirection.toUpperCase() === \"DESC\" ? /*#__PURE__*/React.createElement(Desc, null) : /*#__PURE__*/React.createElement(Asc, null));\n  } else {\n    return \"\";\n  }\n};\n\nvar BaseHeaderRenderer = function BaseHeaderRenderer(props) {\n  var _clsx;\n\n  var headerAlign = props.headerAlign,\n      headerClass = props.headerClass,\n      label = props.label,\n      disableSort = props.disableSort,\n      hasSort = props.hasSort,\n      sortBy = props.sortBy,\n      sortDirection = props.sortDirection; //classes\n\n  var headerClasses = headerRendererClasses();\n  var validHeaderAlign = typeof headerAlign === \"string\" && [\"center\", \"left\", \"right\"].indexOf(headerAlign.toLowerCase()) > -1 ? headerAlign.toLowerCase() : \"left\";\n  var validSortDir = typeof sortDirection == \"string\" && [\"ASC\", \"DESC\"].indexOf(sortDirection.toUpperCase()) > -1 ? sortDirection.toUpperCase() : \"\";\n  return /*#__PURE__*/React.createElement(TableCell, {\n    component: \"div\",\n    className: clsx(headerClasses.tableCell, headerClasses.flexContainer, (_clsx = {}, _defineProperty(_clsx, headerClasses.activeHeader, !!hasSort && !disableSort), _defineProperty(_clsx, headerClasses.alignRight, validHeaderAlign === \"right\"), _defineProperty(_clsx, headerClasses.alignCenter, validHeaderAlign === \"center\"), _clsx), headerClass),\n    variant: \"head\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\"\n  }, label), /*#__PURE__*/React.createElement(SortArrow, Object.assign({}, props, {\n    sortDirection: validSortDir,\n    classes: headerClasses\n  })));\n};\n\nexport var DefaultHeaderRenderer = function DefaultHeaderRenderer(props) {\n  return /*#__PURE__*/React.createElement(BaseHeaderRenderer, Object.assign({}, props));\n}; //Cells\n\nvar cellStyles = function cellStyles(theme) {\n  return {\n    flexContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      boxSizing: \"border-box\"\n    },\n    tableCell: {\n      flex: 1,\n      border: \"none\",\n      minWidth: 0,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    number: {\n      textAlign: \"right\",\n      justifyContent: \"flex-end\"\n    },\n    groupIcon: {\n      marginRight: theme.spacing(1)\n    },\n    longTextContainer: {\n      position: \"relative\",\n      lineHeight: \"1rem\",\n      maxHeight: \"2rem\",\n      overflow: \"hidden\",\n      paddingRight: \"1rem\",\n      \"&::before\": {\n        content: '\"...\"',\n        position: \"absolute\",\n        bottom: 0,\n        right: 0\n      }\n    },\n    longText: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      display: \"-webkit-box\",\n      WebkitLineClamp: 2,\n      WebkitBoxOrient: \"vertical\",\n      whiteSpace: \"break-spaces\"\n    }\n  };\n};\n\nvar cellRendererClasses = makeStyles(cellStyles);\n\nvar BaseCellRenderer = function BaseCellRenderer(props) {\n  var cellData = props.cellData,\n      classes = props.classes,\n      classesToAdd = props.classesToAdd; //classes\n\n  var localClasses = cellRendererClasses();\n\n  var addLocalClasses = function addLocalClasses(classesToAdd) {\n    var retClasses = \"\";\n\n    if (Array.isArray(classesToAdd)) {\n      retClasses = classesToAdd.map(function (cls) {\n        return localClasses[cls];\n      }).join(\" \");\n    }\n\n    return retClasses;\n  };\n\n  var isString = typeof cellData === \"string\";\n  return /*#__PURE__*/React.createElement(TableCell, {\n    component: \"div\",\n    className: clsx(localClasses.tableCell, _defineProperty({}, localClasses.flexContainer, !isString), addLocalClasses(classesToAdd), classes),\n    variant: \"body\",\n    onClick: function onClick() {},\n    title: isString ? cellData : \"\"\n  }, cellData);\n};\n\nexport var DefaultCellRenderer = function DefaultCellRenderer(props) {\n  return /*#__PURE__*/React.createElement(BaseCellRenderer, Object.assign({}, props));\n};\nexport var NumericCell = function NumericCell(props) {\n  return /*#__PURE__*/React.createElement(BaseCellRenderer, Object.assign({}, props, {\n    classesToAdd: [\"number\"]\n  }));\n}; //expected UserBadge Props to be on the row data object\n\nexport var UserCell = function UserCell(props) {\n  var rowData = props.rowData;\n  var firstThanLastName = rowData.firstThanLastName;\n  var newCellData = /*#__PURE__*/React.createElement(UserBadge, {\n    firstThanLastName: firstThanLastName,\n    variant: \"horizontal\",\n    size: \"small\",\n    userInfo: Object.assign({}, rowData)\n  });\n  return /*#__PURE__*/React.createElement(BaseCellRenderer, Object.assign({}, props, {\n    cellData: newCellData\n  }));\n};\nexport var GroupCell = function GroupCell(props) {\n  var displayName = props.rowData.displayName;\n\n  var _cellRendererClasses = cellRendererClasses(),\n      groupIcon = _cellRendererClasses.groupIcon,\n      tableCell = _cellRendererClasses.tableCell,\n      flexContainer = _cellRendererClasses.flexContainer;\n\n  var cellData = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Group, {\n    className: groupIcon\n  }), \" \" + displayName);\n  return /*#__PURE__*/React.createElement(TableCell, {\n    component: \"div\",\n    className: clsx(tableCell, flexContainer),\n    variant: \"body\"\n  }, cellData);\n};\nGroupCell.propTypes = {\n  rowData: PropTypes.object\n};\nexport var CreatedByCell = function CreatedByCell(props) {\n  var _props$rowData = props.rowData,\n      createdByDisplayName = _props$rowData.createdByDisplayName,\n      createdBy = _props$rowData.createdBy;\n\n  var _cellRendererClasses2 = cellRendererClasses(),\n      tableCell = _cellRendererClasses2.tableCell,\n      flexContainer = _cellRendererClasses2.flexContainer;\n\n  var displayText = createdByDisplayName || \"System\";\n  var cellData = /*#__PURE__*/React.createElement(\"span\", {\n    title: !createdByDisplayName ? createdBy : \"\"\n  }, displayText);\n  return /*#__PURE__*/React.createElement(TableCell, {\n    component: \"div\",\n    className: clsx(tableCell, flexContainer),\n    variant: \"body\"\n  }, cellData);\n};\nCreatedByCell.propTypes = {\n  rowData: PropTypes.object\n};\nexport var LongTextCell = function LongTextCell(props) {\n  var description = props.rowData.description;\n\n  var _cellRendererClasses3 = cellRendererClasses(),\n      tableCell = _cellRendererClasses3.tableCell,\n      flexContainer = _cellRendererClasses3.flexContainer,\n      longTextContainer = _cellRendererClasses3.longTextContainer,\n      longText = _cellRendererClasses3.longText;\n\n  var cellData = /*#__PURE__*/React.createElement(\"div\", {\n    title: description,\n    className: clsx(longText)\n  }, description);\n  return /*#__PURE__*/React.createElement(TableCell, {\n    component: \"div\",\n    className: clsx(tableCell, flexContainer),\n    variant: \"body\"\n  }, cellData);\n};\nLongTextCell.propTypes = {\n  rowData: PropTypes.object\n}; //Rows\n\nvar rowStyles = function rowStyles(theme) {\n  return {\n    odd: {\n      backgroundColor: theme.palette.type === \"light\" ? theme.palette.grey[50] : \"rgba(0,0,0,0.1)\"\n    },\n    activeRow: {\n      cursor: \"pointer\"\n    },\n    selectedRow: {\n      backgroundColor: theme.palette.type === \"light\" ? theme.palette.primary.light : theme.palette.secondary.light\n    },\n    tableRow: {\n      borderBottom: \"1px solid transparent\",\n      borderBottomColor: theme.palette.type === \"light\" ? theme.palette.grey[200] : theme.palette.grey[600]\n    },\n    tableRowHover: {\n      \"&:hover\": {\n        backgroundColor: theme.palette.type === \"light\" ? theme.palette.grey[300] : theme.palette.grey[800]\n      }\n    },\n    flexContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      boxSizing: \"border-box\"\n    }\n  };\n};\n\nvar rowRendererClasses = makeStyles(rowStyles);\n\nvar BaseRowRenderer = function BaseRowRenderer(_a) {\n  var classesToAdd = _a.classesToAdd,\n      rowRenderer = _a.rowRenderer,\n      row = __rest(_a, [\"classesToAdd\", \"rowRenderer\"]);\n\n  var rowClasses = rowRendererClasses();\n\n  var addRowClasses = function addRowClasses(classesToAdd) {\n    var retClasses = \"\";\n\n    if (Array.isArray(classesToAdd)) {\n      retClasses = classesToAdd.map(function (cls) {\n        return rowClasses[cls] || cls;\n      }).join(\" \");\n    }\n\n    return retClasses;\n  };\n\n  row.className = clsx(addRowClasses(classesToAdd), rowClasses.tableRow, rowClasses.tableRowHover, rowClasses.flexContainer, row.className);\n  return rowRenderer(row);\n};\n\nexport var DefaultRowRenderer = function DefaultRowRenderer(row, defaultTableRowRenderer) {\n  var classesToAdd = [];\n  var onRowClick = row.onRowClick,\n      isSelected = row.isSelected,\n      selectedRowClass = row.selectedRowClass;\n\n  if (typeof onRowClick === \"function\") {\n    classesToAdd.push(\"activeRow\");\n  }\n\n  if (isSelected) {\n    classesToAdd.push(selectedRowClass || \"selectedRow\");\n  }\n\n  return /*#__PURE__*/React.createElement(BaseRowRenderer, Object.assign({}, row, {\n    rowRenderer: defaultTableRowRenderer,\n    classesToAdd: classesToAdd\n  }));\n};\nexport var ZebraRowRenderer = function ZebraRowRenderer(row, defaultTableRowRenderer) {\n  var classesToAdd = [];\n  var onRowClick = row.onRowClick,\n      index = row.index,\n      isSelected = row.isSelected,\n      selectedRowClass = row.selectedRowClass;\n\n  if (typeof index != \"undefined\" && index % 2) {\n    classesToAdd.push(\"odd\");\n  }\n\n  if (typeof onRowClick === \"function\") {\n    classesToAdd.push(\"activeRow\");\n  }\n\n  if (isSelected) {\n    classesToAdd.push(selectedRowClass || \"selectedRow\");\n  }\n\n  return /*#__PURE__*/React.createElement(BaseRowRenderer, Object.assign({}, row, {\n    rowRenderer: defaultTableRowRenderer,\n    classesToAdd: classesToAdd\n  }));\n};","map":{"version":3,"sources":["../../../../src/components/DataView/renderers.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Desc from \"@material-ui/icons/ArrowDownwardRounded\";\nimport Asc from \"@material-ui/icons/ArrowUpwardRounded\";\nimport Group from '@material-ui/icons/Group';\nimport { UserBadge } from \"@esko/cloud-ui-components\";\n//Headers\nconst headerStyles = theme => ({\n    flexContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\",\n        \"& .label\": {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\"\n        }\n    },\n    headerCell: {\n        flex: 1,\n        border: \"none\"\n    },\n    activeHeader: {\n        cursor: \"pointer\"\n    },\n    sortArrow: {\n        paddingLeft: theme.spacing(1),\n        position: \"relative\",\n        lineHeight: 1\n    },\n    alignRight: {\n        justifyContent: \"flex-end\"\n    },\n    alignLeft: {\n        justifyContent: \"center\"\n    }\n});\nconst headerRendererClasses = makeStyles(headerStyles);\nconst SortArrow = props => {\n    const { sortBy, sortDirection, dataKey, disableSort, classes } = props;\n    if (!disableSort && sortBy === dataKey) {\n        return React.createElement(\"span\", { className: classes.sortArrow }, sortDirection.toUpperCase() === \"DESC\" ? React.createElement(Desc, null) : React.createElement(Asc, null));\n    }\n    else {\n        return \"\";\n    }\n};\nconst BaseHeaderRenderer = (props) => {\n    const { headerAlign, headerClass, label, disableSort, hasSort, sortBy, sortDirection } = props;\n    //classes\n    const headerClasses = headerRendererClasses();\n    const validHeaderAlign = typeof headerAlign === \"string\" && [\"center\", \"left\", \"right\"].indexOf(headerAlign.toLowerCase()) > -1 ? headerAlign.toLowerCase() : \"left\";\n    const validSortDir = typeof sortDirection == \"string\" && [\"ASC\", \"DESC\"].indexOf(sortDirection.toUpperCase()) > -1 ? sortDirection.toUpperCase() : \"\";\n    return (React.createElement(TableCell, { component: \"div\", className: clsx(headerClasses.tableCell, headerClasses.flexContainer, {\n            [headerClasses.activeHeader]: !!hasSort && !disableSort,\n            [headerClasses.alignRight]: validHeaderAlign === \"right\",\n            [headerClasses.alignCenter]: validHeaderAlign === \"center\",\n        }, headerClass), variant: \"head\" },\n        React.createElement(\"span\", { className: \"label\" }, label),\n        React.createElement(SortArrow, Object.assign({}, props, { sortDirection: validSortDir, classes: headerClasses }))));\n};\nexport const DefaultHeaderRenderer = (props) => {\n    return React.createElement(BaseHeaderRenderer, Object.assign({}, props));\n};\n//Cells\nconst cellStyles = theme => ({\n    flexContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\"\n    },\n    tableCell: {\n        flex: 1,\n        border: \"none\",\n        minWidth: 0,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\"\n    },\n    number: {\n        textAlign: \"right\",\n        justifyContent: \"flex-end\"\n    },\n    groupIcon: {\n        marginRight: theme.spacing(1)\n    },\n    longTextContainer: {\n        position: \"relative\",\n        lineHeight: \"1rem\",\n        maxHeight: \"2rem\",\n        overflow: \"hidden\",\n        paddingRight: \"1rem\",\n        \"&::before\": {\n            content: '\"...\"',\n            position: \"absolute\",\n            bottom: 0,\n            right: 0,\n        }\n    },\n    longText: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"-webkit-box\",\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: \"vertical\",\n        whiteSpace: \"break-spaces\"\n    }\n});\nconst cellRendererClasses = makeStyles(cellStyles);\nconst BaseCellRenderer = (props) => {\n    const { cellData, classes, classesToAdd } = props;\n    //classes\n    const localClasses = cellRendererClasses();\n    const addLocalClasses = classesToAdd => {\n        let retClasses = \"\";\n        if (Array.isArray(classesToAdd)) {\n            retClasses = classesToAdd.map(cls => localClasses[cls]).join(\" \");\n        }\n        return retClasses;\n    };\n    const isString = typeof cellData === \"string\";\n    return (React.createElement(TableCell, { component: \"div\", className: clsx(localClasses.tableCell, {\n            [localClasses.flexContainer]: !isString\n        }, addLocalClasses(classesToAdd), classes), variant: \"body\", onClick: () => { }, title: isString ? cellData : \"\" }, cellData));\n};\nexport const DefaultCellRenderer = (props) => {\n    return React.createElement(BaseCellRenderer, Object.assign({}, props));\n};\nexport const NumericCell = props => {\n    return React.createElement(BaseCellRenderer, Object.assign({}, props, { classesToAdd: [\"number\"] }));\n};\n//expected UserBadge Props to be on the row data object\nexport const UserCell = props => {\n    const { rowData } = props;\n    const { firstThanLastName } = rowData;\n    const newCellData = React.createElement(UserBadge, { firstThanLastName: firstThanLastName, variant: \"horizontal\", size: \"small\", userInfo: Object.assign({}, rowData) });\n    return React.createElement(BaseCellRenderer, Object.assign({}, props, { cellData: newCellData }));\n};\nexport const GroupCell = props => {\n    const { rowData: { displayName } } = props;\n    const { groupIcon, tableCell, flexContainer } = cellRendererClasses();\n    const cellData = React.createElement(React.Fragment, null,\n        React.createElement(Group, { className: groupIcon }),\n        \" \" + displayName);\n    return (React.createElement(TableCell, { component: \"div\", className: clsx(tableCell, flexContainer), variant: \"body\" }, cellData));\n};\nGroupCell.propTypes = { rowData: PropTypes.object };\nexport const CreatedByCell = props => {\n    const { rowData: { createdByDisplayName, createdBy } } = props;\n    const { tableCell, flexContainer } = cellRendererClasses();\n    const displayText = createdByDisplayName || \"System\";\n    const cellData = React.createElement(\"span\", { title: !createdByDisplayName ? createdBy : \"\" }, displayText);\n    return (React.createElement(TableCell, { component: \"div\", className: clsx(tableCell, flexContainer), variant: \"body\" }, cellData));\n};\nCreatedByCell.propTypes = { rowData: PropTypes.object };\nexport const LongTextCell = props => {\n    const { rowData: { description } } = props;\n    const { tableCell, flexContainer, longTextContainer, longText } = cellRendererClasses();\n    const cellData = React.createElement(\"div\", { title: description, className: clsx(longText) }, description);\n    return (React.createElement(TableCell, { component: \"div\", className: clsx(tableCell, flexContainer), variant: \"body\" }, cellData));\n};\nLongTextCell.propTypes = { rowData: PropTypes.object };\n//Rows\nconst rowStyles = theme => ({\n    odd: {\n        backgroundColor: theme.palette.type === \"light\" ? theme.palette.grey[50] : \"rgba(0,0,0,0.1)\"\n    },\n    activeRow: {\n        cursor: \"pointer\"\n    },\n    selectedRow: {\n        backgroundColor: theme.palette.type === \"light\" ? theme.palette.primary.light : theme.palette.secondary.light\n    },\n    tableRow: {\n        borderBottom: \"1px solid transparent\",\n        borderBottomColor: theme.palette.type === \"light\" ? theme.palette.grey[200] : theme.palette.grey[600]\n    },\n    tableRowHover: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.type === \"light\" ? theme.palette.grey[300] : theme.palette.grey[800]\n        }\n    },\n    flexContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\"\n    },\n});\nconst rowRendererClasses = makeStyles(rowStyles);\nconst BaseRowRenderer = (_a) => {\n    var { classesToAdd, rowRenderer } = _a, row = __rest(_a, [\"classesToAdd\", \"rowRenderer\"]);\n    const rowClasses = rowRendererClasses();\n    const addRowClasses = classesToAdd => {\n        let retClasses = \"\";\n        if (Array.isArray(classesToAdd)) {\n            retClasses = classesToAdd.map(cls => rowClasses[cls] || cls).join(\" \");\n        }\n        return retClasses;\n    };\n    row.className = clsx(addRowClasses(classesToAdd), rowClasses.tableRow, rowClasses.tableRowHover, rowClasses.flexContainer, row.className);\n    return rowRenderer(row);\n};\nexport const DefaultRowRenderer = (row, defaultTableRowRenderer) => {\n    const classesToAdd = [];\n    const { onRowClick, isSelected, selectedRowClass } = row;\n    if (typeof onRowClick === \"function\") {\n        classesToAdd.push(\"activeRow\");\n    }\n    if (isSelected) {\n        classesToAdd.push(selectedRowClass || \"selectedRow\");\n    }\n    return React.createElement(BaseRowRenderer, Object.assign({}, row, { rowRenderer: defaultTableRowRenderer, classesToAdd: classesToAdd }));\n};\nexport const ZebraRowRenderer = (row, defaultTableRowRenderer) => {\n    const classesToAdd = [];\n    const { onRowClick, index, isSelected, selectedRowClass } = row;\n    if (typeof index != \"undefined\" && index % 2) {\n        classesToAdd.push(\"odd\");\n    }\n    if (typeof onRowClick === \"function\") {\n        classesToAdd.push(\"activeRow\");\n    }\n    if (isSelected) {\n        classesToAdd.push(selectedRowClass || \"selectedRow\");\n    }\n    return React.createElement(BaseRowRenderer, Object.assign({}, row, { rowRenderer: defaultTableRowRenderer, classesToAdd: classesToAdd }));\n};\n//# sourceMappingURL=renderers.js.map"]},"metadata":{},"sourceType":"module"}