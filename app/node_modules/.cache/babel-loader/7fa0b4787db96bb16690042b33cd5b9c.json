{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { TableCell, Typography } from \"@material-ui/core\";\nimport Group from \"@material-ui/icons/Group\";\nimport { DataView } from \"@esko/cloud-ui-components\";\nimport { getOrgGroups } from \"../../data/requests/iam\";\nimport i18next from \"../../i18n/ecui-i18n\";\nimport { useTranslation, I18nextProvider } from \"react-i18next\";\n\nvar styles = function styles(theme) {\n  return {\n    flexContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      boxSizing: \"border-box\"\n    },\n    tableCell: {\n      flex: 1,\n      border: \"none\"\n    },\n    groupIcon: {\n      marginRight: theme.spacing(1)\n    },\n    longText: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      display: \"-webkit-box\",\n      WebkitLineClamp: 2,\n      WebkitBoxOrient: \"vertical\",\n      whiteSpace: \"break-spaces\"\n    },\n    takenRow: {\n      opacity: 0.6,\n      pointerEvents: \"none\"\n    },\n    selectedRow: {\n      backgroundColor: theme.palette.type === \"light\" ? theme.palette.primary.light : theme.palette.secondary.light\n    },\n    action: {\n      cursor: \"pointer\"\n    }\n  };\n};\n\nvar takenRow = function takenRow(_ref) {\n  var classes = _ref.classes,\n      takenRows = _ref.takenRows,\n      selectKey = _ref.selectKey;\n  return function (row, defaultTableRowRenderer) {\n    var _clsx;\n\n    var onRowClick = row.onRowClick,\n        isSelected = row.isSelected,\n        selectedRowClass = row.selectedRowClass;\n    row.className = clsx((_clsx = {}, _defineProperty(_clsx, classes.takenRow, takenRows.includes(row.rowData[selectKey])), _defineProperty(_clsx, classes.selectedRow, isSelected), _defineProperty(_clsx, classes.action, typeof onRowClick === \"function\"), _clsx), row.className);\n    return defaultTableRowRenderer(row);\n  };\n};\n\nvar GroupsInput = function GroupsInput(_ref2) {\n  var organization = _ref2.organization,\n      onError = _ref2.onError,\n      classes = _ref2.classes,\n      _ref2$takenGroups = _ref2.takenGroups,\n      takenGroups = _ref2$takenGroups === void 0 ? [] : _ref2$takenGroups,\n      actions = _ref2.actions;\n\n  var groupCell = function groupCell(props) {\n    var rowData = props.rowData;\n    var cellData = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Group, {\n      className: classes.groupIcon\n    }), \" \" + rowData.displayName);\n    return /*#__PURE__*/React.createElement(TableCell, {\n      component: \"div\",\n      className: clsx(classes.tableCell, classes.flexContainer),\n      variant: \"body\"\n    }, cellData);\n  };\n\n  var _useTranslation = useTranslation(\"components\"),\n      t = _useTranslation.t;\n\n  var managerCell = function managerCell(props) {\n    var rowData = props.rowData; //TOTR\n\n    var displayText = rowData.createdByDisplayName || t(\"system\");\n    var cellData = /*#__PURE__*/React.createElement(\"span\", {\n      title: !rowData.createdByDisplayName ? rowData.createdBy : \"\"\n    }, displayText);\n    return /*#__PURE__*/React.createElement(TableCell, {\n      component: \"div\",\n      className: clsx(classes.tableCell, classes.flexContainer),\n      variant: \"body\"\n    }, cellData);\n  };\n\n  var longTextCell = function longTextCell(props) {\n    var rowData = props.rowData;\n    var cellData = /*#__PURE__*/React.createElement(\"p\", {\n      title: rowData.description,\n      className: clsx(classes.longText)\n    }, rowData.description);\n    return /*#__PURE__*/React.createElement(TableCell, {\n      component: \"div\",\n      className: clsx(classes.tableCell, classes.flexContainer),\n      variant: \"body\"\n    }, cellData);\n  };\n\n  var selectedUserComponent = function selectedUserComponent(_ref3) {\n    var data = _ref3.data,\n        selectKey = _ref3.selectKey;\n    return /*#__PURE__*/React.createElement(Typography, {\n      className: clsx(classes.flexContainer),\n      variant: \"body1\"\n    }, /*#__PURE__*/React.createElement(Group, {\n      className: classes.groupIcon\n    }), \" \", data.displayName);\n  };\n\n  var handleOnSelectionChange = function handleOnSelectionChange(changed) {\n    console.log(changed);\n\n    if (typeof onSelectionChange == \"function\") {\n      onSelectionChange(changed);\n    }\n  };\n\n  var searchInitialState = {\n    sortBy: \"name\",\n    start: 0,\n    size: 5,\n    search: \"\",\n    sortDirection: \"asc\",\n    filterType: [\"createdByDisplayName\", \"groupName\", \"groupEmail\"]\n  };\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      groups = _React$useState2[0],\n      setGroups = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      search = _React$useState4[0],\n      setSearch = _React$useState4[1];\n\n  var sortGroups = function sortGroups(searchParams) {\n    getGroups(searchParams, true);\n  };\n\n  var getMoreGroups = function getMoreGroups(searchParams) {\n    getGroups(searchParams);\n  };\n\n  var searchGroups = function searchGroups(searchTerm) {\n    getGroups({\n      search: searchTerm,\n      startIndex: 0\n    }, true);\n  };\n\n  var getGroups = function getGroups(searchParams, clear) {\n    var clearWhenDone = !!clear;\n    setSearch(function (currSearch) {\n      var newSearch = Object.assign(Object.assign(Object.assign({}, currSearch), searchParams), {\n        start: _typeof(searchParams.startIndex) === undefined ? currSearch.start : searchParams.startIndex\n      });\n      getOrgGroups(Object.assign({\n        organization: organization\n      }, newSearch)).then(function (resp) {\n        //it's important total of the state is set before getting the new elements\n        setSearch(function (currSearch) {\n          return Object.assign(Object.assign({}, currSearch), {\n            total: resp.recordsTotal || undefined\n          });\n        });\n        setGroups(function (currGroups) {\n          var _a;\n\n          var newGroups = clearWhenDone ? [] : _toConsumableArray(currGroups);\n\n          if ((_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.length) {\n            newGroups = newGroups.concat(resp.data.map(function (usr) {\n              var displayName = usr.displayName,\n                  groupEmail = usr.groupEmail,\n                  description = usr.description,\n                  nodeId = usr.nodeId,\n                  createdBy = usr.createdBy,\n                  createdByDisplayName = usr.createdByDisplayName,\n                  name = usr.name;\n              return {\n                displayName: displayName,\n                groupEmail: groupEmail,\n                description: description,\n                nodeId: nodeId,\n                createdBy: createdBy,\n                createdByDisplayName: createdByDisplayName,\n                name: name\n              };\n            }));\n          }\n\n          return newGroups;\n        });\n      }, function (err) {\n        if (typeof onError === \"function\") {\n          onError(err);\n        } else {\n          alert(err);\n        }\n      });\n      return newSearch;\n    });\n  };\n\n  React.useEffect(function () {\n    setGroups([]);\n    getGroups(searchInitialState);\n  }, [organization]);\n  return /*#__PURE__*/React.createElement(I18nextProvider, {\n    i18n: i18next\n  }, /*#__PURE__*/React.createElement(DataView, {\n    list: groups,\n    selectable: \"multiple\",\n    onSelectionChange: handleOnSelectionChange,\n    onSearchChange: searchGroups,\n    selectableKey: \"name\",\n    rowHeight: 60,\n    headerHeight: 40,\n    selectallHeader: true,\n    actions: actions,\n    heightOfsset: 70,\n    sortBy: search.sortBy,\n    sortDirection: search.sortDirection,\n    sortMethod: sortGroups,\n    loadMoreRows: getMoreGroups,\n    total: search.total,\n    selectedComponent: selectedUserComponent,\n    defaultSelectedKeys: takenGroups,\n    rowRenderer: takenRow({\n      classes: classes,\n      takenRows: takenGroups,\n      selectKey: \"name\"\n    }),\n    columns: [{\n      widthTake: 0.4,\n      label: t(\"group\"),\n      dataKey: \"displayName\"\n    }, {\n      widthTake: 0.6,\n      label: t(\"description\"),\n      dataKey: \"description\",\n      cellRenderer: longTextCell,\n      disableSort: true\n    }]\n  }));\n};\n\nexport default withStyles(styles)(GroupsInput);","map":{"version":3,"sources":["../../../../src/components/Users/GroupsInput.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { TableCell, Typography } from \"@material-ui/core\";\nimport Group from \"@material-ui/icons/Group\";\nimport { DataView } from \"@esko/cloud-ui-components\";\nimport { getOrgGroups } from \"../../data/requests/iam\";\nimport i18next from \"../../i18n/ecui-i18n\";\nimport { useTranslation, I18nextProvider } from \"react-i18next\";\nconst styles = theme => ({\n    flexContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\"\n    },\n    tableCell: {\n        flex: 1,\n        border: \"none\"\n    },\n    groupIcon: {\n        marginRight: theme.spacing(1)\n    },\n    longText: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"-webkit-box\",\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: \"vertical\",\n        whiteSpace: \"break-spaces\"\n    },\n    takenRow: {\n        opacity: 0.6,\n        pointerEvents: \"none\"\n    },\n    selectedRow: {\n        backgroundColor: theme.palette.type === \"light\" ? theme.palette.primary.light : theme.palette.secondary.light\n    },\n    action: {\n        cursor: \"pointer\"\n    }\n});\nconst takenRow = ({ classes, takenRows, selectKey }) => (row, defaultTableRowRenderer) => {\n    const { onRowClick, isSelected, selectedRowClass } = row;\n    row.className = clsx({\n        [classes.takenRow]: takenRows.includes(row.rowData[selectKey]),\n        [classes.selectedRow]: isSelected,\n        [classes.action]: typeof onRowClick === \"function\"\n    }, row.className);\n    return defaultTableRowRenderer(row);\n};\nconst GroupsInput = ({ organization, onError, classes, takenGroups = [], actions }) => {\n    const groupCell = props => {\n        const { rowData } = props;\n        const cellData = (React.createElement(React.Fragment, null,\n            React.createElement(Group, { className: classes.groupIcon }),\n            \" \" + rowData.displayName));\n        return (React.createElement(TableCell, { component: \"div\", className: clsx(classes.tableCell, classes.flexContainer), variant: \"body\" }, cellData));\n    };\n    const { t } = useTranslation(\"components\");\n    const managerCell = props => {\n        const { rowData } = props;\n        //TOTR\n        const displayText = rowData.createdByDisplayName || t(\"system\");\n        const cellData = React.createElement(\"span\", { title: !rowData.createdByDisplayName ? rowData.createdBy : \"\" }, displayText);\n        return (React.createElement(TableCell, { component: \"div\", className: clsx(classes.tableCell, classes.flexContainer), variant: \"body\" }, cellData));\n    };\n    const longTextCell = props => {\n        const { rowData } = props;\n        const cellData = (React.createElement(\"p\", { title: rowData.description, className: clsx(classes.longText) }, rowData.description));\n        return (React.createElement(TableCell, { component: \"div\", className: clsx(classes.tableCell, classes.flexContainer), variant: \"body\" }, cellData));\n    };\n    const selectedUserComponent = ({ data, selectKey }) => (React.createElement(Typography, { className: clsx(classes.flexContainer), variant: \"body1\" },\n        React.createElement(Group, { className: classes.groupIcon }),\n        \" \",\n        data.displayName));\n    const handleOnSelectionChange = changed => {\n        console.log(changed);\n        if (typeof onSelectionChange == \"function\") {\n            onSelectionChange(changed);\n        }\n    };\n    const searchInitialState = {\n        sortBy: \"name\",\n        start: 0,\n        size: 5,\n        search: \"\",\n        sortDirection: \"asc\",\n        filterType: [\"createdByDisplayName\", \"groupName\", \"groupEmail\"]\n    };\n    const [groups, setGroups] = React.useState([]);\n    const [search, setSearch] = React.useState({});\n    const sortGroups = searchParams => {\n        getGroups(searchParams, true);\n    };\n    const getMoreGroups = searchParams => {\n        getGroups(searchParams);\n    };\n    const searchGroups = searchTerm => {\n        getGroups({\n            search: searchTerm,\n            startIndex: 0\n        }, true);\n    };\n    const getGroups = (searchParams, clear) => {\n        const clearWhenDone = !!clear;\n        setSearch(currSearch => {\n            const newSearch = Object.assign(Object.assign(Object.assign({}, currSearch), searchParams), { start: typeof searchParams.startIndex === undefined ? currSearch.start : searchParams.startIndex });\n            getOrgGroups(Object.assign({ organization }, newSearch)).then(resp => {\n                //it's important total of the state is set before getting the new elements\n                setSearch(currSearch => (Object.assign(Object.assign({}, currSearch), { total: resp.recordsTotal || undefined })));\n                setGroups(currGroups => {\n                    var _a;\n                    let newGroups = clearWhenDone ? [] : [...currGroups];\n                    if ((_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.length) {\n                        newGroups = newGroups.concat(resp.data.map(usr => {\n                            const { displayName, groupEmail, description, nodeId, createdBy, createdByDisplayName, name } = usr;\n                            return {\n                                displayName,\n                                groupEmail,\n                                description,\n                                nodeId,\n                                createdBy,\n                                createdByDisplayName,\n                                name\n                            };\n                        }));\n                    }\n                    return newGroups;\n                });\n            }, err => {\n                if (typeof onError === \"function\") {\n                    onError(err);\n                }\n                else {\n                    alert(err);\n                }\n            });\n            return newSearch;\n        });\n    };\n    React.useEffect(() => {\n        setGroups([]);\n        getGroups(searchInitialState);\n    }, [organization]);\n    return (React.createElement(I18nextProvider, { i18n: i18next },\n        React.createElement(DataView, { list: groups, selectable: \"multiple\", onSelectionChange: handleOnSelectionChange, onSearchChange: searchGroups, selectableKey: \"name\", rowHeight: 60, headerHeight: 40, selectallHeader: true, actions: actions, heightOfsset: 70, sortBy: search.sortBy, sortDirection: search.sortDirection, sortMethod: sortGroups, loadMoreRows: getMoreGroups, total: search.total, selectedComponent: selectedUserComponent, defaultSelectedKeys: takenGroups, rowRenderer: takenRow({ classes, takenRows: takenGroups, selectKey: \"name\" }), columns: [\n                {\n                    widthTake: 0.4,\n                    label: t(\"group\"),\n                    dataKey: \"displayName\"\n                },\n                {\n                    widthTake: 0.6,\n                    label: t(\"description\"),\n                    dataKey: \"description\",\n                    cellRenderer: longTextCell,\n                    disableSort: true\n                }\n            ] })));\n};\nexport default withStyles(styles)(GroupsInput);\n//# sourceMappingURL=GroupsInput.js.map"]},"metadata":{},"sourceType":"module"}