{"ast":null,"code":"import Service from '@esko/cloud-service-utils/Service';\nexport var searchService = new Service(\"search\");\nexport var searchInRepo = function searchInRepo(query, repoId, searchType, additionalHeaders) {\n  var headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (additionalHeaders) {\n    for (var headerName in additionalHeaders) {\n      headers[headerName] = additionalHeaders[headerName];\n    }\n  }\n\n  return searchService.post([\"_esko\", \"search\", searchType, \"repo\", repoId, \"_search\"], query, headers);\n};\nexport var searchInAccount = function searchInAccount(query, accountId, searchType, additionalHeaders) {\n  var headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (additionalHeaders) {\n    for (var headerName in additionalHeaders) {\n      headers[headerName] = additionalHeaders[headerName];\n    }\n  }\n\n  return searchService.post([\"_esko\", \"search\", searchType, \"account\", accountId, \"_search\"], query, headers);\n};\nexport var searchAll = function searchAll(query, searchType, additionalHeaders) {\n  var headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (additionalHeaders) {\n    for (var headerName in additionalHeaders) {\n      headers[headerName] = additionalHeaders[headerName];\n    }\n  }\n\n  return searchService.post([\"_esko\", \"search\", searchType, \"all\", \"_search\"], query, headers);\n};","map":{"version":3,"sources":["../../../../src/data/requests/search.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,mCAApB;AAEA,OAAO,IAAM,aAAa,GAAG,IAAI,OAAJ,CAAY,QAAZ,CAAtB;AAEP,OAAO,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD,EAAQ,MAAR,EAAgB,UAAhB,EAA4B,iBAA5B,EAAiD;AACzE,MAAM,OAAO,GAAG;AAAE,oBAAgB;AAAlB,GAAhB;;AAEA,MAAI,iBAAJ,EAAuB;AACnB,SAAI,IAAM,UAAV,IAAwB,iBAAxB;AAA2C,MAAA,OAAO,CAAC,UAAD,CAAP,GAAsB,iBAAiB,CAAC,UAAD,CAAvC;AAA3C;AACH;;AACD,SAAO,aAAa,CAAC,IAAd,CAAmB,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,MAAhC,EAAwC,MAAxC,EAAgD,SAAhD,CAAnB,EAA+E,KAA/E,EAAsF,OAAtF,CAAP;AACH,CAPM;AASP,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,KAAD,EAAQ,SAAR,EAAmB,UAAnB,EAA+B,iBAA/B,EAAoD;AAC/E,MAAM,OAAO,GAAG;AAAE,oBAAgB;AAAlB,GAAhB;;AAEA,MAAI,iBAAJ,EAAuB;AACnB,SAAI,IAAM,UAAV,IAAwB,iBAAxB;AAA2C,MAAA,OAAO,CAAC,UAAD,CAAP,GAAsB,iBAAiB,CAAC,UAAD,CAAvC;AAA3C;AACH;;AACD,SAAO,aAAa,CAAC,IAAd,CAAmB,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,SAAhC,EAA2C,SAA3C,EAAsD,SAAtD,CAAnB,EAAqF,KAArF,EAA4F,OAA5F,CAAP;AACH,CAPM;AASP,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD,EAAQ,UAAR,EAAoB,iBAApB,EAAyC;AAC9D,MAAM,OAAO,GAAG;AAAE,oBAAgB;AAAlB,GAAhB;;AAEA,MAAI,iBAAJ,EAAuB;AACnB,SAAI,IAAM,UAAV,IAAwB,iBAAxB;AAA2C,MAAA,OAAO,CAAC,UAAD,CAAP,GAAsB,iBAAiB,CAAC,UAAD,CAAvC;AAA3C;AACH;;AACD,SAAO,aAAa,CAAC,IAAd,CAAmB,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,KAAhC,EAAuC,SAAvC,CAAnB,EAAsE,KAAtE,EAA6E,OAA7E,CAAP;AACH,CAPM","sourceRoot":"","sourcesContent":["import Service from '@esko/cloud-service-utils/Service';\nexport const searchService = new Service(\"search\");\nexport const searchInRepo = (query, repoId, searchType, additionalHeaders) => {\n    const headers = { \"Content-Type\": \"application/json\" };\n    if (additionalHeaders) {\n        for (const headerName in additionalHeaders)\n            headers[headerName] = additionalHeaders[headerName];\n    }\n    return searchService.post([\"_esko\", \"search\", searchType, \"repo\", repoId, \"_search\"], query, headers);\n};\nexport const searchInAccount = (query, accountId, searchType, additionalHeaders) => {\n    const headers = { \"Content-Type\": \"application/json\" };\n    if (additionalHeaders) {\n        for (const headerName in additionalHeaders)\n            headers[headerName] = additionalHeaders[headerName];\n    }\n    return searchService.post([\"_esko\", \"search\", searchType, \"account\", accountId, \"_search\"], query, headers);\n};\nexport const searchAll = (query, searchType, additionalHeaders) => {\n    const headers = { \"Content-Type\": \"application/json\" };\n    if (additionalHeaders) {\n        for (const headerName in additionalHeaders)\n            headers[headerName] = additionalHeaders[headerName];\n    }\n    return searchService.post([\"_esko\", \"search\", searchType, \"all\", \"_search\"], query, headers);\n};\n//# sourceMappingURL=search.js.map"]},"metadata":{},"sourceType":"module"}