{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DataView, UserCell, UserBadge } from \"@esko/cloud-ui-components\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport MuiDialog from \"../Dialog/dialog\";\nimport { getOrgUsersJoin, getOrgGroupMembers, addOrgGroupMembers, removeOrgGroupMembers } from \"../../data/requests/iam\";\nimport Delete from '@material-ui/icons/Delete';\nimport Add from '@material-ui/icons/Add';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { Typography, IconButton, CircularProgress, Backdrop } from \"@material-ui/core\";\nimport useEventBus from \"../../utils/hooks/useEventBus\";\nvar styles = makeStyles(function () {\n  return {\n    membersData: {\n      height: \"45%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      textAlign: \"center\"\n    },\n    usersData: {\n      height: \"45%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      textAlign: \"center\"\n    },\n    dialogTitle: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    dialogPaper: {\n      height: '100%'\n    }\n  };\n});\n\nvar selectedUserComponent = function selectedUserComponent(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/React.createElement(UserBadge, {\n    variant: \"horizontal\",\n    size: \"small\",\n    userInfo: data,\n    firstThanLastName: false\n  });\n};\n\nselectedUserComponent.propTypes = {\n  data: PropTypes.object\n};\nvar LoadingBackdrop = withStyles({\n  root: {\n    position: \"absolute\",\n    zIndex: 1\n  }\n})(Backdrop);\n\nvar ManageGroupMembersDialog = function ManageGroupMembersDialog(_ref2) {\n  var open = _ref2.open,\n      organization = _ref2.organization,\n      handleOnClose = _ref2.handleOnClose,\n      selectedGroupRow = _ref2.selectedGroupRow,\n      selectedGroupData = _ref2.selectedGroupData,\n      handleError = _ref2.handleError,\n      repoId = _ref2.repoId,\n      t = _ref2.t;\n  var classes = styles();\n  var userSearchInitialState = {\n    sortBy: \"ec_s@surName\",\n    start: 0,\n    size: 20,\n    search: \"\",\n    sortDirection: \"asc\"\n  };\n  var memberSearchInitialState = {\n    sortBy: \"surName\",\n    start: 0,\n    size: 20,\n    search: \"\",\n    sortDirection: \"asc\",\n    searchType: [\"surName\", \"firstName\", \"displayName\", \"email\"]\n  };\n  var initMembersState = {\n    memberIds: [],\n    members: []\n  };\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isRefreshing = _useState2[0],\n      setIsRefreshing = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      members = _useState6[0],\n      setMembers = _useState6[1];\n\n  var _useState7 = useState(userSearchInitialState),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userSearch = _useState8[0],\n      setUserSearch = _useState8[1];\n\n  var _useState9 = useState(memberSearchInitialState),\n      _useState10 = _slicedToArray(_useState9, 2),\n      memberSearch = _useState10[0],\n      setMemberSearch = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedUsers = _useState12[0],\n      setSelectedUsers = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedMembers = _useState14[0],\n      setSelectedMembers = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showLoading = _useState16[0],\n      setShowLoading = _useState16[1];\n\n  var groupName = selectedGroupData[selectedGroupRow[0]].displayName;\n  var memberFilter = [{\n    bool: {\n      must_not: [{\n        term: {\n          \"ec_s@groupMembership\": repoId + \"/EC:IAM/Groups/\" + encodeURI(groupName)\n        }\n      }]\n    }\n  }];\n  var refreshView = useCallback(function () {\n    setIsRefreshing(true);\n  }, []);\n  var handleNewUserSelectionChange = useCallback(function (_ref3) {\n    var newSelectedData = _ref3.newSelectedData;\n    setSelectedUsers(newSelectedData);\n  }, []);\n  var handleMemberSelectionChange = useCallback(function (_ref4) {\n    var newSelectedData = _ref4.newSelectedData;\n    setSelectedMembers(newSelectedData);\n  }, []);\n  var socket = useRef();\n  var openSocket = useCallback(function () {\n    return socket.current = useEventBus({\n      path: \"\".concat(repoId, \"/EC:IAM/Users\")\n    });\n  }, [repoId, socket]);\n\n  var closeSocket = function closeSocket() {\n    var _a, _b;\n\n    return ((_a = socket.current) === null || _a === void 0 ? void 0 : _a.close) ? (_b = socket.current) === null || _b === void 0 ? void 0 : _b.close() : false;\n  };\n\n  useEffect(function () {\n    if (repoId) {\n      openSocket();\n    }\n\n    return function () {\n      return closeSocket();\n    };\n  }, [openSocket, repoId]);\n  var setRefreshListener = useCallback(function (_ref5) {\n    var callbackId = _ref5.callbackId,\n        _ref5$callback = _ref5.callback,\n        callback = _ref5$callback === void 0 ? function (msg) {\n      return console.log(msg);\n    } : _ref5$callback;\n    socket.current.listen(callback, callbackId);\n  }, []);\n\n  var setEventListeners = function setEventListeners(_ref6) {\n    var eventListeners = _ref6.eventListeners;\n\n    if (socket.current) {\n      for (var callback in eventListeners) {\n        setRefreshListener({\n          callbackId: callback,\n          callback: eventListeners[callback]\n        });\n      }\n    } else {\n      setIsRefreshing(true);\n    }\n  };\n\n  var handleAddGroupMembers = function handleAddGroupMembers(_ref7) {\n    var clearSelected = _ref7.clearSelected;\n    var membersToAdd = [];\n    var eventListeners = {};\n    var eventIds = Object.keys(selectedUsers);\n    setShowLoading(true);\n\n    for (var userId in selectedUsers) {\n      membersToAdd.push({\n        nodeId: selectedUsers[userId].nodeId,\n        path: selectedUsers[userId].path\n      });\n\n      if (socket.current) {\n        eventListeners[selectedUsers[userId].path] = function (msg) {\n          var jsonMsg = JSON.parse(msg.data);\n          var eventIdIndex = eventIds.indexOf(jsonMsg.path);\n\n          if (eventIdIndex !== -1) {\n            eventIds.splice(eventIdIndex, 1);\n            socket.current.stopListening(jsonMsg.path);\n          }\n\n          if (!eventIds.length) {\n            setIsRefreshing(true);\n          }\n        };\n      }\n    }\n\n    addOrgGroupMembers({\n      organization: organization,\n      groupName: groupName,\n      membersToAdd: membersToAdd\n    }).then(function () {\n      clearSelected();\n\n      if (socket.current) {\n        setEventListeners({\n          clearSelected: clearSelected,\n          eventListeners: eventListeners\n        });\n      } else {\n        setIsRefreshing(true);\n      }\n    }, function (error) {\n      handleError(error, t(\"gettingGroups\"));\n    });\n  };\n\n  var handleRemoveGroupMembers = function handleRemoveGroupMembers(_ref8) {\n    var clearSelected = _ref8.clearSelected;\n    var membersToRemove = [];\n    var eventListeners = {};\n    var eventIds = Object.keys(selectedMembers);\n    setShowLoading(true);\n\n    for (var userId in selectedMembers) {\n      membersToRemove.push({\n        nodeId: userId,\n        path: selectedMembers[userId].path\n      });\n\n      if (socket.current) {\n        eventListeners[userId] = function (msg) {\n          var jsonMsg = JSON.parse(msg.data);\n          var eventIdIndex = eventIds.indexOf(jsonMsg.nodeId);\n\n          if (eventIdIndex !== -1) {\n            eventIds.splice(eventIdIndex, 1);\n            socket.current.stopListening(jsonMsg.nodeId);\n          }\n\n          if (!eventIds.length) {\n            setIsRefreshing(true);\n          }\n        };\n      }\n    }\n\n    removeOrgGroupMembers({\n      organization: organization,\n      groupName: groupName,\n      membersToRemove: membersToRemove\n    }).then(function () {\n      clearSelected();\n\n      if (socket.current) {\n        setEventListeners({\n          clearSelected: clearSelected,\n          eventListeners: eventListeners\n        });\n      } else {\n        setIsRefreshing(true);\n      }\n    }, function (error) {\n      handleError(error, t(\"errorMessages.gettingGroupMembers\"));\n    });\n  };\n\n  var sortUsers = useCallback(function (searchParams) {\n    getAllUsers(searchParams, true);\n  }, [getAllUsers]);\n  var getMoreUsers = useCallback(function (searchParams) {\n    getAllUsers(searchParams);\n  }, [getAllUsers]);\n  var searchUsers = useCallback(function (searchTerm) {\n    getAllUsers({\n      search: searchTerm,\n      startIndex: 0\n    }, true);\n  }, [getAllUsers]);\n  var getAllUsers = useCallback(function () {\n    var searchParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var clear = arguments.length > 1 ? arguments[1] : undefined;\n    var clearWhenDone = !!clear;\n    setUserSearch(function (currSearch) {\n      var newSearch = Object.assign(Object.assign(Object.assign({}, currSearch), searchParams), {\n        start: _typeof(searchParams.startIndex) === undefined ? currSearch.start : searchParams.startIndex\n      });\n      getOrgUsersJoin(Object.assign(Object.assign({\n        organization: organization\n      }, newSearch), {\n        additionalFilters: memberFilter\n      })).then(function (usersResponse) {\n        //it's important total of the state is set before getting the new elements\n        setUserSearch(function (currSearch) {\n          return Object.assign(Object.assign({}, currSearch), {\n            total: usersResponse.hits.total || undefined\n          });\n        });\n        setUsers(function (currUsers) {\n          var _a, _b;\n\n          var newUsers = clearWhenDone ? [] : _toConsumableArray(currUsers);\n\n          if ((_b = (_a = usersResponse === null || usersResponse === void 0 ? void 0 : usersResponse.hits) === null || _a === void 0 ? void 0 : _a.hits) === null || _b === void 0 ? void 0 : _b.length) {\n            newUsers = newUsers.concat(usersResponse.hits.hits.map(function (user) {\n              var _ref9;\n\n              var nodeId = user._id,\n                  _source = user._source;\n              var path = _source.path,\n                  firstName = _source[\"ec_s@firstName\"],\n                  lastName = _source[\"ec_s@surName\"],\n                  email = _source[\"ec_s@email\"],\n                  displayName = _source[\"ec_t@displayName\"],\n                  role = _source[\"ec_s@function\"];\n              return _ref9 = {\n                nodeId: nodeId,\n                path: path,\n                firstName: firstName,\n                lastName: lastName\n              }, _defineProperty(_ref9, \"ec_s@email\", email), _defineProperty(_ref9, \"role\", role), _defineProperty(_ref9, \"ec_t@displayName\", displayName), _defineProperty(_ref9, \"firstThanLastName\", false), _ref9;\n            }));\n          }\n\n          return newUsers;\n        });\n      }, function (error) {\n        handleError(error, t(\"errorMessages.gettingUsers\"));\n      });\n      return newSearch;\n    });\n  }, [handleError, memberFilter, organization]);\n  var sortMembers = useCallback(function (searchParams) {\n    getGroupMembers(searchParams, true);\n  }, [getGroupMembers]);\n  var getMoreMembers = useCallback(function (searchParams) {\n    getGroupMembers(searchParams);\n  }, [getGroupMembers]);\n  var searchMembers = useCallback(function (searchTerm) {\n    getGroupMembers({\n      search: searchTerm,\n      startIndex: 0\n    }, true);\n  }, [getGroupMembers]);\n  var getGroupMembers = useCallback(function () {\n    var searchParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var clear = arguments.length > 1 ? arguments[1] : undefined;\n    var clearWhenDone = !!clear;\n    setMemberSearch(function (currSearch) {\n      var newSearch = Object.assign(Object.assign(Object.assign({}, currSearch), searchParams), {\n        start: _typeof(searchParams.startIndex) === undefined ? currSearch.start : searchParams.startIndex\n      });\n      getOrgGroupMembers(Object.assign({\n        organization: organization,\n        groupName: groupName\n      }, newSearch)).then(function (memberResponse) {\n        setMemberSearch(function (currSearch) {\n          return Object.assign(Object.assign({}, currSearch), {\n            total: memberResponse.recordsTotal || undefined\n          });\n        });\n        setMembers(function (currentMembers) {\n          var _a;\n\n          var newMembers = clearWhenDone ? [] : _toConsumableArray(currentMembers);\n\n          if ((_a = memberResponse === null || memberResponse === void 0 ? void 0 : memberResponse.data) === null || _a === void 0 ? void 0 : _a.length) {\n            newMembers = newMembers.concat(memberResponse.data.map(function (usr) {\n              var firstName = usr.firstName,\n                  lastName = usr.surName,\n                  displayName = usr.displayName,\n                  email = usr.email,\n                  location = usr.location,\n                  role = usr[\"function\"],\n                  nodeId = usr.nodeId,\n                  path = usr.path;\n              return {\n                nodeId: nodeId,\n                path: path,\n                firstName: firstName,\n                lastName: lastName,\n                email: email,\n                location: location,\n                role: role,\n                displayName: displayName,\n                firstThanLastName: false\n              };\n            }));\n          }\n\n          return newMembers;\n        });\n      }, function (error) {\n        handleError(error, t(\"errorMessages.gettingMembers\"));\n      });\n      return newSearch;\n    });\n  }, [groupName, handleError, organization]);\n  var initManageMembers = useCallback(function () {\n    getOrgGroupMembers(Object.assign({\n      organization: organization,\n      groupName: groupName\n    }, memberSearchInitialState)).then(function (memberResponse) {\n      var _a;\n\n      var newMembers = [];\n      var newUsers = [];\n\n      if ((_a = memberResponse === null || memberResponse === void 0 ? void 0 : memberResponse.data) === null || _a === void 0 ? void 0 : _a.length) {\n        setMemberSearch(function (currSearch) {\n          return Object.assign(Object.assign({}, currSearch), {\n            total: memberResponse.recordsTotal || undefined\n          });\n        });\n        newMembers = newMembers.concat(memberResponse.data.map(function (usr) {\n          var firstName = usr.firstName,\n              lastName = usr.surName,\n              displayName = usr.displayName,\n              email = usr.email,\n              location = usr.location,\n              role = usr[\"function\"],\n              nodeId = usr.nodeId,\n              path = usr.path;\n          return {\n            nodeId: nodeId,\n            path: path,\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            location: location,\n            role: role,\n            displayName: displayName,\n            firstThanLastName: false\n          };\n        }));\n      }\n\n      getOrgUsersJoin(Object.assign(Object.assign({\n        organization: organization\n      }, userSearchInitialState), {\n        additionalFilters: memberFilter\n      })).then(function (usersResponse) {\n        var _a, _b; //it's important total of the state is set before getting the new elements\n\n\n        setUserSearch(function (currSearch) {\n          return Object.assign(Object.assign({}, currSearch), {\n            total: usersResponse.hits.total || undefined\n          });\n        });\n\n        if ((_b = (_a = usersResponse === null || usersResponse === void 0 ? void 0 : usersResponse.hits) === null || _a === void 0 ? void 0 : _a.hits) === null || _b === void 0 ? void 0 : _b.length) {\n          newUsers = newUsers.concat(usersResponse.hits.hits.map(function (user) {\n            var _ref10;\n\n            var nodeId = user._id,\n                _source = user._source;\n            var path = _source.path,\n                firstName = _source[\"ec_s@firstName\"],\n                lastName = _source[\"ec_s@surName\"],\n                email = _source[\"ec_s@email\"],\n                role = _source[\"ec_s@function\"],\n                displayName = _source[\"ec_t@displayName\"];\n            return _ref10 = {\n              nodeId: nodeId,\n              path: path,\n              firstName: firstName,\n              lastName: lastName\n            }, _defineProperty(_ref10, \"ec_s@email\", email), _defineProperty(_ref10, \"role\", role), _defineProperty(_ref10, \"ec_t@displayName\", displayName), _defineProperty(_ref10, \"firstThanLastName\", false), _ref10;\n          }));\n        }\n\n        setMembers(newMembers);\n        setUsers(newUsers);\n        setShowLoading(false);\n      }, function (error) {\n        handleError(error, t(\"errorMessages.gettingUSers\"));\n      });\n    }, function (error) {\n      handleError(error, t(\"errorMessages.gettingMembers\"));\n    });\n  }, [groupName, handleError, memberFilter, memberSearchInitialState, organization, userSearchInitialState]);\n  var memberActionButtons = [{\n    icon: /*#__PURE__*/React.createElement(Delete, null),\n    label: t(\"removeMember_plural\"),\n    condition: \"multiple\",\n    onClick: handleRemoveGroupMembers,\n    title: t(\"removeMember_plural\")\n  }];\n  var userActionButtons = [{\n    icon: /*#__PURE__*/React.createElement(Add, null),\n    label: t(\"addUser_plural\"),\n    onClick: handleAddGroupMembers,\n    condition: \"multiple\",\n    title: t(\"addUser_plural\")\n  }];\n\n  var memberResultMessage = function memberResultMessage() {\n    var messageComponent;\n\n    if (memberSearch.search) {\n      messageComponent = function messageComponent(_ref11) {\n        var loaded = _ref11.loaded;\n        return \"( \".concat(t(\"countObjectsFound\", {\n          count: loaded,\n          object: t(\"member\", {\n            count: loaded\n          })\n        }), \" )\");\n      };\n    } else {\n      messageComponent = function messageComponent(_ref12) {\n        var total = _ref12.total,\n            loaded = _ref12.loaded;\n        var message;\n\n        if (!loaded) {\n          message = \"( \".concat(t(\"noMembersToDisplay\"), \")\");\n        } else {\n          message = \"( \".concat(t(\"showingCountOfTotalObjects\", {\n            count: loaded,\n            total: total,\n            object: t(\"member\", {\n              count: loaded\n            })\n          }), \" )\");\n        }\n\n        return message;\n      };\n    }\n\n    return messageComponent;\n  };\n\n  var userResultMessage = function userResultMessage() {\n    var messageComponent;\n\n    if (userSearch.search) {\n      messageComponent = function messageComponent(_ref13) {\n        var loaded = _ref13.loaded;\n        return \"( \".concat(t(\"countObjectsFound\", {\n          count: loaded,\n          object: t(\"user\", {\n            count: loaded\n          })\n        }), \" )\");\n      };\n    } else {\n      messageComponent = function messageComponent(_ref14) {\n        var total = _ref14.total,\n            loaded = _ref14.loaded;\n        var message;\n\n        if (!loaded) {\n          message = \"( \".concat(t(\"noUsersToDisplay\"), \")\");\n        } else {\n          message = \"( \".concat(t(\"showingCountOfTotalObjects\", {\n            count: loaded,\n            total: total,\n            object: t(\"user\", {\n              count: loaded\n            })\n          }), \" )\");\n        }\n\n        return message;\n      };\n    }\n\n    return messageComponent;\n  };\n\n  useEffect(function () {\n    if (isRefreshing) {\n      if (!showLoading) {\n        setShowLoading(true);\n      }\n\n      setMembers([]);\n      setUsers([]);\n      setSelectedUsers([]);\n      setSelectedMembers([]);\n      setUserSearch(userSearchInitialState);\n      setMemberSearch(memberSearchInitialState);\n      initManageMembers();\n      setIsRefreshing(false);\n    }\n  }, [initManageMembers, initMembersState, isRefreshing, memberSearchInitialState, showLoading, userSearchInitialState]);\n  return /*#__PURE__*/React.createElement(MuiDialog, {\n    disableTitleTypography: true,\n    classes: {\n      paper: classes.dialogPaper\n    },\n    title: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.dialogTitle\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        padding: \"0 12px 0 0\"\n      },\n      title: t(\"backToGroups\"),\n      onClick: handleOnClose\n    }, /*#__PURE__*/React.createElement(ArrowBackIcon, null)), /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        padding: \"0 12px 0 0\"\n      },\n      title: t(\"refresh\"),\n      onClick: refreshView\n    }, /*#__PURE__*/React.createElement(RefreshIcon, null)), /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textAlign: \"left\"\n      },\n      variant: \"h5\"\n    }, t(\"groupMembers\", {\n      group: selectedGroupData[selectedGroupRow[0]].displayName\n    }))),\n    maxWidth: \"md\",\n    fullWidth: true,\n    open: open,\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LoadingBackdrop, {\n      className: classes.backdrop,\n      open: showLoading\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"inherit\"\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.membersData\n    }, /*#__PURE__*/React.createElement(DataView, {\n      list: members,\n      actions: memberActionButtons,\n      selectable: \"multiple\",\n      onSelectionChange: handleMemberSelectionChange,\n      onSearchChange: searchMembers,\n      selectableKey: \"nodeId\",\n      heightOfsset: 105,\n      sortBy: memberSearch.sortBy,\n      sortDirection: memberSearch.sortDirection,\n      sortMethod: sortMembers,\n      loadMoreRows: getMoreMembers,\n      total: memberSearch.total,\n      resultsMessage: memberResultMessage(),\n      columns: [{\n        widthTake: .5,\n        label: t(\"user\"),\n        dataKey: \"displayName\",\n        cellRenderer: UserCell\n      }, {\n        widthTake: .5,\n        label: t(\"email\"),\n        dataKey: \"email\"\n      }]\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.usersData\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textAlign: \"left\"\n      },\n      variant: \"h5\"\n    }, t(\"availableUsers\")), /*#__PURE__*/React.createElement(DataView, {\n      list: users,\n      actions: userActionButtons,\n      selectable: \"multiple\",\n      onSelectionChange: handleNewUserSelectionChange,\n      onSearchChange: searchUsers,\n      selectableKey: \"path\",\n      heightOfsset: 105,\n      sortBy: userSearch.sortBy,\n      sortDirection: userSearch.sortDirection,\n      sortMethod: sortUsers,\n      loadMoreRows: getMoreUsers,\n      total: userSearch.total,\n      resultsMessage: userResultMessage(),\n      selectedComponent: selectedUserComponent,\n      columns: [{\n        widthTake: .5,\n        label: t(\"user\"),\n        dataKey: \"ec_t@displayName\",\n        cellRenderer: UserCell\n      }, {\n        widthTake: .5,\n        label: t(\"email\"),\n        dataKey: \"ec_s@email\"\n      }]\n    })))\n  });\n};\n\nManageGroupMembersDialog.propTypes = {\n  open: PropTypes.bool,\n  organization: PropTypes.string,\n  handleOnClose: PropTypes.func,\n  selectedRows: PropTypes.array,\n  selectedRowData: PropTypes.object,\n  selectedGroupRow: PropTypes.string,\n  selectedGroupData: PropTypes.object,\n  handleError: PropTypes.func,\n  repoId: PropTypes.string\n};\nexport default ManageGroupMembersDialog;","map":{"version":3,"sources":["../../../../src/components/Groups/manageGroupMembersDialog.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DataView, UserCell, UserBadge } from \"@esko/cloud-ui-components\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport MuiDialog from \"../Dialog/dialog\";\nimport { getOrgUsersJoin, getOrgGroupMembers, addOrgGroupMembers, removeOrgGroupMembers } from \"../../data/requests/iam\";\nimport Delete from '@material-ui/icons/Delete';\nimport Add from '@material-ui/icons/Add';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { Typography, IconButton, CircularProgress, Backdrop } from \"@material-ui/core\";\nimport useEventBus from \"../../utils/hooks/useEventBus\";\nconst styles = makeStyles(() => ({\n    membersData: {\n        height: \"45%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\"\n    },\n    usersData: {\n        height: \"45%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\"\n    },\n    dialogTitle: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    dialogPaper: {\n        height: '100%'\n    },\n}));\nconst selectedUserComponent = ({ data }) => React.createElement(UserBadge, { variant: \"horizontal\", size: \"small\", userInfo: data, firstThanLastName: false });\nselectedUserComponent.propTypes = { data: PropTypes.object };\nconst LoadingBackdrop = withStyles({\n    root: {\n        position: \"absolute\",\n        zIndex: 1\n    }\n})(Backdrop);\nconst ManageGroupMembersDialog = ({ open, organization, handleOnClose, selectedGroupRow, selectedGroupData, handleError, repoId, t }) => {\n    const classes = styles();\n    const userSearchInitialState = {\n        sortBy: \"ec_s@surName\",\n        start: 0,\n        size: 20,\n        search: \"\",\n        sortDirection: \"asc\",\n    };\n    const memberSearchInitialState = {\n        sortBy: \"surName\",\n        start: 0,\n        size: 20,\n        search: \"\",\n        sortDirection: \"asc\",\n        searchType: [\"surName\", \"firstName\", \"displayName\", \"email\"]\n    };\n    const initMembersState = {\n        memberIds: [],\n        members: []\n    };\n    const [isRefreshing, setIsRefreshing] = useState(true);\n    const [users, setUsers] = useState([]);\n    const [members, setMembers] = useState([]);\n    const [userSearch, setUserSearch] = useState(userSearchInitialState);\n    const [memberSearch, setMemberSearch] = useState(memberSearchInitialState);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [selectedMembers, setSelectedMembers] = useState([]);\n    const [showLoading, setShowLoading] = useState(false);\n    const groupName = selectedGroupData[selectedGroupRow[0]].displayName;\n    const memberFilter = [{\n            bool: {\n                must_not: [\n                    {\n                        term: {\n                            \"ec_s@groupMembership\": repoId + \"/EC:IAM/Groups/\" + encodeURI(groupName)\n                        }\n                    }\n                ]\n            }\n        }];\n    const refreshView = useCallback(() => {\n        setIsRefreshing(true);\n    }, []);\n    const handleNewUserSelectionChange = useCallback(({ newSelectedData }) => {\n        setSelectedUsers(newSelectedData);\n    }, []);\n    const handleMemberSelectionChange = useCallback(({ newSelectedData }) => {\n        setSelectedMembers(newSelectedData);\n    }, []);\n    const socket = useRef();\n    const openSocket = useCallback(() => socket.current = useEventBus({ path: `${repoId}/EC:IAM/Users` }), [repoId, socket]);\n    const closeSocket = () => { var _a, _b; return ((_a = socket.current) === null || _a === void 0 ? void 0 : _a.close) ? (_b = socket.current) === null || _b === void 0 ? void 0 : _b.close() : false; };\n    useEffect(() => {\n        if (repoId) {\n            openSocket();\n        }\n        return () => closeSocket();\n    }, [openSocket, repoId]);\n    const setRefreshListener = useCallback(({ callbackId, callback = (msg) => console.log(msg) }) => {\n        socket.current.listen(callback, callbackId);\n    }, []);\n    const setEventListeners = ({ eventListeners }) => {\n        if (socket.current) {\n            for (const callback in eventListeners) {\n                setRefreshListener({\n                    callbackId: callback,\n                    callback: eventListeners[callback]\n                });\n            }\n        }\n        else {\n            setIsRefreshing(true);\n        }\n    };\n    const handleAddGroupMembers = ({ clearSelected }) => {\n        let membersToAdd = [];\n        let eventListeners = {};\n        let eventIds = Object.keys(selectedUsers);\n        setShowLoading(true);\n        for (const userId in selectedUsers) {\n            membersToAdd.push({\n                nodeId: selectedUsers[userId].nodeId,\n                path: selectedUsers[userId].path\n            });\n            if (socket.current) {\n                eventListeners[selectedUsers[userId].path] = msg => {\n                    const jsonMsg = JSON.parse(msg.data);\n                    const eventIdIndex = eventIds.indexOf(jsonMsg.path);\n                    if (eventIdIndex !== -1) {\n                        eventIds.splice(eventIdIndex, 1);\n                        socket.current.stopListening(jsonMsg.path);\n                    }\n                    if (!eventIds.length) {\n                        setIsRefreshing(true);\n                    }\n                };\n            }\n        }\n        addOrgGroupMembers({ organization, groupName, membersToAdd }).then(() => {\n            clearSelected();\n            if (socket.current) {\n                setEventListeners({ clearSelected, eventListeners });\n            }\n            else {\n                setIsRefreshing(true);\n            }\n        }, error => {\n            handleError(error, t(\"gettingGroups\"));\n        });\n    };\n    const handleRemoveGroupMembers = ({ clearSelected }) => {\n        let membersToRemove = [];\n        let eventListeners = {};\n        let eventIds = Object.keys(selectedMembers);\n        setShowLoading(true);\n        for (const userId in selectedMembers) {\n            membersToRemove.push({\n                nodeId: userId,\n                path: selectedMembers[userId].path\n            });\n            if (socket.current) {\n                eventListeners[userId] = msg => {\n                    const jsonMsg = JSON.parse(msg.data);\n                    const eventIdIndex = eventIds.indexOf(jsonMsg.nodeId);\n                    if (eventIdIndex !== -1) {\n                        eventIds.splice(eventIdIndex, 1);\n                        socket.current.stopListening(jsonMsg.nodeId);\n                    }\n                    if (!eventIds.length) {\n                        setIsRefreshing(true);\n                    }\n                };\n            }\n        }\n        removeOrgGroupMembers({ organization, groupName, membersToRemove }).then(() => {\n            clearSelected();\n            if (socket.current) {\n                setEventListeners({ clearSelected, eventListeners });\n            }\n            else {\n                setIsRefreshing(true);\n            }\n        }, error => {\n            handleError(error, t(\"errorMessages.gettingGroupMembers\"));\n        });\n    };\n    const sortUsers = useCallback(searchParams => {\n        getAllUsers(searchParams, true);\n    }, [getAllUsers]);\n    const getMoreUsers = useCallback(searchParams => {\n        getAllUsers(searchParams);\n    }, [getAllUsers]);\n    const searchUsers = useCallback(searchTerm => {\n        getAllUsers({\n            search: searchTerm,\n            startIndex: 0\n        }, true);\n    }, [getAllUsers]);\n    const getAllUsers = useCallback((searchParams = {}, clear) => {\n        const clearWhenDone = !!clear;\n        setUserSearch(currSearch => {\n            const newSearch = Object.assign(Object.assign(Object.assign({}, currSearch), searchParams), { start: typeof searchParams.startIndex === undefined ? currSearch.start : searchParams.startIndex });\n            getOrgUsersJoin(Object.assign(Object.assign({ organization }, newSearch), { additionalFilters: memberFilter })).then(usersResponse => {\n                //it's important total of the state is set before getting the new elements\n                setUserSearch(currSearch => (Object.assign(Object.assign({}, currSearch), { total: usersResponse.hits.total || undefined })));\n                setUsers(currUsers => {\n                    var _a, _b;\n                    let newUsers = clearWhenDone ? [] : [...currUsers];\n                    if ((_b = (_a = usersResponse === null || usersResponse === void 0 ? void 0 : usersResponse.hits) === null || _a === void 0 ? void 0 : _a.hits) === null || _b === void 0 ? void 0 : _b.length) {\n                        newUsers = newUsers.concat(usersResponse.hits.hits.map(user => {\n                            const { _id: nodeId, _source } = user;\n                            const { path, [\"ec_s@firstName\"]: firstName, [\"ec_s@surName\"]: lastName, [\"ec_s@email\"]: email, [\"ec_t@displayName\"]: displayName, [\"ec_s@function\"]: role, } = _source;\n                            return ({\n                                nodeId,\n                                path,\n                                firstName,\n                                lastName,\n                                [\"ec_s@email\"]: email,\n                                role,\n                                [\"ec_t@displayName\"]: displayName,\n                                firstThanLastName: false\n                            });\n                        }));\n                    }\n                    return newUsers;\n                });\n            }, error => {\n                handleError(error, t(\"errorMessages.gettingUsers\"));\n            });\n            return newSearch;\n        });\n    }, [handleError, memberFilter, organization]);\n    const sortMembers = useCallback(searchParams => {\n        getGroupMembers(searchParams, true);\n    }, [getGroupMembers]);\n    const getMoreMembers = useCallback(searchParams => {\n        getGroupMembers(searchParams);\n    }, [getGroupMembers]);\n    const searchMembers = useCallback(searchTerm => {\n        getGroupMembers({\n            search: searchTerm,\n            startIndex: 0\n        }, true);\n    }, [getGroupMembers]);\n    const getGroupMembers = useCallback((searchParams = {}, clear) => {\n        const clearWhenDone = !!clear;\n        setMemberSearch(currSearch => {\n            const newSearch = Object.assign(Object.assign(Object.assign({}, currSearch), searchParams), { start: typeof searchParams.startIndex === undefined ? currSearch.start : searchParams.startIndex });\n            getOrgGroupMembers(Object.assign({ organization, groupName }, newSearch)).then(memberResponse => {\n                setMemberSearch(currSearch => (Object.assign(Object.assign({}, currSearch), { total: memberResponse.recordsTotal || undefined })));\n                setMembers(currentMembers => {\n                    var _a;\n                    let newMembers = clearWhenDone ? [] : [...currentMembers];\n                    if ((_a = memberResponse === null || memberResponse === void 0 ? void 0 : memberResponse.data) === null || _a === void 0 ? void 0 : _a.length) {\n                        newMembers = newMembers.concat(memberResponse.data.map(usr => {\n                            const { firstName, surName: lastName, displayName, email, location, function: role, nodeId, path } = usr;\n                            return ({\n                                nodeId,\n                                path,\n                                firstName,\n                                lastName,\n                                email,\n                                location,\n                                role,\n                                displayName,\n                                firstThanLastName: false\n                            });\n                        }));\n                    }\n                    return newMembers;\n                });\n            }, error => {\n                handleError(error, t(\"errorMessages.gettingMembers\"));\n            });\n            return newSearch;\n        });\n    }, [groupName, handleError, organization]);\n    const initManageMembers = useCallback(() => {\n        getOrgGroupMembers(Object.assign({ organization, groupName }, memberSearchInitialState)).then(memberResponse => {\n            var _a;\n            let newMembers = [];\n            let newUsers = [];\n            if ((_a = memberResponse === null || memberResponse === void 0 ? void 0 : memberResponse.data) === null || _a === void 0 ? void 0 : _a.length) {\n                setMemberSearch(currSearch => (Object.assign(Object.assign({}, currSearch), { total: memberResponse.recordsTotal || undefined })));\n                newMembers = newMembers.concat(memberResponse.data.map(usr => {\n                    const { firstName, surName: lastName, displayName, email, location, function: role, nodeId, path } = usr;\n                    return ({\n                        nodeId,\n                        path,\n                        firstName,\n                        lastName,\n                        email,\n                        location,\n                        role,\n                        displayName,\n                        firstThanLastName: false\n                    });\n                }));\n            }\n            getOrgUsersJoin(Object.assign(Object.assign({ organization }, userSearchInitialState), { additionalFilters: memberFilter })).then(usersResponse => {\n                var _a, _b;\n                //it's important total of the state is set before getting the new elements\n                setUserSearch(currSearch => (Object.assign(Object.assign({}, currSearch), { total: usersResponse.hits.total || undefined })));\n                if ((_b = (_a = usersResponse === null || usersResponse === void 0 ? void 0 : usersResponse.hits) === null || _a === void 0 ? void 0 : _a.hits) === null || _b === void 0 ? void 0 : _b.length) {\n                    newUsers = newUsers.concat(usersResponse.hits.hits.map(user => {\n                        const { _id: nodeId, _source } = user;\n                        const { path, [\"ec_s@firstName\"]: firstName, [\"ec_s@surName\"]: lastName, [\"ec_s@email\"]: email, [\"ec_s@function\"]: role, [\"ec_t@displayName\"]: displayName, } = _source;\n                        return ({\n                            nodeId,\n                            path,\n                            firstName,\n                            lastName,\n                            [\"ec_s@email\"]: email,\n                            role,\n                            [\"ec_t@displayName\"]: displayName,\n                            firstThanLastName: false\n                        });\n                    }));\n                }\n                setMembers(newMembers);\n                setUsers(newUsers);\n                setShowLoading(false);\n            }, error => {\n                handleError(error, t(\"errorMessages.gettingUSers\"));\n            });\n        }, error => {\n            handleError(error, t(\"errorMessages.gettingMembers\"));\n        });\n    }, [groupName, handleError, memberFilter, memberSearchInitialState, organization, userSearchInitialState]);\n    const memberActionButtons = [\n        {\n            icon: React.createElement(Delete, null),\n            label: t(\"removeMember_plural\"),\n            condition: \"multiple\",\n            onClick: handleRemoveGroupMembers,\n            title: t(\"removeMember_plural\")\n        },\n    ];\n    const userActionButtons = [\n        {\n            icon: React.createElement(Add, null),\n            label: t(\"addUser_plural\"),\n            onClick: handleAddGroupMembers,\n            condition: \"multiple\",\n            title: t(\"addUser_plural\"),\n        },\n    ];\n    const memberResultMessage = () => {\n        let messageComponent;\n        if (memberSearch.search) {\n            messageComponent = ({ loaded }) => `( ${t(\"countObjectsFound\", { count: loaded, object: t(\"member\", { count: loaded }) })} )`;\n        }\n        else {\n            messageComponent = ({ total, loaded }) => {\n                let message;\n                if (!loaded) {\n                    message = `( ${t(\"noMembersToDisplay\")})`;\n                }\n                else {\n                    message = `( ${t(\"showingCountOfTotalObjects\", { count: loaded, total, object: t(\"member\", { count: loaded }) })} )`;\n                }\n                return message;\n            };\n        }\n        return messageComponent;\n    };\n    const userResultMessage = () => {\n        let messageComponent;\n        if (userSearch.search) {\n            messageComponent = ({ loaded }) => `( ${t(\"countObjectsFound\", { count: loaded, object: t(\"user\", { count: loaded }) })} )`;\n        }\n        else {\n            messageComponent = ({ total, loaded }) => {\n                let message;\n                if (!loaded) {\n                    message = `( ${t(\"noUsersToDisplay\")})`;\n                }\n                else {\n                    message = `( ${t(\"showingCountOfTotalObjects\", { count: loaded, total, object: t(\"user\", { count: loaded }) })} )`;\n                }\n                return message;\n            };\n        }\n        return messageComponent;\n    };\n    useEffect(() => {\n        if (isRefreshing) {\n            if (!showLoading) {\n                setShowLoading(true);\n            }\n            setMembers([]);\n            setUsers([]);\n            setSelectedUsers([]);\n            setSelectedMembers([]);\n            setUserSearch(userSearchInitialState);\n            setMemberSearch(memberSearchInitialState);\n            initManageMembers();\n            setIsRefreshing(false);\n        }\n    }, [initManageMembers, initMembersState, isRefreshing, memberSearchInitialState, showLoading, userSearchInitialState]);\n    return (React.createElement(MuiDialog, { disableTitleTypography: true, classes: { paper: classes.dialogPaper }, title: React.createElement(\"div\", { className: classes.dialogTitle },\n            React.createElement(IconButton, { style: { padding: \"0 12px 0 0\" }, title: t(\"backToGroups\"), onClick: handleOnClose },\n                React.createElement(ArrowBackIcon, null)),\n            React.createElement(IconButton, { style: { padding: \"0 12px 0 0\" }, title: t(\"refresh\"), onClick: refreshView },\n                React.createElement(RefreshIcon, null)),\n            React.createElement(Typography, { style: { textAlign: \"left\" }, variant: \"h5\" }, t(\"groupMembers\", { group: selectedGroupData[selectedGroupRow[0]].displayName }))), maxWidth: \"md\", fullWidth: true, open: open, content: React.createElement(React.Fragment, null,\n            React.createElement(LoadingBackdrop, { className: classes.backdrop, open: showLoading },\n                React.createElement(CircularProgress, { color: \"inherit\" })),\n            React.createElement(\"div\", { className: classes.membersData },\n                React.createElement(DataView, { list: members, actions: memberActionButtons, selectable: \"multiple\", onSelectionChange: handleMemberSelectionChange, onSearchChange: searchMembers, selectableKey: \"nodeId\", heightOfsset: 105, sortBy: memberSearch.sortBy, sortDirection: memberSearch.sortDirection, sortMethod: sortMembers, loadMoreRows: getMoreMembers, total: memberSearch.total, resultsMessage: memberResultMessage(), columns: [\n                        {\n                            widthTake: .5,\n                            label: t(\"user\"),\n                            dataKey: \"displayName\",\n                            cellRenderer: UserCell\n                        },\n                        {\n                            widthTake: .5,\n                            label: t(\"email\"),\n                            dataKey: \"email\"\n                        }\n                    ] })),\n            React.createElement(\"div\", { className: classes.usersData },\n                React.createElement(Typography, { style: { textAlign: \"left\" }, variant: \"h5\" }, t(\"availableUsers\")),\n                React.createElement(DataView, { list: users, actions: userActionButtons, selectable: \"multiple\", onSelectionChange: handleNewUserSelectionChange, onSearchChange: searchUsers, selectableKey: \"path\", heightOfsset: 105, sortBy: userSearch.sortBy, sortDirection: userSearch.sortDirection, sortMethod: sortUsers, loadMoreRows: getMoreUsers, total: userSearch.total, resultsMessage: userResultMessage(), selectedComponent: selectedUserComponent, columns: [\n                        {\n                            widthTake: .5,\n                            label: t(\"user\"),\n                            dataKey: \"ec_t@displayName\",\n                            cellRenderer: UserCell\n                        },\n                        {\n                            widthTake: .5,\n                            label: t(\"email\"),\n                            dataKey: \"ec_s@email\"\n                        },\n                    ] }))) }));\n};\nManageGroupMembersDialog.propTypes = {\n    open: PropTypes.bool,\n    organization: PropTypes.string,\n    handleOnClose: PropTypes.func,\n    selectedRows: PropTypes.array,\n    selectedRowData: PropTypes.object,\n    selectedGroupRow: PropTypes.string,\n    selectedGroupData: PropTypes.object,\n    handleError: PropTypes.func,\n    repoId: PropTypes.string\n};\nexport default ManageGroupMembersDialog;\n//# sourceMappingURL=manageGroupMembersDialog.js.map"]},"metadata":{},"sourceType":"module"}