{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar themeSpecificStyleHooks = {\n  useErrorStyles: makeStyles(function (theme) {\n    var themeSpecificStyles = {\n      light: {\n        titleStyle: {\n          color: theme.palette.error.light\n        },\n        contentStyle: {\n          color: theme.palette.error.light\n        }\n      },\n      dark: {\n        titleStyle: {\n          color: theme.palette.error.contrastText,\n          backgroundColor: theme.palette.error.dark\n        },\n        contentStyle: {\n          color: theme.palette.error.contrastText,\n          backgroundColor: theme.palette.error.dark\n        },\n        actionsStyle: {\n          backgroundColor: theme.palette.error.dark\n        }\n      }\n    };\n    return themeSpecificStyles[theme.palette.type];\n  })\n};\n\nvar MuiDialog = function MuiDialog(_ref) {\n  var _ref$classes = _ref.classes,\n      classes = _ref$classes === void 0 ? {} : _ref$classes,\n      title = _ref.title,\n      open = _ref.open,\n      content = _ref.content,\n      actions = _ref.actions,\n      _ref$scroll = _ref.scroll,\n      scroll = _ref$scroll === void 0 ? \"paper\" : _ref$scroll,\n      themeSpecificStyleHook = _ref.themeSpecificStyleHook,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      _ref$maxWidth = _ref.maxWidth,\n      maxWidth = _ref$maxWidth === void 0 ? \"xs\" : _ref$maxWidth,\n      _ref$fullScreen = _ref.fullScreen,\n      fullScreen = _ref$fullScreen === void 0 ? false : _ref$fullScreen,\n      _ref$disableTitleTypo = _ref.disableTitleTypography,\n      disableTitleTypography = _ref$disableTitleTypo === void 0 ? false : _ref$disableTitleTypo;\n\n  var _ref2 = themeSpecificStyleHook ? themeSpecificStyleHooks[themeSpecificStyleHook]() : {},\n      titleStyle = _ref2.titleStyle,\n      contentStyle = _ref2.contentStyle,\n      actionsStyle = _ref2.actionsStyle;\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    classes: classes,\n    scroll: scroll,\n    fullScreen: fullScreen,\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, title && /*#__PURE__*/React.createElement(DialogTitle, {\n    className: titleStyle || \"\",\n    id: \"confirmation-dialog-title\",\n    disableTypography: disableTitleTypography\n  }, title), /*#__PURE__*/React.createElement(DialogContent, {\n    className: contentStyle || \"\",\n    dividers: true\n  }, content), /*#__PURE__*/React.createElement(DialogActions, {\n    className: actionsStyle || \"\"\n  }, actions));\n};\n\nMuiDialog.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.string,\n  open: PropTypes.bool,\n  content: PropTypes.object,\n  actions: PropTypes.object,\n  scroll: PropTypes.string,\n  themeSpecificStyleHook: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  maxWidth: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  disableTitleTypography: PropTypes.bool\n};\nexport default MuiDialog;","map":{"version":3,"sources":["../../../../src/components/Dialog/dialog.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst themeSpecificStyleHooks = {\n    useErrorStyles: makeStyles(theme => {\n        const themeSpecificStyles = {\n            light: {\n                titleStyle: {\n                    color: theme.palette.error.light\n                },\n                contentStyle: {\n                    color: theme.palette.error.light\n                }\n            },\n            dark: {\n                titleStyle: {\n                    color: theme.palette.error.contrastText,\n                    backgroundColor: theme.palette.error.dark\n                },\n                contentStyle: {\n                    color: theme.palette.error.contrastText,\n                    backgroundColor: theme.palette.error.dark\n                },\n                actionsStyle: {\n                    backgroundColor: theme.palette.error.dark\n                }\n            }\n        };\n        return themeSpecificStyles[theme.palette.type];\n    }),\n};\nconst MuiDialog = ({ classes = {}, title, open, content, actions, scroll = \"paper\", themeSpecificStyleHook, fullWidth = false, maxWidth = \"xs\", fullScreen = false, disableTitleTypography = false }) => {\n    const { titleStyle, contentStyle, actionsStyle } = themeSpecificStyleHook ? themeSpecificStyleHooks[themeSpecificStyleHook]() : {};\n    return (React.createElement(Dialog, { classes: classes, scroll: scroll, fullScreen: fullScreen, fullWidth: fullWidth, maxWidth: maxWidth, \"aria-labelledby\": \"confirmation-dialog-title\", open: open },\n        title && React.createElement(DialogTitle, { className: titleStyle || \"\", id: \"confirmation-dialog-title\", disableTypography: disableTitleTypography }, title),\n        React.createElement(DialogContent, { className: contentStyle || \"\", dividers: true }, content),\n        React.createElement(DialogActions, { className: actionsStyle || \"\" }, actions)));\n};\nMuiDialog.propTypes = {\n    classes: PropTypes.object,\n    title: PropTypes.string,\n    open: PropTypes.bool,\n    content: PropTypes.object,\n    actions: PropTypes.object,\n    scroll: PropTypes.string,\n    themeSpecificStyleHook: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    maxWidth: PropTypes.string,\n    fullScreen: PropTypes.bool,\n    disableTitleTypography: PropTypes.bool\n};\nexport default MuiDialog;\n//# sourceMappingURL=dialog.js.map"]},"metadata":{},"sourceType":"module"}